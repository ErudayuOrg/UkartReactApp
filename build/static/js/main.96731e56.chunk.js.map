{"version":3,"sources":["core-components/tile.jsx","core-components/field.jsx","core-components/loader.jsx","redux/misc/misc.const.js","redux/misc/misc.action.js","APP_CONST.js","core-components/notifier.jsx","core-components/scrollToTop.jsx","core-components/dialogModal.jsx","utils/modelutils.js","redux/customer/customer.const.js","redux/customer/customer.reducer.js","redux/product/product.const.js","redux/product/product.reducer.js","redux/directory/directory.reducer.js","redux/misc/misc.reducer.js","redux/cart/cart.const.js","redux/cart/cart.reducer.js","redux/checkout/checkout.const.js","redux/checkout/checkout.reducer.js","redux/root.reducer.js","redux/store.js","core-components/banner.jsx","components/misc/footer.jsx","redux/customer/customer.selector.js","redux/cart/cart.selector.js","redux/customer/customer.action.js","redux/cart/cart.action.js","redux/checkout/checkout.selector.js","redux/product/product.selector.js","utils/util.js","utils/cartUtils.js","api/api.const.js","api/api.js","components/loginSignup/cutomerQuickLinks.jsx","components/misc/header.jsx","components/misc/directory.jsx","redux/directory/directory.selector.js","components/product/wishlistButton.jsx","components/product/productOverview.jsx","components/product/productSliderButtons.jsx","components/product/productSlider.jsx","pages/homePage.jsx","redux/product/product.action.js","utils/loginUtils.js","components/loginSignup/login.jsx","components/loginSignup/signup.jsx","pages/loginSignupPage.jsx","components/misc/breadcrum.jsx","components/product/productLeftSection.jsx","components/product/productRightSection.jsx","components/product/productDetails.jsx","pages/productPage.jsx","components/product/productList.jsx","pages/directoryPage.jsx","components/cart/emptyCart.jsx","components/priceDetail.jsx","components/itemList.jsx","pages/cartPage.jsx","redux/checkout/checkout.action.js","components/checkout/loginCheck.jsx","components/checkout/deliveryAddress/addressForm.jsx","components/checkout/deliveryAddress/addressDetails.jsx","components/checkout/deliveryAddress/addressList.jsx","components/checkout/deliveryAddress/deliveryAddressCheck.jsx","components/checkout/orderSummary/orderSummaryCheck.jsx","components/checkout/paymentOption/paymentOptionCheck.jsx","pages/checkoutPage.jsx","components/orders/orderOverview.jsx","components/orders/ordersList.jsx","pages/ordersPage.jsx","components/orders/orderedProduct.jsx","components/orders/orderedAddress.jsx","components/orders/orderTracker.jsx","pages/orderDetailsPage.jsx","App.js","redux/misc/misc.selector.js","index.js"],"names":["Tile","this","props","header","headerClass","title","children","className","footer","footerClass","onClick","Component","Field","getFieldByType","inputType","errorlabel","handleChange","otherProps","type","pattern","id","label","htmlFor","Loader","role","MISC_CONST","lOADER_STATE","ERROR_MSG","SUCCESS_MSG","setLoader","status","payload","setErrorMessage","errorMsgs","message","setSuccessMessage","successMsgs","APP_CONST","SUCCESS","FAILURE","CHECKED","OPEN","STEP","ONE","TWO","THREE","FOUR","QUERY","PRODUCT_ID","ORDER_STATUS","1","2","3","4","5","DATE_FORMAT","MDtY","DyDtM","Notifier","removeMessage","removeErrorMessage","removeSuccessMessage","messageType","messages","alertClass","map","index","key","data-dismiss","aria-label","aria-hidden","React","connect","dispatch","ScrollToTop","prevProps","location","pathname","window","scrollTo","withRouter","DialogModal","document","body","style","overflow","fill","viewBox","width","height","d","to","getValue","object","defaultValue","get","setValue","value","set","CUSTOMER_CONST","CUSTOMER_LOGIN","CUSTOMER_LOGOUT","CUSTOMER_ADDRESSES","CUSTOMER_ORDERS","userReducer","currentState","action","loginDetails","addresses","orders","PRODUCT_CONST","HOME_PRODUCTS","PRODUCT_SELECTED","INITIAL_STATE","productReducer","homeProducts","selectedProduct","categories","directoryReducer","loaderReducer","loader","error","success","CART_CONST","ADD_ITEM","REMOVE_ITEM","MERGE_CUSTOMER_CART","EMPTY_CART","ADD_ITEMS","cartItems","cartReducer","filter","product","productId","CHECKOUT_CONST","CHECKOUT_INITIALIZE","STEP_STATUS","DELIVERY_ADDRESS_SELECTED","DELIVERY_ADDRESS_CONFIRMED","ITEMS_TO_CHECKOUT","CHECKOUT_TERMINATE","checkoutReducer","step","stepTwo","selectedAddressId","confirmedAddressId","stepThree","checkoutItems","persistConfig","storage","whitelist","rootReducer","combineReducers","Customer","customerReducer","Directory","Product","Misc","miscReducer","Cart","Checkout","persistReducer","store","createStore","applyMiddleware","logger","persistor","persistStore","Banner","items","data-ride","length","item","src","imageUrl","alt","altName","href","data-slide","Footer","getCustomerLoginStatus","getState","getCustomerName","getCustomerLoginToken","getCustomerAddresses","getCustomerOrders","getCartItems","logoutCustomer","setCustomerAddresses","mergeCustomerCart","customerCartItems","emptyCart","getCheckoutStepStatus","getSelectedAddressId","getConfirmedAddressId","getCheckoutItems","getHomeProducts","calculatePriceAfterDiscount","actualPrice","discount","calculateSavingPrice","numberToPrice","number","toFixed","getProductById","products","find","getProductsByType","name","toLowerCase","capitalize","str","charAt","toUpperCase","slice","getBreadcrumSections","sections","link","push","category","subCategory","productName","getAddressById","address","_id","beforeUnloadListener","e","preventDefault","returnValue","prepareOrderDetails","quantity","paymentType","deliveryAddress","mapProductsInOrders","order","sellerId","productImages","getCurrentStatusDate","statusTrack","date","getFormattedDate","unFormattedDate","format","newDate","Date","getDate","day","Intl","DateTimeFormat","weekday","month","year","getFullYear","isCartHasThisItem","cartitem","newItem","some","mapCartProductsToIds","removeSelectedProducts","selectedProducts","HOST","URL","PRODUCTS","CUSTOMER_ACCOUNT_CREATE","CART_ITEMS_SAVE","CUSTOMER_ADDRESS_ADD","CUSTOMER_ADDRESS_UPDATE","PLACE_ORDER","saveCartItems","cartProductIds","customerLoginToken","headers","axios","put","cartProducts","then","data","catch","response","errorMessage","addCustomerAddress","addressDetails","updateCustomerAddress","placeOrder","orderDetails","post","CutomerQuickLinks","api","reject","navigateToOrders","history","customerName","errors","customerLoggedIn","hideCart","hideLogin","WishlistButton","toggleHeart","setState","wish","state","ProductOverview","brand","productActualPrice","Fragment","ProductSliderButtons","rightEnd","leftEnd","moveRight","moveleft","disabled","ProductSlider","left","start","end","visibleProducts","right","caroselitems","HomePage","addHomeProducts","trending","fashions","electronics","validateEmail","email","test","validateMobileNumber","mobileNo","validatePassword","password","validateText","text","errorLabel","userId","Login","validateForm","savedCartItems","forEach","cartItem","result","handleSubmit","event","loginCustomer","customerEmail","customerMobile","customerPassword","token","customerData","customerId","loginStatus","loginToken","cart","goBack","target","onChange","textDecoration","user","username","rePassword","Signup","validateUsername","accountDetails","LoginSignupPage","path","useRouteMatch","component","Breadcrum","section","ProductLeftSection","addToCart","addItemToCart","buyNow","ProductRightSection","rating","description","highlights","highlight","ProductDetails","element","isEmpty","ProductPage","setCurrentProduct","breadcrumSections","availableProducts","match","params","ProductList","DirectoryPage","productsByType","EmptyCart","loggedInCartSection","loggedOutCartSection","Loggedin","PriceDetail","totalItems","actualTotalPrice","discountPrice","totalPrice","price","calculateCartActualPrice","calculateCartDiscountPrice","ItemList","handleRemoveItem","CartPage","removeItemFromCart","handlePlaceOrder","setCheckoutStepStatus","setSelectedAddressId","addressId","setConfirmedAddressId","LoginCheck","getHeaderContent","color","logoutAndSignin","changeDetail","setCheckoutStatus","continueCheckout","showUncheckedLogin","isLoggedIn","showCheckedLogin","stepOneStatus","receiverName","receiverMobile","area","pincode","city","landmark","addressType","AddressForm","pin","setAsDeliveryAddress","closeform","saveAndDeliver","serviceApi","maxLength","checked","AddressDetails","getAddressType","editAddress","setEditAddressId","handleSelectedAddress","handleDeliveryAddress","isSelectedAddress","selectClass","AddressList","editAddressId","DeliveryAddressCheck","setDefaultSelectedAddress","selectedAddress","toggleAddressform","addAddress","showUncheckedDeliveryAddress","stepTwoStatus","showCheckedDeliveryAddress","confirmedAddress","logintoken","OrderSummaryCheck","confirmCheckoutItem","moveItemfromCheckout","removeItemFromCheckout","showUncheckedOrderSummary","stepThreeStatus","showCheckedOrderSummary","checkedItem","PaymentOptionCheck","confirmOrder","cleanCartAndAddItems","orderedProducts","showUncheckedPaymentOption","stepFourStatus","showCheckedPaymentOption","CheckoutPage","addEventListener","loginCheck","initializeCheckout","moveItemsToCheckout","queriedProductId","removeEventListener","terminateCheckout","checkoutSecionClass","search","query","URLSearchParams","paymentCheck","stepOne","stepFour","OrderOverview","navigateToOrderDetail","orderId","thumnail","orderedDate","OrdersList","productImage","orderPrice","statusCd","sort","a","b","createdAt","OrdersPage","setCustomerOrders","OrderedProduct","OrderedAddress","OrderTracker","tracks","tracker","track","cd","expectedDate","getTime","expectedTrack","removeIndex","mapOrderStatusDetails","completion","background","OrderDetailsPage","App","loaderOn","exact","ReactDOM","render","getElementById"],"mappings":"yUAEqBA,E,4JACjB,WACI,MAA0FC,KAAKC,MAAvFC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YAAaC,EAA7B,EAA6BA,MAAOC,EAApC,EAAoCA,SAAUC,EAA9C,EAA8CA,UAAWC,EAAzD,EAAyDA,OAAQC,EAAjE,EAAiEA,YAAaC,EAA9E,EAA8EA,QAC9E,OACI,yBAAKH,UAAWA,EAAWG,QAASA,GAChC,yBAAKH,UAAU,qBACVJ,GAAU,yBAAKI,UAAS,sBAAiBH,IAAgBD,GAC1D,yBAAKI,UAAU,aACVF,GAASA,EACTC,GAEJE,GAAU,yBAAKD,UAAS,sBAAiBE,IAA/B,IAAgDD,EAAhD,W,GAXGG,a,QCAbC,E,4MAEjBC,eAAiB,SAACX,GACd,IAAQY,EAAuDZ,EAAvDY,UAAyBC,GAA8Bb,EAA5Cc,aAA4Cd,EAA9Ba,YAAeE,EAAhD,YAA+Df,EAA/D,2CACMK,EAAS,uBAAmBQ,EAAY,aAAc,IAC5D,OAAOD,GACH,IAAK,UAAW,OACZ,yCACII,KAAK,OACLX,UAAWA,GACPU,IAGZ,IAAK,WAAY,OACb,yCACIC,KAAK,WACLX,UAAWA,GACPU,IAGZ,IAAK,SAAU,OACX,yCACIC,KAAK,OACLC,QAAQ,OACRZ,UAAWA,GACPU,IAGZ,IAAK,QAAS,OACV,yCACIC,KAAK,QACLX,UAAU,wBACNU,IAGZ,QAAS,MAAO,Q,4CAIxB,WACI,MAA6ChB,KAAKC,MAA1CkB,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,MAAON,EAAnB,EAAmBA,WACnB,MACkB,UAFlB,EAA+BD,UAGvB,yBAAKP,UAAU,qDACVN,KAAKY,eAAeZ,KAAKC,OAC1B,2BAAOK,UAAU,gCAAgCe,QAASF,GAAKC,IAGnE,yBAAKd,UAAU,4BACX,2BAAOe,QAASF,GAAKC,GACpBpB,KAAKY,eAAeZ,KAAKC,OACzBa,GAAc,yBAAKR,UAAU,oBAAoBQ,Q,GAnDnCJ,aCUpBY,EAVA,kBACX,yBAAKhB,UAAU,iBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,yCAAyCiB,KAAK,UACzD,0BAAMjB,UAAU,WAAhB,kBCDDkB,EALI,CACfC,aAAc,eACdC,UAAW,oBACXC,YAAa,uBCDJC,EAAY,SAACC,GAAD,MAAa,CAClCZ,KAAMO,EAAWC,aACjBK,QAAS,CAACD,YAGDE,EAAkB,SAACC,GAAD,MAAgB,CAC3Cf,KAAMO,EAAWE,UACjBI,QAAS,CAACG,QAAQD,KAGTE,EAAoB,SAACC,GAAD,MAAkB,CAC/ClB,KAAMO,EAAWG,YACjBG,QAAS,CAACG,QAAQE,KCaPC,EA3BG,CACdC,QAAU,UACVC,QAAU,UACVC,QAAS,UACTC,KAAM,OACNC,KAAK,CACDC,IAAI,MACJC,IAAI,MACJC,MAAM,QACNC,KAAK,QAETC,MAAM,CACFC,WAAY,aAEhBC,aAAa,CACTC,EAAE,UACFC,EAAE,SACFC,EAAE,UACFC,EAAE,mBACFC,EAAE,aAENC,YAAY,CACRC,KAAO,kBACPC,MAAQ,mBCbVC,E,4MAEJC,cAAgB,WACd,MAAgE,EAAKzD,MAA9D0D,EAAP,EAAOA,mBAAoBC,EAA3B,EAA2BA,qBAA3B,EAAiDC,cAC9BzB,EAAUC,QAC3BuB,IAGAD,K,4CAIJ,WACE,MAAkC3D,KAAKC,MAA/B6D,EAAR,EAAQA,SACFC,EADN,EAAkBF,cACiBzB,EAAUC,QAAQ,gBAAgB,eACrE,OACE,yBAAK/B,UAAU,4DACb,yBAAKA,UAAS,gBAAWyD,EAAX,sBAA2CxC,KAAK,SAC5D,wBAAIjB,UAAU,QAAd,IAAuBwD,EAASE,KAAI,SAAC/B,EAAQgC,GAAT,OAAkB,wBAAIC,IAAKD,GAAO,4BAAKhC,OAA3E,KACE,4BACEhB,KAAK,SACLX,UAAU,QACV6D,eAAa,QACbC,aAAW,QACX3D,QAAWT,KAAK0D,eAElB,0BAAMW,cAAY,QAAlB,e,GA1BWC,IAAM5D,WAkCd6D,cAAQ,MAvCI,SAACC,GAAD,MAAe,CACxCb,mBAAoB,kBAAMa,EAASzC,EAAgB,MACnD6B,qBAAsB,kBAAMY,EAAStC,EAAkB,SAqC1CqC,CAAkCd,GC1C3CgB,E,wKACJ,SAAmBC,GACb1E,KAAKC,MAAM0E,SAASC,WAAaF,EAAUC,SAASC,UACtDC,OAAOC,SAAS,EAAG,K,oBAIvB,WACE,OAAO,S,GAReR,IAAM5D,WAYjBqE,cAAWN,GCZpBO,E,uKACF,WACIC,SAASC,KAAKC,MAAMC,SAAW,W,kCAGnC,WACIH,SAASC,KAAKC,MAAMC,SAAW,O,oBAGnC,WACI,OACI,yBAAK9E,UAAU,iBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,yBACX,yBAAK+E,KAAK,mBAAmBC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,MAC/D,0BAAMC,EAAE,4IAEZ,wBAAInF,UAAU,mBAAd,gCACA,kBAAC,IAAD,CAAMoF,GAAG,SAASpF,UAAU,wBAAuB,wD,GAnBrDI,aA4BXsE,IC5BFW,EAAW,SAACC,EAAQ1B,EAAK2B,GAAd,OAA+BC,cAAIF,EAAQ1B,EAAK2B,IAE3DE,EAAW,SAACH,EAAQ1B,EAAK8B,GAAd,OAAwBC,cAAIL,EAAQ1B,EAAK8B,I,OCGlDE,EAPQ,CACnBC,eAAgB,iBAChBC,gBAAiB,kBACjBC,mBAAoB,yBACpBC,gBAAiB,uBCiBNC,EAlBK,WAA2C,IAA1CC,EAAyC,uDAFxC,KAE6BC,EAAW,uCAC1D,OAAOA,EAAOxF,MACV,KAAKiF,EAAeC,eAChB,OAAO,2BAAKK,GAAZ,IAA0BE,aAAcD,EAAO3E,UAEnD,KAAKoE,EAAeE,gBAChB,OARU,KAUd,KAAKF,EAAeG,mBAChB,OAAO,2BAAKG,GAAZ,IAA0BG,UAAWF,EAAO3E,UAEhD,KAAKoE,EAAeI,gBAChB,OAAO,2BAAKE,GAAZ,IAA0BI,OAAQH,EAAO3E,UAE7C,QAAU,OAAO0E,ICZVK,EALO,CAClBC,cAAe,gBACfC,iBAAkB,oBCDhBC,EAAgB,GAePC,EAbQ,WAA4C,IAA1CT,EAAyC,uDAA1BQ,EAAeP,EAAW,uCAC9D,OAAOA,EAAOxF,MACV,KAAK4F,EAAcC,cACf,OAAO,2BAAKN,GAAZ,IAA0BU,aAAcT,EAAO3E,UAEnD,KAAK+E,EAAcE,iBACf,OAAO,2BAAKP,GAAZ,IAA0BW,gBAAiBV,EAAO3E,UAEtD,QACI,OAAO0E,ICZbQ,EAAgB,CAACI,WAAY,CAC/B,CACEhH,MAAO,UACPe,GAAI,GAEN,CACEf,MAAO,cACPe,GAAI,GAEN,CACEf,MAAO,aACPe,GAAI,GAEN,CACEf,MAAO,OACPe,GAAI,GAEN,CACEf,MAAO,OACPe,GAAI,KAWKkG,EAPU,WAA2C,IAAzCb,EAAwC,uDAAzBQ,EAAeP,EAAU,uCAGvD,OAFDA,EAAOxF,KAECuF,GCzBbQ,EAAgB,GAkBPM,EAhBO,WAA4C,IAA1Cd,EAAyC,uDAA1BQ,EAAeP,EAAW,uCAC7D,OAAOA,EAAOxF,MACV,KAAKO,EAAWC,aACZ,OAAO,2BAAK+E,GAAZ,IAA0Be,OAAQd,EAAO3E,UAE7C,KAAKN,EAAWE,UACZ,OAAO,2BAAK8E,GAAZ,IAA0BgB,MAAOf,EAAO3E,UAE5C,KAAKN,EAAWG,YACZ,OAAO,2BAAK6E,GAAZ,IAA0BiB,QAAShB,EAAO3E,UAE9C,QACI,OAAO0E,I,QCPJkB,EARI,CACfC,SAAU,mBACVC,YAAa,wBACbC,oBAAqB,4BACrBC,WAAY,aACZC,UAAW,qBCJTf,EAAgB,CAACgB,UAAU,IA0BlBC,EAxBK,WAA2C,IAA1CzB,EAAyC,uDAA1BQ,EAAeP,EAAW,uCAC1D,OAAOA,EAAOxF,MACV,KAAKyG,EAAWC,SACZ,OAAO,2BAAKnB,GAAZ,IAA0BwB,UAAU,GAAD,mBAAMxB,EAAawB,WAAnB,CAA8BvB,EAAO3E,YAE5E,KAAK4F,EAAWE,YACZ,IAAQI,EAAcxB,EAAdwB,UACR,OAAO,2BAAKxB,GAAZ,IAA0BwB,UAAWA,EAAUE,QAAO,SAAAC,GAAO,OAAI1B,EAAO3E,UAAYqG,EAAQC,eAEhG,KAAKV,EAAWG,oBACZ,IAAQG,EAAcxB,EAAdwB,UACR,OAAO,2BAAKxB,GAAZ,IAA0BwB,UAAU,GAAD,mBAAMA,GAAN,YAAoBvB,EAAO3E,YAElE,KAAK4F,EAAWI,WACZ,OAAO,2BAAKtB,GAAZ,IAA0BwB,UAAW,KAEzC,KAAKN,EAAWK,UACZ,OAAO,2BAAKvB,GAAZ,IAA0BwB,UAAWvB,EAAO3E,UAEhD,QACI,OAAO0E,ICbJ6B,GAVQ,CACnBC,oBAAqB,2BACrBC,YAAa,2BACbC,0BAA2B,4BAC3BC,2BAA4B,6BAC5BC,kBAAmB,wBACnBd,YAAa,4BACbe,mBAAoB,2BCNlB3B,GAAgB,GAqCP4B,GAnCS,WAA2C,IAA1CpC,EAAyC,uDAA1BQ,GAAeP,EAAW,uCAC9D,OAAOA,EAAOxF,MACV,KAAKoH,GAAeC,oBAChB,OAAO,eAAK7B,EAAO3E,SAEvB,KAAKuG,GAAeE,YAChB,IAAMM,EAAOrC,EAAa,OAAD,OAAQC,EAAO3E,QAAQ+G,OAEhD,OADArC,EAAa,OAAD,OAAQC,EAAO3E,QAAQ+G,OAAnC,2BAAiDA,GAAjD,IAAuDhH,OAAO4E,EAAO3E,QAAQD,SACtE,eAAK2E,GAEhB,KAAK6B,GAAeG,0BAChB,IAAQM,EAAYtC,EAAZsC,QACR,OAAO,2BAAKtC,GAAZ,IAA0BsC,QAAQ,2BAAIA,GAAL,IAAcC,kBAAkBtC,EAAO3E,YAE5E,KAAKuG,GAAeI,2BAChB,IAAQK,EAAYtC,EAAZsC,QACR,OAAO,2BAAKtC,GAAZ,IAA0BsC,QAAQ,2BAAIA,GAAL,IAAcE,mBAAoBvC,EAAO3E,YAE9E,KAAKuG,GAAeK,kBAChB,IAAQO,EAAczC,EAAdyC,UACR,OAAO,2BAAKzC,GAAZ,IAA0ByC,UAAU,2BAAIA,GAAL,IAAgBC,cAAc,YAAKzC,EAAO3E,aAEjF,KAAKuG,GAAeT,YAChB,IAAQqB,EAAczC,EAAdyC,UACAC,EAAiBD,EAAjBC,cACR,OAAO,2BAAK1C,GAAZ,IAA2ByC,UAAU,2BAAIA,GAAL,IAAgBC,cAAeA,EAAchB,QAAO,SAAAC,GAAO,OAAI1B,EAAO3E,UAAYqG,EAAQC,iBAElI,KAAKC,GAAeM,mBAChB,OAAOlC,EAAO3E,QAElB,QACI,OAAO0E,ICzBb2C,GAAgB,CAClBjF,IAAK,OACLkF,YACAC,UAAW,CAAC,UAAU,WAAW,SAG/BC,GAAcC,YAAiB,CACjCC,SAAUC,EACVC,UAAWrC,EACXsC,QAAS1C,EACT2C,KAAMC,EACNC,KAAM7B,EACN8B,SAAUnB,KAICoB,eAAeb,GAAeG,ICtBvCW,GAAQC,YAAYZ,GAAaa,YAAgBC,WACjDC,GAAYC,YAAaL,ICoBhBM,GAtBA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACb,yBAAKrJ,GAAG,4BAA4Bb,UAAU,+BAA+BmK,YAAU,YACrF,yBAAKnK,UAAU,kBAEXkK,EAAME,OAAS,GAAKF,EAAMxG,KAAI,SAAC2G,EAAK1G,GAAN,OAC5B,yBAAK3D,UAAS,wBAA6B,IAAV2D,EAAY,SAAS,IAAMC,IAAKD,GAC/D,yBAAK3D,UAAU,gBAAgBsK,IAAKD,EAAKE,SAAUC,IAAKH,EAAKI,eAKrE,uBAAGzK,UAAU,wBAAwB0K,KAAK,6BAA6BzJ,KAAK,SAAS0J,aAAW,QAC9F,0BAAM3K,UAAU,6BAA6B+D,cAAY,SACzD,0BAAM/D,UAAU,WAAhB,aAEF,uBAAGA,UAAU,wBAAwB0K,KAAK,6BAA6BzJ,KAAK,SAAS0J,aAAW,QAC9F,0BAAM3K,UAAU,6BAA6B+D,cAAY,SACzD,0BAAM/D,UAAU,WAAhB,WCRS4K,GATA,kBACX,4BACI5K,UAAU,6CACV,yBAAKA,UAAU,yBACX,0DCDC6K,GAAyB,kBAAMxF,EAASsE,GAAMmB,WAAY,qCAAqC,IAE/FC,GAAkB,kBAAM1F,EAASsE,GAAMmB,WAAY,6BAA8B,SAEjFE,GAAwB,kBAAM3F,EAASsE,GAAMmB,WAAY,mCAAoC,KAE7FG,GAAuB,kBAAM5F,EAASsE,GAAMmB,WAAY,qBAAsB,KAE9EI,GAAoB,kBAAM7F,EAASsE,GAAMmB,WAAY,kBAAmB,KCVxEK,GAAe,kBAAM9F,EAASsE,GAAMmB,WAAY,iBAAkB,KCIlEM,GAAiB,iBAAO,CACjCzK,KAAMiF,EAAeE,kBAGZuF,GAAuB,SAAChF,GAAD,MAAgB,CAChD1F,KAAMiF,EAAeG,mBACrBvE,QAAS6E,ICDAiF,GAAoB,SAAAC,GAAiB,MAAK,CACnD5K,KAAMyG,EAAWG,oBACjB/F,QAAS+J,IAGAC,GAAY,iBAAO,CAC5B7K,KAAMyG,EAAWI,WACjBhG,QAAS,KChBAiK,GAAwB,SAAClD,GAAD,OAAUlD,EAASsE,GAAMmB,WAAP,uBAAmCvC,EAAnC,YAAkD,IAE5FmD,GAAuB,kBAAMrG,EAASsE,GAAMmB,WAAY,qCAAsC,KAE9Fa,GAAwB,kBAAMtG,EAASsE,GAAMmB,WAAY,sCAAuC,KAEhGc,GAAmB,kBAAMvG,EAASsE,GAAMmB,WAAY,mCAAoC,KCNxFe,GAAkB,kBAAMxG,EAASsE,GAAMmB,WAAY,uBAAwB,KCK3EgB,GAA8B,SAACC,EAAaC,GACrD,OAAOD,EAAeA,GAAeC,EAAS,MAGrCC,GAAuB,SAACF,EAAaC,GAC9C,OAAQD,GAAeC,EAAS,MAGvBE,GAAgB,SAAAC,GAAM,OAAIA,EAAOC,QAAQ,IAEzCC,GAAiB,SAACC,EAAUxE,GACrC,OAAOwE,EAASC,MAAM,SAAA1E,GAAO,OAAIxC,EAASwC,EAAS,YAAa,MAAQC,MAG/D0E,GAAoB,SAACF,EAAUG,EAAM9L,GAC9C,OAAO2L,EAAS1E,QAAQ,SAAAC,GAAO,OAAIxC,EAASwC,EAASlH,EAAM,IAAI+L,gBAAkBD,EAAKC,kBAG7EC,GAAa,SAAEC,GAAF,OAAWA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,IAOhEC,GAAuB,SAAC3C,GACjC,IAAM4C,EAAW,CAAC,CAAEpM,GAAI,WAAY4L,KAAK,OAAQS,KAAM,MAevD,OAdG7H,EAASgF,EAAM,YAAa,KAC3B4C,EAASE,KAAK,CAACtM,GAAIwJ,EAAK+C,SAAUX,KAAME,GAAWtC,EAAK+C,UAAWF,KAAI,WAAO7C,EAAK+C,YACnFH,EAASE,KAAK,CAACtM,GAAIwJ,EAAKgD,YAAaZ,KAAME,GAAWtC,EAAKgD,aAAcH,KAAI,WAAO7C,EAAK+C,SAAZ,YAAwB/C,EAAKgD,eAC1GJ,EAASE,KAAK,CAACtM,GAAIwJ,EAAKvC,UAAW2E,KAAME,GAAWtC,EAAKiD,gBAGtC,IAAhBjD,EAAKD,OACJ6C,EAASE,KAAK,CAACtM,GAAIwJ,EAAK,GAAIoC,KAAME,GAAWtC,EAAK,OAGlD4C,EAASE,KAAK,CAACtM,GAAIwJ,EAAK,GAAIoC,KAAME,GAAWtC,EAAK,IAAK6C,KAAI,WAAO7C,EAAK,MACvE4C,EAASE,KAAK,CAACtM,GAAIwJ,EAAK,GAAIoC,KAAME,GAAWtC,EAAK,OAGnD4C,GAGEM,GAAiB,SAAClH,EAAWxF,GAAZ,OAAmBwF,EAAUkG,MAAM,SAAAiB,GAAO,OAAIA,EAAQC,MAAQ5M,MAE/E6M,GAAuB,SAACC,GACjCA,EAAEC,iBACFD,EAAEE,YAAc,uKAKPC,GAAsB,WAC/B,MAAM,CACFlF,cAAegD,KAAmBlI,KAAK,SAAA2G,GAAI,MAAK,CAACvC,UAAWuC,EAAKvC,UAAWiG,SAAW,MACvFC,YAAa,QACbC,gBAAiBV,GAAetC,KAAwBU,QAInDuC,GAAsB,SAAC5H,GAEhC,IAAMgG,EAAWT,KACjB,OAAOvF,EAAO5C,KAAK,SAAAyK,GACf,IAAMtG,EAAUwE,GAAeC,EAAUjH,EAAS8I,EAAO,oBAAqB,KAI9E,OAHA1I,EAAS0I,EAAO,sBAAuBtG,EAAQyF,aAC/C7H,EAAS0I,EAAO,mBAAoBtG,EAAQuG,UAC5C3I,EAAS0I,EAAO,uBAAwBtG,EAAQwG,cAAc,IACvDF,MAQFG,GAAuB,SAACC,GACjC,OAAOA,EAAYA,EAAYnE,OAAO,GAAGoE,MAGhCC,GAAmB,SAACC,EAAiBC,GAC9C,IAAMC,EAAU,IAAIC,KAAKH,GACnBF,EAAOI,EAAQE,UACfC,EAAM,IAAIC,KAAKC,eAAe,QAAS,CAAEC,QAAS,UAAUP,OAAOC,GACnEO,EAAQ,IAAIH,KAAKC,eAAe,QAAS,CAAEE,MAAO,UAAUR,OAAOC,GACnEQ,EAAOR,EAAQS,cAErB,OAAOV,GACJ,KAAK7M,EAAUkB,YAAYC,KAAQ,MAAM,GAAN,OAAUkM,EAAV,YAAmBX,EAAnB,aAA4BY,GAC/D,KAAKtN,EAAUkB,YAAYE,MAAS,MAAM,GAAN,OAAU6L,EAAV,aAAkBP,EAAlB,YAA0BW,GAC9D,QAAW,MAAM,GAAN,OAAUA,EAAV,YAAmBX,EAAnB,aAA4BY,KChGjCE,GAAoB,SAACC,EAAUC,GACxC,OAAOD,EAASE,MAAK,SAAApF,GAAI,OAAIhF,EAASgF,EAAM,YAAa,MAAQhF,EAASmK,EAAS,aAAa,OAqBvFE,GAAuB,SAAChI,GAClC,OAAOA,EAAUhE,KAAK,SAAA2G,GAAI,MAAK,CAACvC,UAAUuC,EAAKvC,UAAWiG,SAAS,OAGzD4B,GAAyB,SAACC,EAAkBtD,GACrD,OAAOA,EAAS1E,QAAO,SAAAC,GACnB,OAAQ+H,EAAiBrD,MAAK,SAAA1F,GAAe,OAAIA,EAAgBiB,YAAcD,EAAQC,iBC/BzF+H,GAAO,0CAEAC,GAAM,CACfC,SAAS,GAAD,OAAKF,GAAL,cACRG,wBAAwB,GAAD,OAAKH,GAAL,6BACvBhK,eAAe,GAAD,OAAKgK,GAAL,4BACdI,gBAAgB,GAAD,OAAKJ,GAAL,gCACf9J,mBAAmB,GAAD,OAAK8J,GAAL,oCAClBK,qBAAqB,GAAD,OAAKL,GAAL,yBACpBM,wBAAwB,GAAD,OAAKN,GAAL,4BACvBO,YAAY,GAAD,OAAKP,GAAL,uBACX7J,gBAAgB,GAAD,OAAK6J,GAAL,sBC8BNQ,GAAgB,SAACC,EAAgBC,GAC1C,IAAMC,EAAU,CAAE,cAAkBD,GACpC,OAAOE,IAAMC,IAAIZ,GAAIG,gBAAiB,CAACU,aAAcL,GAAiB,CAACE,YACtEI,MAAM,YACH,OADgB,EAAVC,QAEPC,OAAO,YAA2B,IAAxBC,EAAuB,EAAvBA,SAASpP,EAAc,EAAdA,QAClB,MAAMoP,EAAUA,EAASF,KAAKG,aAAerP,MAcxCsP,GAAqB,SAACC,EAAgBX,GAC/C,IAAMC,EAAU,CAAE,cAAkBD,GACpC,OAAOE,IAAMC,IAAIZ,GAAII,qBAAd,eAAwCgB,GAAiB,CAACV,YAChEI,MAAM,YACH,OADgB,EAAVC,QAEPC,OAAO,YAA2B,IAAxBC,EAAuB,EAAvBA,SAASpP,EAAc,EAAdA,QAClB,MAAMoP,EAAUA,EAASF,KAAKG,aAAerP,MAIxCwP,GAAwB,SAACD,EAAgBX,GAClD,IAAMC,EAAU,CAAE,cAAkBD,GACpC,OAAOE,IAAMC,IAAIZ,GAAIK,wBAAwBe,EAAezD,IAArD,eAA8DyD,GAAiB,CAACV,YACtFI,MAAM,YACH,OADgB,EAAVC,QAEPC,OAAO,YAA2B,IAAxBC,EAAuB,EAAvBA,SAASpP,EAAc,EAAdA,QAClB,MAAMoP,EAAUA,EAASF,KAAKG,aAAerP,MAIxCyP,GAAa,SAACC,EAAcd,GACrC,IAAMC,EAAU,CAAE,cAAkBD,GACpC,OAAOE,IAAMa,KAAKxB,GAAIM,YAAf,eAAgCiB,GAAe,CAACb,YACtDI,MAAM,YACH,OADgB,EAAVC,QAEPC,OAAO,YAA2B,IAAxBC,EAAuB,EAAvBA,SAASpP,EAAc,EAAdA,QAClB,MAAMoP,EAAUA,EAASF,KAAKG,aAAerP,MC9D/C4P,G,4MACFnG,eAAiB,WACb,MAAgG,EAAKzL,MAA9F+H,EAAP,EAAOA,UAAW6I,EAAlB,EAAkBA,mBAAoB/E,EAAtC,EAAsCA,UAAWJ,EAAjD,EAAiDA,eAAgB9J,EAAjE,EAAiEA,UAAWG,EAA5E,EAA4EA,gBACtE6O,EAAiBZ,GAAqBhI,GAC5CpG,GAAU,GACVkQ,GAAkBlB,EAAgBC,GAAoBK,MAAM,SAAAG,GACxDA,GAAYvF,IACZJ,IACA9J,GAAU,MACX,SAAAmQ,GACChQ,EAAgB,CAACgQ,IACjBnQ,GAAU,O,EAIlBoQ,iBAAmB,WACf,EAAK/R,MAAMgS,QAAQxE,KAAK,Y,4CAG5B,WACI,IAAOyE,EAAgBlS,KAAKC,MAArBiS,aACP,OACI,0BAAM5R,UAAU,sBACZ,yBAAKA,UAAU,uBAAf,IAAuC4R,EAAvC,KACA,yBAAK5R,UAAU,uBACX,yBAAKA,UAAU,8BAA8BG,QAAST,KAAK0L,gBAA3D,UACA,yBAAKpL,UAAU,iBAAiBG,QAAST,KAAKgS,kBAA9C,gB,GA1BYtR,aAiCjBqE,eAAWR,aA9CF,iBAAO,CAC3B2N,aAAc7G,KACdrD,UAAWyD,KACXoF,mBAAoBvF,SAGG,SAAA9G,GAAQ,MAAK,CACpCkH,eAAgB,kBAAMlH,EAASkH,OAC/BI,UAAW,kBAAMtH,EAASsH,OAC1BlK,UAAW,SAACC,GAAD,OAAY2C,EAAS5C,EAAUC,KAC1CE,gBAAiB,SAACoQ,GAAD,OAAY3N,EAASzC,EAAgBoQ,QAoChC5N,CAA6CsN,KCvBxDtN,gBA9BS,iBAAO,CAC3B6N,iBAAkBjH,QA6BP5G,EA1BA,SAAC,GAA6C,IAA5C8N,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,UAAWF,EAAsB,EAAtBA,iBAElC,OACI,yBAAK9R,UAAU,iEACX,kBAAC,IAAD,CAAMoF,GAAI,IAAKpF,UAAU,aACrB,yBAAKsK,IAAK,cAAeE,IAAI,QAAQ3F,MAAO,CAAEI,MAAO,QAAUjF,UAAU,oBAE7E,yBAAKA,UAAW,SACVgS,IAAcF,EACZ,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAM1M,GAAI,cAAepF,UAAU,WAC/B,4BAAQA,UAAU,wBAAlB,YAGN+R,GAAY,kBAAC,IAAD,CAAM3M,GAAI,QAASpF,UAAW,gBACxC,0BAAMA,UAAU,OACZ,uBAAGA,UAAU,kBAAb,iBACA,0BAAMA,UAAU,kBAAhB,eCETiE,gBAxBS,iBAAO,CAC3B6C,WCF+BzB,EAASsE,GAAMmB,WAAY,uBAAwB,ODyBvE7G,EApBG,SAAC,GAAkB,IAAjB6C,EAAgB,EAAhBA,WAChB,OACI,yBAAK9G,UAAU,oEACX,wBAAIA,UAAU,iDAEV8G,EAAWpD,KAAI,SAAC0J,GAAD,OACX,wBAAIpN,UAAU,WAAW4D,IAAKwJ,EAASvM,IACnC,kBAAC,IAAD,CACIb,UAAU,4BACVoF,GAAE,WAAMgI,EAAStN,MAAM4M,gBAClBU,EAAStN,MAAMgN,wBEhB3BmF,G,kDACjB,WAAYtS,GAAO,IAAD,8BACd,cAAMA,IAIVuS,YAAc,WACV,EAAKC,SAAS,CAAEC,MAAO,EAAKC,MAAMD,QAJlC,EAAKC,MAAQ,CAAED,MAAM,GAFP,E,0CASlB,WAGI,OACI,0BAAMpS,UAAU,cAAcG,QAAST,KAAKwS,aACxC,yBAAKjN,MAAM,KAAKC,OAAO,KAAKH,KAAK,OAC7B,0BAAMI,EAAGzF,KAAK2S,MAAMD,KAJd,2EADC,2V,GAXiBhS,aCgC7BkS,G,4JA5BX,WACI,MAAqF5S,KAAKC,MAAMkI,QAAzF0K,EAAP,EAAOA,MAAOjF,EAAd,EAAcA,YAAakF,EAA3B,EAA2BA,mBAAoBxG,EAA/C,EAA+CA,SAAUlE,EAAzD,EAAyDA,UAAWuG,EAApE,EAAoEA,cACpE,OAAO,kBAAC,EAAD,CACHrO,UAAU,WACVC,OACI,kBAAC,IAAMwS,SAAP,KACI,wBAAIzS,UAAU,cAAcuS,GAC5B,0BAAMvS,UAAU,aAAasN,GAC7B,6BACI,4BAAQtN,UAAU,QAAlB,SAA2BkM,GAAcJ,GAA4B0G,EAAoBxG,KACzF,uBAAGhM,UAAU,QAAQwS,GACrB,2BAAOxS,UAAU,gBAAe,gCAASgM,EAAT,aAK5C,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAM5G,GAAI,YAAc0C,GACpB,yBACIwC,IAAK+D,EAAc,GACnBrO,UAAU,eACVwK,IAAK8C,U,GAtBKlN,aCiBfsS,G,4JAnBX,WACI,MAAiDhT,KAAKC,MAA/CgT,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,UAAWC,EAArC,EAAqCA,SACrC,OACI,6BACI,yBAAK9S,UAAU,sBACX,4BAAQA,UAAU,oBAAoB+S,SAAUH,EAASzS,QAAS2S,GAC9D,uBAAG9S,UAAU,kBAAb,oBAGR,yBAAKA,UAAU,uBACX,4BAAQA,UAAU,oBAAoB+S,SAAUJ,EAAUxS,QAAS0S,GAC/D,uBAAG7S,UAAU,kBAAb,4B,GAZWI,aC6CpB4S,G,kDAzCX,WAAYrT,GAAO,IAAD,uBACd,cAAMA,IAMVmT,SAAW,WACP,IAAMG,EAAO,CAAEC,MAAQ,EAAKb,MAAMa,MAAM,EAAGC,IAAM,EAAKd,MAAMc,IAAI,GAChE,EAAKhB,SAAL,aAAeiB,gBAAkB,EAAKzT,MAAM2M,SAASS,MAAMkG,EAAKC,MAAOD,EAAKE,MAASF,KATvE,EAYlBJ,UAAY,WACR,IAAMQ,EAAQ,CAAEH,MAAQ,EAAKb,MAAMa,MAAM,EAAGC,IAAM,EAAKd,MAAMc,IAAI,GACjE,EAAKhB,SAAL,aAAeiB,gBAAkB,EAAKzT,MAAM2M,SAASS,MAAMsG,EAAMH,MAAOG,EAAMF,MAASE,KAZvF,IAAO/G,EAAY3M,EAAZ2M,SACD6G,EAAM7G,EAASlC,OAAO,EAAGkC,EAASlC,OAAQ,EAHlC,OAId,EAAKiI,MAAQ,CAACe,gBAAgB9G,EAASS,MAAM,EAAGoG,GAAMD,MAAM,EAAIC,OAJlD,E,0CAiBlB,WACI,MAAgCzT,KAAKC,MAA9B2M,EAAP,EAAOA,SAAUxM,EAAjB,EAAiBA,MAAOoN,EAAxB,EAAwBA,KACxB,EAAsCxN,KAAK2S,MAApCe,EAAP,EAAOA,gBAAiBF,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,IAC/B,OACI,kBAAC,EAAD,CAAMnT,UAAU,YACZ,kBAAC,GAAD,CACI4S,QAAmB,IAAVM,EACTP,SAAUQ,IAAQ7G,EAASlC,OAC3B0I,SAAUpT,KAAKoT,SACfD,UAAWnT,KAAKmT,YAEpB,yBAAK7S,UAAU,eACX,yBAAKA,UAAU,eAAc,4BAAKF,IACjCoN,GAAQ,kBAAC,IAAD,CAAM9H,GAAI8H,GAAV,IAAiB,4BAAQlN,UAAU,gBAAlB,YAAjB,MAGb,yBAAKA,UAAY,OACXoT,EAAgB1P,KAAK,SAACmE,GAAD,OAAa,kBAAC,GAAD,CAAiBA,QAASA,EAASjE,IAAKiE,EAAQC,qB,GAnC5E1H,aCStBkT,GAAe,CACjB,CAAC/I,SAAS,wBAAyBE,QAAQ,eAC3C,CAACF,SAAS,wBAAyBE,QAAQ,gBAC3C,CAACF,SAAS,wBAAyBE,QAAQ,gBAgBzC8I,G,uKACF,WAAqB,IAAD,OT5Bb9C,IAAMjL,IAAIsK,GAAIC,UAAUa,MAAM,YACjC,OAD6C,EAATC,QAErCC,OAAO,YAAwB,IAAtBC,EAAqB,EAArBA,SAASpP,EAAY,EAAZA,QACjB,MAAMoP,EAAUA,EAASF,KAAKG,aAAerP,KS0B3BiP,MAAM,SAAAG,GACpB,EAAKpR,MAAM6T,gBAAgBzC,Q,oBAInC,WACI,MAAwCrR,KAAKC,MAAtC8T,EAAP,EAAOA,SAASC,EAAhB,EAAgBA,SAASC,EAAzB,EAAyBA,YACzB,OACI,kBAAC,IAAMlB,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKzS,UAAU,aACX,kBAAC,GAAD,CAAQkK,MAAOoJ,KACf,kBAAC,GAAD,CAAehH,SAAYmH,EAAU3T,MAAM,oBAC3C,kBAAC,GAAD,CAAewM,SAAYoH,EAAU5T,MAAM,WAAWoN,KAAK,aAC3D,kBAAC,GAAD,CAAeZ,SAAYqH,EAAa7T,MAAM,cAAcoN,KAAK,iBACjE,kBAAC,GAAD,Y,GAlBG9M,aAyBR6D,gBAtCS,WACpB,IAAMqI,EAAWT,KACjB,MAAO,CACH4H,SAAUnH,EACVoH,SAAUlH,GAAkBF,EAAU,UAAW,YACjDqH,YAAanH,GAAkBF,EAAU,cAAe,gBAIrC,SAAApI,GAAQ,MAAK,CACpCsP,gBAAiB,SAAClH,GAAD,OAAcpI,EC5BJ,SAAAoI,GAAQ,MAAK,CACxC3L,KAAM4F,EAAcC,cACpBhF,QAAS8K,GD0B+BkH,CAAgBlH,QA4B7CrI,CAA6CsP,I,SE1D/CK,GAAgB,SAACC,GAE1B,MADiB,uCACDC,KAAKD,GAAO,GAAG,+BAGtBE,GAAuB,SAACC,GAEjC,MADoB,eACDF,KAAKE,GAAU,GAAG,oCAe5BC,GAAmB,SAACC,GAC7B,OAAuB,IAApBA,EAAS9J,OACA,wBAGD8J,EAAS9J,QAAS,EAAG,GAAI,0CAc3B+J,GAAe,SAACC,EAAMC,GAE/B,MADgB,qCACDP,KAAKM,GAAM,GAAGC,GC9B3B3N,GAAgB,CAClB4N,OAAQ,GACRJ,SAAU,GACVhN,MAAO,CACHoN,OAAQ,GACRJ,SAAU,KAiBZK,G,kDACF,aAAe,IAAD,8BACV,gBAIJC,aAAe,WACX,ID3BuBF,EC2BjBpN,EAAQ,GAId,OAHAA,EAAMoN,QD5BiBA,EC4BO,EAAKjC,MAAMiC,OD3B1CP,GAAqBO,IAAWV,GAAcU,GACtC,4CAEJ,ICyBHpN,EAAMgN,SAAWD,GAAiB,EAAK5B,MAAM6B,UAC7C,EAAK/B,SAAS,CAACjL,YACNA,EAAMoN,QAAQpN,EAAMgN,WAVnB,EAad5I,kBAAoB,SAACmJ,GAClB,MAAmD,EAAK9U,MAAhD2M,EAAR,EAAQA,SAAU5E,EAAlB,EAAkBA,UAAW4D,EAA7B,EAA6BA,kBACvBqF,EAAe,GACahB,GAAuBjI,EAAW+M,GAC1CC,SAAQ,SAAAC,GAC7B,IAAIC,EAAStI,EAASC,MAAK,SAAA1E,GAAO,OAAIA,EAAQC,YAAc6M,EAAS7M,aACrE8M,GAAUjE,EAAaxD,KAAKyH,MAEhCtJ,EAAkBqF,IArBR,EAwBdkE,aAAe,SAAAC,GACX,MAAgF,EAAKnV,MAA9EoV,EAAP,EAAOA,cAAezT,EAAtB,EAAsBA,UAAWG,EAAjC,EAAiCA,gBAAiBG,EAAlD,EAAkDA,kBAAmB+P,EAArE,EAAqEA,QACrEmD,EAAMlH,iBACH,EAAK4G,iBACJlT,GAAU,GZjCO,SAAA8E,GACzB,IAAOkO,EAAoBlO,EAApBkO,OAAQJ,EAAY9N,EAAZ8N,SACf,OAAOzD,IAAMa,KAAKxB,GAAIjK,eAAgB,CAACmP,cAAcV,EAAQW,eAAeX,EAAQY,iBAAiBhB,IACpGtD,MAAM,YACH,OADgB,EAAVC,QAEPC,OAAO,YAA2B,IAAxBC,EAAuB,EAAvBA,SAASpP,EAAc,EAAdA,QAClB,MAAMoP,EAAUA,EAASF,KAAKG,aAAerP,KY4BzC6P,CAAkB,EAAKa,OAAOzB,MAAM,SAAAG,GAChC,IAAOoE,EAAgCpE,EAAhCoE,MAAOC,EAAyBrE,EAAzBqE,aAAczT,EAAWoP,EAAXpP,QAC5BoT,EAAc,CACVlU,GAAIuU,EAAaC,WACjB5I,KAAM2I,EAAaxD,aACnB0D,aAAa,EACbC,WAAYJ,IAEhB,EAAK7J,kBAAkB8J,EAAaI,MACpC,EAAKrD,SAASzL,IACdiL,EAAQ8D,SACRhU,EAAgB,IAChBG,EAAkB,CAACD,IACnBL,GAAU,MACX,SAAAmQ,GACChQ,EAAgB,CAACgQ,IACjBnQ,GAAU,QA7CR,EAkDdb,aAAe,SAAAqU,GACX,MAAwBA,EAAMY,OAAtBjJ,EAAR,EAAQA,KAAM/G,EAAd,EAAcA,MACRwB,EAAK,eAAO,EAAKmL,MAAMnL,OAC7BA,EAAMuF,GAAQ,GACd,EAAK0F,SAAL,gBAAiB1F,EAAO/G,IACxB,EAAKyM,SAAS,CAAEjL,WArDhB,EAAKmL,MAAQ3L,GAFH,E,0CA0Dd,WACI,MAAkChH,KAAK2S,MAAhCiC,EAAP,EAAOA,OAAQJ,EAAf,EAAeA,SAAUhN,EAAzB,EAAyBA,MACzB,OACI,kBAAC,IAAMuL,SAAP,KACI,kBAAC,EAAD,CACI5R,GAAK,QACLjB,OAAU,sCACV,kBAAC,EAAD,CACIiB,GAAG,UACHN,UAAU,UACVkM,KAAK,SACL/G,MAAS4O,EACT9T,WAAc0G,EAAMoN,OACpBqB,SAAYjW,KAAKe,aACjBK,MAAQ,iCACZ,kBAAC,EAAD,CACID,GAAG,WACHN,UAAU,WACVkM,KAAK,WACL/G,MAASwO,EACT1T,WAAc0G,EAAMgN,SACpByB,SAAYjW,KAAKe,aACjBK,MAAM,aACV,4BACId,UAAU,4BACVG,QAAST,KAAKmV,cAFlB,UAMJ,0BAAM7U,UAAU,kBAAhB,iBACA,kBAAC,IAAD,CAAMoF,GAAI,iBAAkBP,MAAO,CAAE+Q,eAAgB,SACjD,4BACI5V,UAAU,kCADd,6B,GA1FAI,aAoGL6D,gBAjHS,iBAAO,CAC3BqI,SAAUT,KACVnE,UAAWyD,SAGY,SAAAjH,GAAQ,MAAK,CACpC6Q,cAAe,SAACc,GAAD,OAAU3R,EnB1BA,SAAA2R,GAAI,MAAK,CAClClV,KAAMiF,EAAeC,eACrBrE,QAAQ,eAAKqU,ImBwBqBd,CAAcc,KAChDvU,UAAW,SAACC,GAAD,OAAY2C,EAAS5C,EAAUC,KAC1CE,gBAAiB,SAACoQ,GAAD,OAAY3N,EAASzC,EAAgBoQ,KACtDjQ,kBAAmB,SAACuF,GAAD,OAAajD,EAAStC,EAAkBuF,KAC3DmE,kBAAmB,SAACqF,GAAD,OAAkBzM,EAASoH,GAAkBqF,QAuGrD1M,CAA6CsQ,ICjItD7N,GAAgB,CAClBoP,SAAU,GACVjC,MAAO,GACPK,SAAU,GACV6B,WAAY,GACZ7O,MAAO,CACH4O,SAAU,GACVjC,MAAO,GACPK,SAAU,GACV6B,WAAY,KAUdC,G,kDACF,aAAe,IAAD,8BACV,gBAIJxB,aAAe,WACX,MAAgD,EAAKnC,MAA9CyD,EAAP,EAAOA,SAAUjC,EAAjB,EAAiBA,MAAOK,EAAxB,EAAwBA,SAAU6B,EAAlC,EAAkCA,WAC5B7O,EAAQ,GAMd,OALAA,EAAM4O,SFxBkB,SAACA,GAE7B,MADoB,eACDhC,KAAKgC,GAAU,GAAG,0CEsBhBG,CAAiBH,GAClC5O,EAAM2M,MAASD,GAAcC,GAC7B3M,EAAMgN,SAAWD,GAAiBC,GAClChN,EAAM6O,WAAaA,IAAe7B,EAAS,GAAG,uBAC9C,EAAK/B,SAAS,CAACjL,YACNA,EAAMoN,QAAQpN,EAAM2M,OAAO3M,EAAMgN,UAAUhN,EAAM6O,aAbhD,EAgBdlB,aAAe,SAAAC,GACX,MAA0D,EAAKnV,MAAvD2B,EAAR,EAAQA,UAAWG,EAAnB,EAAmBA,gBAAiBG,EAApC,EAAoCA,kBACpCkT,EAAMlH,iBACH,EAAK4G,iBACJlT,GAAU,GbzBe,SAAA4U,GACjC,IAAOJ,EAA6BI,EAA7BJ,SAAUjC,EAAmBqC,EAAnBrC,MAAOK,EAAYgC,EAAZhC,SACxB,OAAOzD,IAAMa,KAAKxB,GAAIE,wBAAyB,CAAC4B,aAAakE,EAASd,cAAcnB,EAAMqB,iBAAiBhB,IAC1GtD,MAAM,YACH,OADgB,EAAVC,QAEPC,OAAO,YAA2B,IAAxBC,EAAuB,EAAvBA,SAASpP,EAAc,EAAdA,QAClB,MAAMoP,EAAUA,EAASF,KAAKG,aAAerP,KaoBzC6P,CAA0B,EAAKa,OAAOzB,MAAM,SAAAG,GACxC,EAAKoB,SAASzL,IACd,EAAK/G,MAAMgS,QAAQxE,KAAK,eACxB1L,EAAgB,IAChBG,EAAkB,CAACmP,IACnBzP,GAAU,MACZ,SAAAmQ,GACEhQ,EAAgB,CAACgQ,IACjBnQ,GAAU,QA7BR,EAkCdb,aAAe,SAAAqU,GACX,MAAwBA,EAAMY,OAAtBjJ,EAAR,EAAQA,KAAM/G,EAAd,EAAcA,MACRwB,EAAK,eAAO,EAAKmL,MAAMnL,OAC7BA,EAAMuF,GAAQ,GACd,EAAK0F,SAAL,gBAAiB1F,EAAO/G,IACxB,EAAKyM,SAAS,CAAEjL,WArChB,EAAKmL,MAAQ3L,GAFH,E,0CA0Cd,WACI,MAAuDhH,KAAK2S,MAArDyD,EAAP,EAAOA,SAAUjC,EAAjB,EAAiBA,MAAOK,EAAxB,EAAwBA,SAAU6B,EAAlC,EAAkCA,WAAY7O,EAA9C,EAA8CA,MAC9C,OACQ,kBAAC,EAAD,CACIrG,GAAK,iBACLjB,OAAU,+CACV,kBAAC,EAAD,CACIiB,GAAG,WACHN,UAAU,UACVkM,KAAK,WACL/G,MAASoQ,EACTtV,WAAc0G,EAAM4O,SACpBH,SAAYjW,KAAKe,aACjBK,MAAM,cACV,kBAAC,EAAD,CACID,GAAG,QACHN,UAAU,UACVkM,KAAK,QACL/G,MAASmO,EACTrT,WAAc0G,EAAM2M,MACpB8B,SAAYjW,KAAKe,aACjBK,MAAM,UACV,kBAAC,EAAD,CACID,GAAG,WACHN,UAAU,WACVkM,KAAK,WACL/G,MAASwO,EACT1T,WAAc0G,EAAMgN,SACpByB,SAAYjW,KAAKe,aACjBK,MAAM,aACV,kBAAC,EAAD,CACID,GAAG,cACHN,UAAU,WACVkM,KAAK,aACL/G,MAASqQ,EACTvV,WAAc0G,EAAM6O,WACpBJ,SAAYjW,KAAKe,aACjBK,MAAM,sBACV,4BACId,UAAU,4BACVG,QAAST,KAAKmV,cAFlB,uBAKA,0BAAM7U,UAAU,YAAhB,2BAC4B,kBAAC,IAAD,CAAMoF,GAAG,eAAT,mB,GAvF3BhF,aA8FN6D,eAAQ,MApGI,SAAAC,GAAQ,MAAK,CACpC5C,UAAW,SAACC,GAAD,OAAY2C,EAAS5C,EAAUC,KAC1CE,gBAAiB,SAACoQ,GAAD,OAAY3N,EAASzC,EAAgBoQ,KACtDjQ,kBAAmB,SAACuF,GAAD,OAAajD,EAAStC,EAAkBuF,QAiGhDlD,CAAkC+R,ICjGlCG,GAjBS,WACpB,IAAOC,EAAQC,cAARD,KACP,OACI,yBAAKpW,UAAU,uFACX,kBAAC,IAAD,CAAMoF,GAAG,KACL,yBAAKpF,UAAU,+BACX,yBAAKsK,IAAK,cAAeE,IAAI,QAAQ3F,MAAO,CAAEI,MAAO,SAAWjF,UAAU,qBAGlF,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOoW,KAAI,UAAKA,EAAL,aAAsBE,UAAWN,KAC5C,kBAAC,IAAD,CAAOI,KAAI,UAAKA,GAAQE,UAAW/B,QCUpCgC,G,4JAvBX,WACI,IAAOtJ,EAAYvN,KAAKC,MAAjBsN,SACP,OACI,yBAAKjN,UAAU,4BACX,yBAAKA,UAAY,OAETiN,EAASvJ,KAAK,SAAA8S,GAAO,OACjB,0BAAM5S,IAAK4S,EAAQ3V,GAAIb,UAAU,yBAC5BwW,EAAQtJ,KACL,kBAAC,IAAD,CAAM9H,GAAIoR,EAAQtJ,KAAMlN,UAAU,cAAcwW,EAAQ/J,MACxD,0BAAMzM,UAAU,cAAcwW,EAAQ/J,MAEzC+J,EAAQtJ,MAAQ,0BAAMlN,UAAU,cAAhB,oB,GAbzBI,aCclBqW,G,4MACJC,UAAY,WACV,MAAuD,EAAK/W,MAApDgX,EAAR,EAAQA,cAAe9O,EAAvB,EAAuBA,QAASH,EAAhC,EAAgCA,UAAWiK,EAA3C,EAA2CA,QACvCrC,GAAkB5H,EAAWG,IAC/B8O,EAAc9O,GAEhB8J,EAAQxE,KAAK,U,EAGfyJ,OAAS,WACP,MAAuD,EAAKjX,MAApDgX,EAAR,EAAQA,cAAe9O,EAAvB,EAAuBA,QAASH,EAAhC,EAAgCA,UAAWiK,EAA3C,EAA2CA,QACvCrC,GAAkB5H,EAAWG,IAC/B8O,EAAc9O,GAEhB8J,EAAQxE,KAAR,oBAA0BrL,EAAUU,MAAMC,WAA1C,YAAwDoF,EAAQC,a,4CAGlE,WACE,MAAuCpI,KAAKC,MAAMkI,QAA1CwG,EAAR,EAAQA,cAAef,EAAvB,EAAuBA,YACvB,OACE,6BACE,yBAAKtN,UAAU,gBAAgBsK,IAAK+D,EAAc,GAAI7D,IAAK8C,IAC3D,6BAAM,6BACN,yBAAKtN,UAAU,OACb,yBAAKA,UAAU,YACb,4BAAQA,UAAU,gCAAgCG,QAAST,KAAKkX,QAC9D,uBAAG5W,UAAU,gCAAb,cACA,0BAAMA,UAAU,gCAAhB,aAGJ,yBAAKA,UAAU,YACb,4BAAQA,UAAU,wCAAwCG,QAAST,KAAKgX,WACtE,uBAAG1W,UAAU,gCAAb,iBACA,0BAAMA,UAAU,gCAAhB,uB,GAjCmBI,aA0ClBqE,eAAWR,aAlDF,iBAAO,CAC7ByD,UAAWyD,SAGc,SAAAjH,GAAQ,MAAK,CACtCyS,cAAe,SAACtM,GAAD,OAAUnG,EtBXc,CACrCvD,KAAMyG,EAAWC,SACjB7F,QsBS8C6I,QA6CxBpG,CAA6CwS,KCtDlDI,G,4JACjB,WACI,MAAuFnX,KAAKC,MAAMkI,QAA1FyF,EAAR,EAAQA,YAAawJ,EAArB,EAAqBA,OAAQtE,EAA7B,EAA6BA,mBAAoBxG,EAAjD,EAAiDA,SAAU+K,EAA3D,EAA2DA,YAAaC,EAAxE,EAAwEA,WACxE,OACE,6BACE,4BAAK1J,GACH,4BAAI,0BAAMtN,UAAU,uBAAuB8W,IAC3C,+BACE,+BACE,4BACE,oCACA,iCAAM,0CAAiBtE,KAEzB,4BACE,sCACA,iCAAM,0BAAMxS,UAAU,iBAAhB,UACWkM,GAAcJ,GAA4B0G,EAAoBxG,OAIjF,4BACE,yCACA,iCAAM,wCACWE,GAAcD,GAAqBuG,EAAoBxG,IADlE,KACgFA,EADhF,UAMJ,6BACR,2CACA,2BAAI+K,GACJ,yCACA,4BAAKC,EAAWtT,KAAI,SAACuT,EAAWrT,GAAZ,OAAoB,wBAAIA,IAAKA,GAAMqT,Y,GAhCpB7W,aCO3C8W,G,4JACF,WACI,I1CPmBC,E0COXtP,EAAYnI,KAAKC,MAAjBkI,QACR,O1CRmBsP,E0CSJtP,G1CTiBuP,kBAAQD,I0CUhC,yBAAKnX,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAoB6H,QAASA,KAEjC,yBAAK7H,UAAU,YACX,kBAAC,GAAD,CAAqB6H,QAASA,U,GAVzBzH,aAkBd6D,gBAtBS,iBAAO,CAC3B4D,QtBHoCxC,EAASsE,GAAMmB,WAAY,0BAA2B,OsBwB/E7G,CAAyBiT,ICHlCG,G,uKACF,WACI,MAA+C3X,KAAKC,OACpD2X,EADA,EAAQA,mBAAR,EAA2BzQ,mB,oBAI/B,WACI,OACI,kBAAC,IAAM4L,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKzS,UAAW,aACZ,kBAAC,GAAD,CAAWiN,SAAUvN,KAAKC,MAAM4X,oBAChC,kBAAC,GAAD,OAEJ,kBAAC,GAAD,W,GAfUnX,aAqBX6D,gBAnCS,SAACoO,EAAO1S,GAC5B,IAAM6X,EAAoB3L,KACpBhF,EAAkBwF,GAAemL,EAAmB7X,EAAM8X,MAAMC,OAAO5P,WAE7E,MAAO,CACHjB,kBACA0Q,kBAHsBvK,GAAqBnG,OAOxB,SAAC3C,GAAD,MAAe,CACtCoT,kBAAmB,SAACzQ,GAAD,OAAqB3C,EThBX,SAAA2C,GAAe,MAAK,CACjDlG,KAAM4F,EAAcE,iBACpBjF,QAASqF,GScwCyQ,CAAkBzQ,QAwBxD5C,CAA6CoT,IChC7CM,G,4JAVX,WACI,IAAOrL,EAAY5M,KAAKC,MAAjB2M,SACP,OACI,yBAAKtM,UAAY,OACXsM,EAAS5I,KAAK,SAACmE,GAAD,OAAa,kBAAC,GAAD,CAAiBA,QAASA,EAASjE,IAAKiE,EAAQC,oB,GALnE1H,aCyBpBwX,G,4JACF,WACI,MAA4ClY,KAAKC,MAA1CkY,EAAP,EAAOA,eAAgBN,EAAvB,EAAuBA,kBACvB,OACI,kBAAC,IAAM9E,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKzS,UAAW,aACZ,kBAAC,GAAD,CAAWiN,SAAYsK,IACvB,kBAAC,GAAD,CAAajL,SAAYuL,KAE7B,kBAAC,GAAD,W,GAXYzX,aAiBb6D,gBAlCS,SAACoO,EAAO1S,GAC5B,IACIkY,EAAgBN,EADdjL,EAAWT,KAUjB,OARIlM,EAAM8X,MAAMC,OAAOrK,aACnBwK,EAAiBrL,GAAkBF,EAAU3M,EAAM8X,MAAMC,OAAOrK,YAAa,eAC7EkK,EAAoBvK,GAAqB,CAACrN,EAAM8X,MAAMC,OAAOtK,SAAUzN,EAAM8X,MAAMC,OAAOrK,gBAG1FwK,EAAiBrL,GAAkBF,EAAU3M,EAAM8X,MAAMC,OAAOtK,SAAU,YAC1EmK,EAAoBvK,GAAqB,CAACrN,EAAM8X,MAAMC,OAAOtK,YAE1D,CACHyK,iBACAN,uBAqBOtT,CAAyB2T,ICvClCE,G,4MACFC,oBAAsB,WAClB,OACI,kBAAC,IAAMtF,SAAP,KACI,yBAAKzS,UAAU,eACX,uBAAGA,UAAU,wBAAb,uBACA,2BAAG,wDAEP,yBAAKA,UAAU,wBACX,kBAAC,IAAD,CAAMoF,GAAG,IAAIpF,UAAU,6BAAvB,iB,EAMhBgY,qBAAuB,WACnB,OACI,kBAAC,IAAMvF,SAAP,KACI,yBAAKzS,UAAU,eACX,uBAAGA,UAAU,wBAAb,uBACA,2BAAG,gFAEP,yBAAKA,UAAU,wBACX,kBAAC,IAAD,CAAMoF,GAAG,cAAcpF,UAAU,6BAAjC,c,4CAMhB,WACI,IAAQiY,EAAavY,KAAKC,MAAlBsY,SACR,OACI,kBAAC,EAAD,CAAMjY,UAAW,kBACb,yBAAKA,UAAW,iCACZ,yBAAKA,UAAW,sBACZ,yBAAKA,UAAY,eACb,yBAAKsK,IAAK,oBAAqBE,IAAI,aAAa3F,MAAO,CAAEI,MAAO,SAAWjF,UAAU,mBACnFiY,EAAUvY,KAAKqY,sBAAuBrY,KAAKsY,+B,GArCjD5X,aA8CT6D,gBAlDS,iBAAO,CAC3BgU,SAAUpN,QAiDC5G,CAAyB6T,ICtClCI,G,4JACF,WACI,MAAkExY,KAAKC,MAAhEwY,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,iBAAkBC,EAArC,EAAqCA,cAAeC,EAApD,EAAoDA,WACpD,OACI,6BACI,kBAAC,EAAD,KACI,wBAAItY,UAAU,cAAd,iBACA,6BACA,yBAAKA,UAAU,kCACX,+CAAcmY,EAAd,gBAAgCA,EAAW,EAAG,IAAK,IAAnD,KACA,oCAAKC,IAET,yBAAKpY,UAAU,kCACX,uCACA,uBAAGA,UAAU,gBAAb,WAAgCqY,EAAhC,MAEJ,yBAAKrY,UAAU,kCACX,+CACA,yCAEJ,6BACA,yBAAKA,UAAU,kCACX,4CACA,qCAAMsY,EAAN,MAEJ,6BACA,uBAAGtY,UAAU,gBAAb,uBAA4CqY,EAA5C,wB,GA1BMjY,aAiCX6D,gBA5CS,SAACoO,EAAO1S,GAC5B,IAAMyY,EAAmBlM,GzBEW,SAACxE,GACrC,IAAI6Q,EAAQ,EAEZ,OADA7Q,EAAUgN,SAAS,SAAArK,GAASkO,GAASlO,EAAKmI,sBACnC+F,EyBLgCC,CAAyB7Y,EAAMuK,QAChEmO,EAAgBnM,GzBOgB,SAACxE,GACvC,IAAI2Q,EAAgB,EAEpB,OADA3Q,EAAUgN,SAAS,SAAArK,GAASgO,GAAiBpM,GAAqB5B,EAAKmI,mBAAoBnI,EAAK2B,aACzFqM,EyBV6BI,CAA2B9Y,EAAMuK,QACrE,MAAM,CACFkO,mBACAC,gBACAF,WAAYxY,EAAMuK,MAAME,OACxBkO,WAAYpM,GAAckM,EAAiBC,MAqCpCpU,CAAyBiU,IC5CnBQ,G,4JACjB,WACI,MAAoChZ,KAAKC,MAAjCuK,EAAR,EAAQA,MAAOyO,EAAf,EAAeA,iBACf,OAAQzO,EAAMxG,KAAI,SAAC2G,EAAM1G,GACrB,IAAO4O,EAA8ElI,EAA9EkI,MAAOjF,EAAuEjD,EAAvEiD,YAAakF,EAA0DnI,EAA1DmI,mBAAoBxG,EAAsC3B,EAAtC2B,SAAUlE,EAA4BuC,EAA5BvC,UAAWuG,EAAiBhE,EAAjBgE,cAChE,OAAO,yBAAKzK,IAAKkE,GACZnE,EAAM,GAAK,6BACZ,yBAAK3D,UAAU,YACX,yBAAKA,UAAU,2BACX,kBAAC,IAAD,CAAMoF,GAAE,kBAAa0C,IAAa,yBAAK9H,UAAU,gBAAgBsK,IAAK+D,EAAc,GAAI7D,IAAK8C,MAEjG,yBAAKtN,UAAU,2BACX,kBAAC,IAAD,CAAMoF,GAAE,kBAAa0C,IAAa,uBAAG9H,UAAU,wBAAwBsN,IACvE,wBAAItN,UAAU,cAAcuS,GAC5B,6BACI,4BAAQvS,UAAU,QAAlB,SAA2B8L,GAA4B0G,EAAoBxG,IAC3E,uBAAGhM,UAAU,QAAQwS,GACrB,2BAAOxS,UAAU,gBAAe,gCAASgM,EAAT,YAGxC,yBAAKhM,UAAU,2BACX,2BAAG,wEAEP,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,kBAAkBG,QAAS,kBAAMwY,EAAiB7Q,KAC9D,0BAAM9H,UAAU,kBAAhB,sB,GA1BEI,aCehCwY,G,4JACF,WACI,MAA0ClZ,KAAKC,MAAvC+H,EAAR,EAAQA,UAAWmR,EAAnB,EAAmBA,mBACnB,OACI,kBAAC,IAAMpG,SAAP,KACI,kBAAC,GAAD,CAAQV,UAAU,IACM,IAArBrK,EAAU0C,OAAe,kBAAC,GAAD,MACxB,yBAAKpK,UAAU,mBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,KACI,+CAAiB0H,EAAU0C,OAA3B,MAA0C,6BAC1C,kBAAC,GAAD,CAAUF,MAAOxC,EAAWiR,iBAAmBE,KAEnD,kBAAC,EAAD,KACI,yBAAK7Y,UAAW,eACZ,kBAAC,IAAD,CAAMoF,GAAG,aACLpF,UAAU,2BACVG,QAAST,KAAKoZ,kBACV,kDAKpB,yBAAK9Y,UAAU,YACX,kBAAC,GAAD,CAAakK,MAAOxC,OAKpC,kBAAC,GAAD,W,GA9BOtH,aAoCR6D,gBA5CS,iBAAO,CAC3ByD,UAAYyD,SAGW,SAACjH,GAAD,MAAe,CACtC2U,mBAAoB,SAAC/Q,GAAD,OAAe5D,E/BTL,SAAA4D,GAAS,MAAK,CAC5CnH,KAAMyG,EAAWE,YACjB9F,QAASsG,G+BOmC+Q,CAAmB/Q,QAuCpD7D,CAA6C2U,IC5C/CG,GAAwB,SAACxQ,EAAMhH,GAAP,MAAmB,CACpDZ,KAAMoH,GAAeE,YACrBzG,QAAS,CAAC+G,OAAMhH,YAGPyX,GAAuB,SAACC,GAAD,MAAgB,CAChDtY,KAAMoH,GAAeG,0BACrB1G,QAASyX,IAGAC,GAAwB,SAACD,GAAD,MAAgB,CACjDtY,KAAMoH,GAAeI,2BACrB3G,QAASyX,ICQPE,G,4MACFC,iBAAmB,SAACC,GAAD,OACf,kBAAC,IAAM5G,SAAP,KACI,0BAAMzS,UAAS,sBAAiBqZ,EAAjB,eAAf,KACA,0BAAMrZ,UAAU,mBAAkB,4C,EAI1CsZ,gBAAkB,WACd,MAAwG,EAAK3Z,MAAtG+H,EAAP,EAAOA,UAAW6I,EAAlB,EAAkBA,mBAAoB/E,EAAtC,EAAsCA,UAAWJ,EAAjD,EAAiDA,eAAgB9J,EAAjE,EAAiEA,UAAWG,EAA5E,EAA4EA,gBAAiBkQ,EAA7F,EAA6FA,QACvFrB,EAAiBZ,GAAqBhI,GAC5CpG,GAAU,GACVkQ,GAAkBlB,EAAgBC,GAAoBK,MAAM,SAAAG,GACxDA,GAAYvF,IACZJ,IACAuG,EAAQxE,KAAK,KACb7L,GAAU,MACX,SAAAmQ,GACChQ,EAAgB,CAACgQ,IACjBnQ,GAAU,O,EAIlBiY,aAAe,WACX,EAAK5Z,MAAM6Z,kBAAkB1X,EAAUK,KAAKC,IAAKN,EAAUI,MAC3D,EAAKvC,MAAM6Z,kBAAkB1X,EAAUK,KAAKE,KAAK,GACjD,EAAK1C,MAAM6Z,kBAAkB1X,EAAUK,KAAKG,OAAO,GACnD,EAAK3C,MAAM6Z,kBAAkB1X,EAAUK,KAAKI,MAAM,I,EAGtDkX,iBAAmB,WACf,EAAK9Z,MAAM6Z,kBAAkB1X,EAAUK,KAAKC,IAAKN,EAAUG,SAC3D,EAAKtC,MAAM6Z,kBAAkB1X,EAAUK,KAAKE,IAAKP,EAAUI,O,EAG/DwX,mBAAqB,kBACjB,EAAK/Z,MAAMga,WACP,yBAAK3Z,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,0BAAMA,UAAU,cAAhB,QACA,4BAAQA,UAAU,QAAQ,EAAKL,MAAMiS,eAEzC,4BAAQ5R,UAAU,mBAAmBG,QAAS,EAAKmZ,iBAAiB,uEACpE,4BAAQtZ,UAAU,qCAAqCG,QAAS,EAAKsZ,kBAAkB,yDAG/F,yBAAKzZ,UAAU,OACX,2BAAOA,UAAU,wBAAjB,kHAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMoF,GAAI,eAAgBpF,UAAU,sCAAqC,wDAE7E,2BAAOA,UAAU,wBAAjB,8G,EAKZ4Z,iBAAmB,kBACf,kBAAC,IAAMnH,SAAP,KACI,yBAAKzS,UAAU,OACX,yBAAKA,UAAU,2BACV,EAAKoZ,iBAAiB,SACvB,0BAAMpZ,UAAU,aAAY,4CAEhC,yBAAKA,UAAU,OACX,4BAAQA,UAAU,mCAAmCG,QAAS,EAAKoZ,cAAnE,YAGR,yBAAKvZ,UAAU,OACX,yBAAKA,UAAU,uBACX,+BAAO,gCAAS,EAAKL,MAAMiS,mB,4CAM3C,WACI,IAAOiI,EAAiBna,KAAKC,MAAtBka,cACP,OACI,kBAAC,EAAD,CACI7Z,UAAU,OACVH,YAAa,cACbD,OAAQia,IAAkB/X,EAAUI,MAAQxC,KAAK0Z,iBAAiB,SAChES,IAAkB/X,EAAUG,QAASvC,KAAKka,mBAAoBla,KAAKga,0B,GAvF5DtZ,aA6FVqE,eAAWR,aA7GF,iBAAO,CAC3B2N,aAAc7G,KACdwF,mBAAoBvF,KACpBtD,UAAWyD,KACXwO,WAAY9O,KACZgP,cAAepO,GAAsB3J,EAAUK,KAAKC,SAG7B,SAAC8B,GAAD,MAAe,CACtCkH,eAAgB,kBAAMlH,EAASkH,OAC/BI,UAAW,kBAAMtH,EAASsH,OAC1BlK,UAAW,SAACC,GAAD,OAAY2C,EAAS5C,EAAUC,KAC1CE,gBAAiB,SAACoQ,GAAD,OAAY3N,EAASzC,EAAgBoQ,KACtD2H,kBAAmB,SAACjR,EAAMhH,GAAP,OAAkB2C,EAAS6U,GAAsBxQ,EAAMhH,QAgGpD0C,CAA6CkV,KCrGjEzS,GAAgB,CAClBoT,aAAc,GACdC,eAAgB,GAChBC,KAAM,GACNC,QAAQ,GACRC,KAAK,GACL7H,MAAM,GACN8H,SAAS,GACTC,YAAY,GACZlT,MAAO,CACH4S,aAAa,GACbC,eAAe,GACfC,KAAK,GACLC,QAAQ,GACRC,KAAK,GACL7H,MAAM,GACN8H,SAAS,GACTC,YAAY,KAIdC,G,kDACF,aAAe,IAAD,8BACV,gBAWJ7F,aAAe,WACX,IjB3BqB/H,EAKG6N,EiBsBlBpT,EAAQ,GAQd,OAPAA,EAAM4S,cjB5BerN,EiB4Ba,EAAK4F,MAAMyH,ajB3B7B,wBACDhG,KAAKrH,GAAM,GAAG,uCiB2B7BvF,EAAM6S,eAAiBhG,GAAqB,EAAK1B,MAAM0H,gBACvD7S,EAAM+S,SjBzBkBK,EiByBQ,EAAKjI,MAAM4H,QjBxB5B,gBACDnG,KAAKwG,GAAK,GAAG,8BiBwB3BpT,EAAM8S,KAAO7F,GAAa,EAAK9B,MAAM2H,KAAM,2BAC3C9S,EAAMgT,KAAO/F,GAAa,EAAK9B,MAAM6H,KAAM,2BAC3ChT,EAAMmL,MAAQ8B,GAAa,EAAK9B,MAAMA,MAAO,4BAC7C,EAAKF,SAAS,CAACjL,YACNA,EAAM4S,cAAc5S,EAAM6S,gBAAgB7S,EAAM+S,SAAS/S,EAAM8S,MAAM9S,EAAMgT,MAAMhT,EAAMmL,QArBtF,EAwBdkI,qBAAuB,SAAAtB,GAEhBA,GACC,EAAKtZ,MAAMuZ,sBAAsBD,GAErC,EAAKtZ,MAAM6a,YACRvB,IACC,EAAKtZ,MAAMoZ,sBAAsBjX,EAAUK,KAAKE,IAAKP,EAAUG,SAC/D,EAAKtC,MAAMoZ,sBAAsBjX,EAAUK,KAAKG,MAAOR,EAAUI,QAhC3D,EAoCduY,eAAiB,SAAA3F,GACb,MAAgF,EAAKnV,MAA9E4V,EAAP,EAAOA,WAAYjU,EAAnB,EAAmBA,UAAWG,EAA9B,EAA8BA,gBAAiB4J,EAA/C,EAA+CA,qBAAsBmC,EAArE,EAAqEA,QACrE,EAAoC,EAAK6E,MAAxBpE,GAAjB,EAAO/G,MAAP,0BACMwT,EAAalN,EAASgE,GAA2BA,GACvDsD,EAAMlH,iBACH,EAAK4G,iBACJlT,GAAU,GACVoZ,EAAWzM,EAAiBsH,GAAY3E,MAAM,SAAAG,GAC1C1F,EAAqB0F,EAAS1K,WAC9B,EAAKkU,qBAAqBtM,EAAgBR,KAC1CnM,GAAU,MACX,SAAAmQ,GACChQ,EAAgB,CAACgQ,IACjBnQ,GAAU,QAjDR,EAsDdb,aAAe,SAAAqU,GACX,MAAwBA,EAAMY,OAAtBjJ,EAAR,EAAQA,KAAM/G,EAAd,EAAcA,MACRwB,EAAK,eAAO,EAAKmL,MAAMnL,OAC7BA,EAAMuF,GAAQ,GACd,EAAK0F,SAAL,gBAAiB1F,EAAO/G,IACxB,EAAKyM,SAAS,CAAEjL,WAzDhB,EAAKmL,MAAQ3L,GAFH,E,qDAKd,WACI,IAAO8G,EAAW9N,KAAKC,MAAhB6N,QACJA,GACC9N,KAAKyS,SAAL,eAAkB3E,M,oBAsD1B,WACI,MAA6B9N,KAAKC,MAA3B6a,EAAP,EAAOA,UAAWhN,EAAlB,EAAkBA,QAClB,EAAiG9N,KAAK2S,MAA/FyH,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,eAAgBC,EAArC,EAAqCA,KAAMC,EAA3C,EAA2CA,QAASC,EAApD,EAAoDA,KAAM7H,EAA1D,EAA0DA,MAAO8H,EAAjE,EAAiEA,SAAUC,EAA3E,EAA2EA,YAAalT,EAAxF,EAAwFA,MAClFpH,EAAQ0N,EAAQ,eAAe,oBACrC,OACI,kBAAC,EAAD,CAAM1N,MAAQ,wBAAIE,UAAU,cAAcF,IACtC,yBAAKE,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CACIa,GAAG,gBACHN,UAAU,UACVkM,KAAK,eACL/G,MAASoU,EACTtZ,WAAc0G,EAAM4S,aACpBnE,SAAYjW,KAAKe,aACjBK,MAAQ,UAEhB,yBAAKd,UAAU,uBACX,kBAAC,EAAD,CACIa,GAAG,kBACHN,UAAU,SACVoa,UAAU,KACVlO,KAAK,iBACL/G,MAASqU,EACTvZ,WAAc0G,EAAM6S,eACpBpE,SAAYjW,KAAKe,aACjBK,MAAQ,6BAGpB,yBAAKd,UAAU,cACX,kBAAC,EAAD,CACIa,GAAG,OACHN,UAAU,UACVkM,KAAK,OACL/G,MAAOsU,EACPxZ,WAAc0G,EAAM8S,KACpBrE,SAAUjW,KAAKe,aACfK,MAAM,+BAEd,yBAAKd,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CACIa,GAAG,UACHN,UAAU,SACVoa,UAAU,IACVlO,KAAK,UACL/G,MAASuU,EACTzZ,WAAc0G,EAAM+S,QACpBtE,SAAYjW,KAAKe,aACjBK,MAAQ,aAEhB,yBAAKd,UAAU,uBACX,kBAAC,EAAD,CACIa,GAAG,OACHN,UAAU,UACVkM,KAAK,OACL/G,MAASwU,EACT1Z,WAAc0G,EAAMgT,KACpBvE,SAAYjW,KAAKe,aACjBK,MAAQ,yBAGpB,yBAAKd,UAAU,YACX,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CACIa,GAAG,QACHN,UAAU,UACVkM,KAAK,QACL/G,MAAS2M,EACT7R,WAAc0G,EAAMmL,MACpBsD,SAAYjW,KAAKe,aACjBK,MAAQ,WAEhB,yBAAKd,UAAU,uBACX,kBAAC,EAAD,CACIa,GAAG,WACHN,UAAU,UACVkM,KAAK,WACL/G,MAASyU,EACTxE,SAAYjW,KAAKe,aACjBK,MAAQ,0BAGpB,yBAAKd,UAAU,cACX,6BAAK,2BAAOA,UAAU,iBAAjB,iBACL,kBAAC,EAAD,CACIa,GAAG,iBACHN,UAAU,QACVkM,KAAK,cACL/G,MAAM,IACNkV,QAAyB,MAAhBR,EACTzE,SAAUjW,KAAKe,aACfK,MAAM,4BACV,kBAAC,EAAD,CACID,GAAG,iBACHN,UAAU,QACVkM,KAAK,cACL/G,MAAM,IACNkV,QAAyB,MAAhBR,EACTzE,SAAUjW,KAAKe,aACfK,MAAM,wCAEd,yBAAKd,UAAU,YACX,yBAAKA,UAAU,YACX,4BACIA,UAAU,gCACVG,QAAST,KAAK+a,gBACV,0DAGZ,yBAAKza,UAAU,YACX,4BACIA,UAAU,uBACVG,QAASqa,GACL,iD,GAjLNpa,aA0LX6D,gBA3NS,iBAAO,CAC3BsR,WAAYvK,SAGW,SAAC9G,GAAD,MAAe,CACtC5C,UAAW,SAACC,GAAD,OAAY2C,EAAS5C,EAAUC,KAC1CE,gBAAiB,SAACyF,GAAD,OAAWhD,EAASzC,EAAgByF,KACrDmE,qBAAsB,SAAChF,GAAD,OAAenC,EAASmH,GAAqBhF,KACnE6S,sBAAuB,SAACD,GAAD,OAAe/U,EAASgV,GAAsBD,KACrEF,sBAAuB,SAACxQ,EAAMhH,GAAP,OAAkB2C,EAAS6U,GAAsBxQ,EAAMhH,QAkNnE0C,CAA6CoW,IC5NtDQ,G,4MACFC,eAAiB,SAACna,GACd,OAAOA,GAAQ,0BAAMX,UAAU,+BAAyC,MAATW,EAAc,OAAQ,S,EAGzFoa,YAAc,SAACla,GACX,EAAKlB,MAAMqb,iBAAiBna,I,EAGhCoa,sBAAwB,SAACpa,GACrB,EAAKlB,MAAMqZ,qBAAqBnY,I,EAGpCqa,sBAAwB,SAACra,GACrB,EAAKlB,MAAMuZ,sBAAsBrY,GACjC,EAAKlB,MAAM6Z,kBAAkB1X,EAAUK,KAAKE,IAAKP,EAAUG,SAC3D,EAAKtC,MAAM6Z,kBAAkB1X,EAAUK,KAAKG,MAAOR,EAAUI,O,4CAGjE,WAAU,IAAD,OACL,EAAuCxC,KAAKC,MAApC6N,EAAR,EAAQA,QACF2N,EADN,EAAiB1S,oBAC+B+E,EAAQC,IAClD2N,EAAcD,EAAmB,mBAAoB,GAC3D,OACI,kBAAC,EAAD,CAAMnb,UAAS,UAAKob,EAAL,wBAAwCjb,QAAS,kBAAM,EAAK8a,sBAAsBzN,EAAQC,OACrG,yBAAKzN,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,SACX,0BAAMA,UAAU,QAAO,gCAASwN,EAAQsM,eACvCpa,KAAKob,eAAetN,EAAQ4M,aAC7B,0BAAMpa,UAAU,QAAO,gCAASwN,EAAQuM,kBAE5C,yBAAK/Z,UAAU,cACX,wCAAUwN,EAAQwM,KAAlB,OACA,wCAAUxM,EAAQ0M,KAAlB,OACA,wCAAU1M,EAAQ6E,MAAlB,QACA,8BAAM,gCAAS7E,EAAQyM,YAG9BkB,GAAqB,yBAAKnb,UAAU,OACjC,4BACIA,UAAU,uDACVG,QAAS,kBAAM,EAAK4a,YAAYvN,EAAQC,OAF5C,UAKP0N,GAAqB,yBAAKnb,UAAU,OACjC,yBAAKA,UAAU,wCACX,4BACIA,UAAU,qCACVG,QAAS,kBAAM,EAAK+a,sBAAsB1N,EAAQC,OAC9C,yD,GAlDHrN,aA2Dd6D,eAAQ,MAjEI,SAACC,GAAD,MAAe,CACtC8U,qBAAsB,SAACnY,GAAD,OAAQqD,EAAS8U,GAAqBnY,KAC5DqY,sBAAuB,SAACrY,GAAD,OAAQqD,EAASgV,GAAsBrY,KAC9D2Y,kBAAmB,SAACjR,EAAMhH,GAAP,OAAkB2C,EAAS6U,GAAsBxQ,EAAMhH,QA8D/D0C,CAAkC4W,IC1D3CQ,G,kDACF,aAAc,IAAD,8BACT,gBAIJL,iBAAmB,SAACna,GAChB,EAAKsR,SAAS,CAACmJ,cAAcza,KANpB,EASb2Z,UAAW,WACP,EAAKrI,SAAS,CAACmJ,cAAc,MAR7B,EAAKjJ,MAAQ,CAAEiJ,cAAe,IAFrB,E,0CAab,WAAU,IAAD,OACL,EAAuC5b,KAAKC,MAArC0G,EAAP,EAAOA,UAAWoC,EAAlB,EAAkBA,kBACX6S,EAAiB5b,KAAK2S,MAAtBiJ,cACP,OACIjV,EAAU3C,KAAI,SAAA8J,GAAO,OACjB8N,IAAkB9N,EAAQC,IACtB,kBAAC,GAAD,CACI7J,IAAK4J,EAAQC,IACbD,QAASA,EACTgN,UAAW,EAAKA,YACpB,kBAAC,GAAD,CACI5W,IAAK4J,EAAQC,IACbD,QAASA,EACT/E,kBAAmBA,EACnBuS,iBAAkB,EAAKA,0B,GA5BrB5a,aAmCX6D,gBAvCS,iBAAO,CAC3BwE,kBAAmBiD,QAsCRzH,CAAyBoX,ICZlCE,G,kDACF,WAAY5b,GAAO,IAAD,8BACd,cAAMA,IAmBV6b,0BAA4B,SAACnV,GACzB,MAAgD,EAAK1G,MAA9C8b,EAAP,EAAOA,gBAAiBzC,EAAxB,EAAwBA,sBACpByC,GAAmBpV,EAAU+D,OAAS,GACtC4O,EAAqB3S,EAAU,GAAGoH,MAvBxB,EA0BlB2L,iBAAmB,SAACC,GAAD,OACf,kBAAC,IAAM5G,SAAP,KACI,0BAAMzS,UAAS,sBAAiBqZ,EAAjB,eAAf,KACA,0BAAMrZ,UAAU,mBAAkB,uDA7BxB,EAiClBuZ,aAAe,WACX,EAAK5Z,MAAM6Z,kBAAkB1X,EAAUK,KAAKE,IAAKP,EAAUI,MAC3D,EAAKvC,MAAM6Z,kBAAkB1X,EAAUK,KAAKG,OAAO,GACnD,EAAK3C,MAAM6Z,kBAAkB1X,EAAUK,KAAKI,MAAM,IApCpC,EAuClBmZ,kBAAoB,WAChB,EAAKvJ,SAAS,CAACwJ,YAAY,EAAKtJ,MAAMsJ,cAxCxB,EA2ClBC,6BAA+B,WAC3B,MAAqC,EAAKjc,MAAlC0G,EAAR,EAAQA,UAAWwV,EAAnB,EAAmBA,cACXF,EAAe,EAAKtJ,MAApBsJ,WACR,OACGE,EACC,yBAAK7b,UAAU,aACVqG,EAAU+D,OAAO,GAAK,kBAAC,GAAD,CAAa/D,UAAYA,IAC/CsV,EACG,kBAAC,GAAD,CAAanB,UAAa,EAAKkB,oBAC/B,kBAAC,EAAD,CACI5b,MAAO,yBACCE,UAAU,wBACVG,QAAS,EAAKub,mBAFf,0BAQnB,yBAAK1b,UAAU,OACX,yBAAKA,UAAU,2BACV,EAAKoZ,iBAAiB,YA/DrB,EAqElB0C,2BAA6B,WACzB,IAAOC,EAAoB,EAAKpc,MAAzBoc,iBACP,OACI,kBAAC,IAAMtJ,SAAP,KACI,yBAAKzS,UAAU,OACX,yBAAKA,UAAU,2BACV,EAAKoZ,iBAAiB,SACvB,0BAAMpZ,UAAU,aAAY,4CAEhC,yBAAKA,UAAU,OACX,4BAAQA,UAAU,mCAAmCG,QAAS,EAAKoZ,cAAnE,YAGR,yBAAKvZ,UAAU,OACX,yBAAKA,UAAU,uBACX,+BACI,0CAAY+b,EAAiBjC,aAA7B,MACA,wCAAUiC,EAAiB/B,KAA3B,OACA,wCAAU+B,EAAiB7B,KAA3B,OACA,wCAAU6B,EAAiB1J,MAA3B,QACA,8BAAM,gCAAS0J,EAAiB9B,eAvFpD,EAAK5H,MAAQ,CAAEsJ,YAAa,GAFd,E,sDAKlB,SAAmBvX,GAAY,IAAD,OAC1B,EAAsF1E,KAAKC,MAApFqc,EAAP,EAAOA,WAAY3Q,EAAnB,EAAmBA,qBAAsB/J,EAAzC,EAAyCA,UAAWG,EAApD,EAAoDA,gBAAiBoa,EAArE,EAAqEA,eACtC,IAA5BzX,EAAUyX,eAA2BA,IAAkB/Z,EAAUI,OAChEZ,GAAU,G/BQc,SAACiP,GACjC,IAAMC,EAAU,CAAE,cAAkBD,GACpC,OAAOE,IAAMjL,IAAIsK,GAAI/J,mBAAoB,CAACyK,YACzCI,MAAM,YACH,OADgB,EAAVC,QAEPC,OAAO,YAA2B,IAAxBC,EAAuB,EAAvBA,SAASpP,EAAc,EAAdA,QAClB,MAAMoP,EAAUA,EAASF,KAAKG,aAAerP,K+BbzC6P,CAAyBwK,GAAYpL,MAAM,SAAAG,GACvC1F,EAAqB0F,EAAS1K,WAC9B,EAAKmV,0BAA0BzK,EAAS1K,WACxC/E,GAAU,MACX,SAAAmQ,GACChQ,EAAgB,CAACgQ,IACjBnQ,GAAU,S,oBAkFtB,WACI,IAAOua,EAAiBnc,KAAKC,MAAtBkc,cACP,OACI,kBAAC,EAAD,CACI7b,UAAU,OACVH,YAAa,cACbD,OAAQic,IAAkB/Z,EAAUI,MAAQxC,KAAK0Z,iBAAiB,SACjEyC,IAAkB/Z,EAAUG,QAASvC,KAAKoc,6BAA8Bpc,KAAKkc,oC,GAzG3Dxb,aA+GpB6D,gBAlIS,WACpB,IAAMoC,EAAY4E,KACZgO,EAAYtN,KAClB,MAAO,CACHqQ,WAAYhR,KACZ3E,YACAwV,cAAepQ,GAAsB3J,EAAUK,KAAKE,KACpD0Z,iBAAkBxO,GAAelH,EAAW4S,GAC5CwC,gBAAiB/P,SAGE,SAACxH,GAAD,MAAe,CACtCmH,qBAAsB,SAAChF,GAAD,OAAenC,EAASmH,GAAqBhF,KACnE/E,UAAW,SAACC,GAAD,OAAY2C,EAAS5C,EAAUC,KAC1CE,gBAAiB,SAACoQ,GAAD,OAAY3N,EAASzC,EAAgBoQ,KACtD2H,kBAAmB,SAACjR,EAAMhH,GAAP,OAAkB2C,EAAS6U,GAAsBxQ,EAAMhH,KAC1EyX,qBAAsB,SAACnY,GAAD,OAAQqD,EAAS8U,GAAqBnY,QAkHjDoD,CAA6CsX,IC9HtDU,G,4MACF1C,aAAe,WACX,EAAK5Z,MAAM6Z,kBAAkB1X,EAAUK,KAAKG,MAAOR,EAAUI,MAC7D,EAAKvC,MAAM6Z,kBAAkB1X,EAAUK,KAAKI,MAAM,I,EAGtD6W,iBAAmB,SAACC,GAAD,OACf,kBAAC,IAAM5G,SAAP,KACI,0BAAMzS,UAAS,sBAAiBqZ,EAAjB,eAAf,KACA,0BAAMrZ,UAAU,mBAAkB,oD,EAI1Ckc,oBAAsB,WAClB,EAAKvc,MAAM6Z,kBAAkB1X,EAAUK,KAAKG,MAAOR,EAAUG,SAC7D,EAAKtC,MAAM6Z,kBAAkB1X,EAAUK,KAAKI,KAAMT,EAAUI,O,EAGhEia,qBAAuB,SAACrU,GACpB,EAAKnI,MAAMyc,uBAAuBtU,I,EAGtCuU,0BAA4B,WACxB,MAA2C,EAAK1c,MAAxC2c,EAAR,EAAQA,gBAAiB1T,EAAzB,EAAyBA,cACzB,OACI0T,EACI1T,EAAcwB,OAAO,kBAAC,IAAMqI,SAAP,KACjB,kBAAC,GAAD,CAAUvI,MAAOtB,EAAe+P,iBAAmB,EAAKwD,uBACxD,kBAAC,EAAD,KACI,yBAAKnc,UAAU,eACX,4BACIA,UAAU,2BACVG,QAAS,EAAK+b,qBACV,iDAKpB,8DAEJ,yBAAKlc,UAAU,OACX,yBAAKA,UAAU,2BACV,EAAKoZ,iBAAiB,Y,EAMvCmD,wBAA0B,WACtB,IAAO3T,EAAiB,EAAKjJ,MAAtBiJ,cACD4T,EAAW,UAAM5T,EAAcwB,OAApB,gBAAkCxB,EAAcwB,OAAO,EAAG,IAAK,IAChF,OACI,kBAAC,IAAMqI,SAAP,KACI,yBAAKzS,UAAU,OACX,yBAAKA,UAAU,2BACV,EAAKoZ,iBAAiB,SACvB,0BAAMpZ,UAAU,aAAY,4CAEhC,yBAAKA,UAAU,OACX,4BAAQA,UAAU,mCAAmCG,QAAS,EAAKoZ,cAAnE,YAGR,yBAAKvZ,UAAU,OACX,yBAAKA,UAAU,uBACX,+BACI,gCAAUwc,Q,4CAQlC,WACI,MAAyC9c,KAAKC,MAAvC2c,EAAP,EAAOA,gBAAiB1T,EAAxB,EAAwBA,cACxB,OACI,kBAAC,IAAM6J,SAAP,KACI,kBAAC,EAAD,CACIzS,UAAU,OACVH,YAAa,cACbD,OAAQ0c,IAAoBxa,EAAUI,MAAQxC,KAAK0Z,iBAAiB,SACnEkD,IAAoBxa,EAAUG,QAASvC,KAAK6c,0BAA2B7c,KAAK2c,8BAE9EzT,EAAcwB,QAAU,kBAAC,EAAD,W,GAnFXhK,aAyFjB6D,gBAnGS,iBAAO,CAC3BqY,gBAAiB7Q,GAAsB3J,EAAUK,KAAKG,OACtDsG,cAAegD,SAGQ,SAAC1H,GAAD,MAAe,CACtCkY,uBAAwB,SAACtU,GAAD,OAAe5D,ENgBL,SAAA4D,GAAS,MAAK,CAChDnH,KAAMoH,GAAeT,YACrB9F,QAASsG,GMlBuCsU,CAAuBtU,KACvE0R,kBAAmB,SAACjR,EAAMhH,GAAP,OAAkB2C,EAAS6U,GAAsBxQ,EAAMhH,QA4F/D0C,CAA6CgY,IChFtDQ,G,4MACFrD,iBAAmB,SAACC,GAAD,OACf,kBAAC,IAAM5G,SAAP,KACI,0BAAMzS,UAAS,sBAAiBqZ,EAAjB,eAAf,KACA,0BAAMrZ,UAAU,mBAAkB,sD,EAI1C0c,aAAe,WACX,MACwE,EAAK/c,MADrE4V,EAAR,EAAQA,WAAYjU,EAApB,EAAoBA,UAAWG,EAA/B,EAA+BA,gBAAiBG,EAAhD,EAAgDA,kBACxC4X,EADR,EACQA,kBAAmB9R,EAD3B,EAC2BA,UAAWiK,EADtC,EACsCA,QAASgL,EAD/C,EAC+CA,qBACzCtL,EAAevD,KACrB0L,EAAkB1X,EAAUK,KAAKI,KAAMT,EAAUG,SACjDX,GAAU,GACVkQ,GAAeH,EAAckE,GAAY3E,MAAM,SAAAG,GAC3CnP,EAAkB,CAACmP,EAASpP,UAC5Bgb,EAAqBhN,GAAuBoB,EAAS6L,gBAAiBlV,IACtEpG,GAAU,GACVqQ,EAAQxE,KAAK,cACd,SAAAsE,GACChQ,EAAgB,CAACgQ,IACjBnQ,GAAU,O,EAIlBub,2BAA6B,WAEzB,OAD2B,EAAKld,MAAxBmd,eAEY,kBAAC,EAAD,KACZ,yBAAK9c,UAAU,YACX,yBAAKA,UAAU,OAAf,qBAEJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,4BACIA,UAAU,2BACVG,QAAS,EAAKuc,cACV,sDAKpB,yBAAK1c,UAAU,OACX,yBAAKA,UAAU,2BACV,EAAKoZ,iBAAiB,Y,EAMvC2D,yBAA2B,kBACvB,yBAAK/c,UAAU,OACX,yBAAKA,UAAU,2BACV,EAAKoZ,iBAAiB,SACvB,0BAAMpZ,UAAU,aAAY,8C,4CAKxC,WACI,IAAO8c,EAAkBpd,KAAKC,MAAvBmd,eACP,OACI,kBAAC,EAAD,CACI9c,UAAU,OACVH,YAAa,cACbD,OAAQkd,IAAmBhb,EAAUI,MAAQxC,KAAK0Z,iBAAiB,SAClE0D,IAAmBhb,EAAUG,QAASvC,KAAKqd,2BAA4Brd,KAAKmd,kC,GAlE5Dzc,aAwElBqE,eAAWR,aAtFF,iBAAO,CAC3B6Y,eAAgBrR,GAAsB3J,EAAUK,KAAKI,MACrDgT,WAAYvK,KACZtD,UAAWyD,SAGY,SAACjH,GAAD,MAAe,CACtCsV,kBAAmB,SAACjR,EAAMhH,GAAP,OAAkB2C,EAAS6U,GAAsBxQ,EAAMhH,KAC1ED,UAAW,SAACC,GAAD,OAAY2C,EAAS5C,EAAUC,KAC1CE,gBAAiB,SAACyF,GAAD,OAAWhD,EAASzC,EAAgByF,KACrDtF,kBAAmB,SAACuF,GAAD,OAAajD,EAAStC,EAAkBuF,KAC3DwV,qBAAsB,SAACzS,GAAD,OAAWhG,EvCHD,SAAAgG,GAAK,MAAK,CAC1CvJ,KAAMyG,EAAWK,UACjBjG,QAAU0I,GuCCgCyS,CAAqBzS,QA2EzCjG,CAA6CwY,KC7DjEO,G,uKACF,WACIzY,OAAO0Y,iBAAiB,eAAgBvP,IACxC,MAA8HhO,KAAKC,MAA3Hud,EAAR,EAAQA,WAAYnE,EAApB,EAAoBA,sBAAuBoE,EAA3C,EAA2CA,mBAAoBC,EAA/D,EAA+DA,oBAAqB1V,EAApF,EAAoFA,UAAW4E,EAA/F,EAA+FA,SAAU+Q,EAAzG,EAAyGA,iBACnGhT,EAAOgT,EAAkBhR,GAAeC,EAAU+Q,GAAmB,KAC3EF,IACAC,EAAoB/S,EAAM,CAACA,GAAO3C,GAClCqR,EAAsBjX,EAAUK,KAAKC,IAAK8a,EAAYpb,EAAUG,QAASH,EAAUI,MACnF6W,EAAsBjX,EAAUK,KAAKE,MAAK6a,GAAYpb,EAAUI,Q,kCAGpE,WACIqC,OAAO+Y,oBAAoB,eAAgB5P,IAC3ChO,KAAKC,MAAM4d,sB,oBAGf,WACI,IAAO3U,EAAiBlJ,KAAKC,MAAtBiJ,cACD4U,EAAsB5U,EAAcwB,OAAQ,WAAY,oBAC9D,OACI,kBAAC,IAAMqI,SAAP,KACI,kBAAC,GAAD,CAAQV,UAAU,EAAMC,WAAW,IACnC,yBAAKhS,UAAY,mBACb,yBAAKA,UAAU,YACX,yBAAKA,UAAawd,GACd,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEH5U,EAAcwB,OAAS,GAAK,yBAAKpK,UAAU,YACxC,kBAAC,GAAD,CAAakK,MAAOtB,Y,GA/BrBxI,aAwCZ6D,gBA5DS,SAACoO,EAAO1S,GAC5B,IrCuCuB8d,EqCvCjBC,GrCuCiBD,EqCvCE9d,EAAM0E,SAASoZ,OrCuCN,IAAIE,gBAAgBF,IqCtCtD,MAAM,CACF/V,UAAWyD,KACX+R,WAAYrS,KACZjC,cAAegD,KACfgS,aAAcnS,GAAsB3J,EAAUK,KAAKI,MACnD+J,SAAUT,KACVwR,iBAAkBK,EAAMlY,IAAI1D,EAAUU,MAAMC,gBAIzB,SAACyB,GAAD,MAAe,CACtCiZ,mBAAoB,kBAAMjZ,ER9BgB,CAC1CvD,KAAMoH,GAAeC,oBACrBxG,QAAS,CAAGqc,QAAQ,CAACtc,QAAO,GAChBiH,QAAQ,CAACjH,QAAO,GAChBoH,UAAU,CAACpH,QAAO,GAClBuc,SAAS,CAACvc,QAAO,OQ0B7B6b,oBAAqB,SAAC1V,GAAD,OAAexD,ERPL,SAACwD,GAAD,MAAgB,CAC/C/G,KAAMoH,GAAeK,kBACrB5G,QAASkG,GQKoC0V,CAAoB1V,KACjEqR,sBAAuB,SAACxQ,EAAMhH,GAAP,OAAkB2C,EAAS6U,GAAsBxQ,EAAKhH,KAC7E+J,kBAAmB,SAAC1C,GAAD,OAAmB1E,EAASoH,GAAkB1C,KACjE2U,kBAAmB,kBAAMrZ,ERAW,CACpCvD,KAAMoH,GAAeM,mBACrB7G,QAAS,SQyCEyC,CAA6C+Y,IC3EtDe,G,4MACFC,sBAAwB,WACpB,EAAKre,MAAMgS,QAAQxE,KAAnB,yBAA0C,EAAKxN,MAAMse,W,4CAGzD,WACI,OACI,kBAAC,EAAD,CAAMje,UAAW,2BAA2BG,QAAST,KAAKse,uBACtD,yBAAKhe,UAAW,OACZ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBAAgBsK,IAAK5K,KAAKC,MAAMue,SAAU1T,IAAK9K,KAAKC,MAAM2N,eAE7E,yBAAKtN,UAAU,kBACX,uBAAGA,UAAU,aAAaN,KAAKC,MAAM2N,aACrC,uBAAGtN,UAAU,oBAAb,WAAyCN,KAAKC,MAAMyO,WAExD,yBAAKpO,UAAU,kBACX,oCAAKN,KAAKC,MAAM4Y,QAEpB,yBAAKvY,UAAU,mBACX,+BACI,0BAAMA,UAAU,4BAAhB,KACA,gCAASN,KAAKC,MAAM4B,OAApB,OAAgCkN,GAAiB/O,KAAKC,MAAMwe,YAAarc,EAAUkB,YAAYC,MAA/F,a,GAtBA7C,aA+BbqE,eAAWsZ,ICtBpBK,G,4JACF,WACI,OAAO1e,KAAKC,MAAM2G,OAAO5C,KAAI,SAAAyK,GACzB,IvCiEqBI,EuCjEd1G,EAAWsG,EAAXtG,QACP,OACI,kBAAC,GAAD,CACIjE,IAAOuK,EAAM8P,QACbA,QAAU9P,EAAM8P,QAChBnW,UAAaD,EAAQC,UACrBwF,YAAezF,EAAQyF,YACvB4Q,SAAYrW,EAAQwW,aACpBjQ,SAAYvG,EAAQuG,SACpBmK,MAASrM,GAAciC,EAAMmQ,YAC7B/c,QvCuDagN,EuCvDcJ,EAAMI,YvCwD1CzM,EAAUY,aAAa6L,EAAYA,EAAYnE,OAAO,GAAGmU,WuCvDhDJ,YAAe7P,GAAqBH,EAAMI,sB,GAdrCnO,aAqBV6D,gBA3BS,WACpB,MAAO,CACHqC,QvCqHyBA,EuCrHA4H,GAAoBhD,MvCsHjD5E,EAAOkY,MAAM,SAACC,EAAGC,GAAJ,OAAW,IAAI7P,KAAK6P,EAAEC,WAAa,IAAI9P,KAAK4P,EAAEE,gBADhC,IAAErY,IuC5FlBrC,CAAyBma,IChBlCQ,G,uKACF,WACI,MAA0Dlf,KAAKC,MAAvDkf,EAAR,EAAQA,kBAAmBvd,EAA3B,EAA2BA,UAAWG,EAAtC,EAAsCA,gBACtCH,GAAU,GrCsEO,WACrB,IAAMkP,EAAU,CAAE,cAAkBxF,MACpC,OAAOyF,IAAMjL,IAAIsK,GAAI9J,gBAAiB,CAACwK,YACtCI,MAAM,YACH,OADgB,EAAVC,QAEPC,OAAO,YAA2B,IAAxBC,EAAuB,EAAvBA,SAASpP,EAAc,EAAdA,QAClB,MAAMoP,EAAUA,EAASF,KAAKG,aAAerP,KqC3E7C6P,GAAgBZ,MAAM,SAAAG,GAClB8N,EAAkB9N,GAClBzP,GAAU,MACX,SAAAmQ,GACChQ,EAAgB,CAACgQ,IACjBnQ,GAAU,Q,oBAGlB,WACI,OACI,kBAAC,IAAMmR,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKzS,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,kBAAC,GAAD,SAIZ,kBAAC,GAAD,W,GAxBSI,aA8BV6D,eAAQ,MApCI,SAACC,GAAD,MAAe,CACtC2a,kBAAmB,SAACvY,GAAD,OAAYpC,E5CGF,SAACoC,GAAD,MAAa,CAC1C3F,KAAMiF,EAAeI,gBACrBxE,QAAS8E,G4CL+BuY,CAAkBvY,KAC1DhF,UAAW,SAACC,GAAD,OAAY2C,EAAS5C,EAAUC,KAC1CE,gBAAiB,SAACoQ,GAAD,OAAY3N,EAASzC,EAAgBoQ,QAiC3C5N,CAAkC2a,I,SC7BlCE,G,4JAhBX,WACI,OACI,yBAAK9e,UAAW,OACZ,yBAAKA,UAAU,SACX,yBAAKA,UAAU,gBAAgBsK,IAAK5K,KAAKC,MAAMue,SAAU1T,IAAK9K,KAAKC,MAAM2N,eAE7E,yBAAKtN,UAAU,SACX,yBAAKA,UAAU,aAAaN,KAAKC,MAAM2N,aACvC,uBAAGtN,UAAU,oBAAb,WAAyCN,KAAKC,MAAMyO,UACpD,qCAAM1O,KAAKC,MAAM4Y,a,GAVRnY,aCqBd2e,G,4JApBX,WACI,OACI,yBAAK/e,UAAW,OACZ,yBAAKA,UAAU,aACX,gDACA,+BACI,yBAAKA,UAAU,yBAAyBN,KAAKC,MAAM6N,QAAQsM,cAC3D,6BAAMpa,KAAKC,MAAM6N,QAAQwM,KAAzB,KAAiCta,KAAKC,MAAM6N,QAAQ2M,UACpD,6BAAMza,KAAKC,MAAM6N,QAAQ0M,KAAzB,MAAkCxa,KAAKC,MAAM6N,QAAQyM,QAArD,KAAgEva,KAAKC,MAAM6N,QAAQ6E,QAEvF,+BACI,yBAAKrS,UAAU,yBAAf,gBACA,6BAAMN,KAAKC,MAAM6N,QAAQuM,uB,GAbpB3Z,aCuBd4e,G,4JApBX,WACI,IAAMC,E3CiGuB,SAAC1Q,GAQlC,IAPA,IAAM2Q,EAAU3Q,EAAY7K,KAAI,SAAAyb,GAAK,kCAC1BA,GAD0B,IAE7B3Q,KAAMC,GAAiB0Q,EAAM3Q,KAAM1M,EAAUkB,YAAYE,OACzD3B,OAAQO,EAAUY,aAAayc,EAAMZ,eAIrCa,EAAGF,EAAQA,EAAQ9U,OAAO,GAAGmU,SAAS,EAAGa,GAAI,IAAKA,EAAG,CACzD,IAAMC,EAAe,IAAIxQ,KAAKqQ,EAAQE,EAAG,GAAG5Q,MAAM8Q,UAC5CC,EAAgB,CAClB9R,IAAK2R,EACL7d,OAAQO,EAAUY,aAAa0c,GAC/B5Q,KAAc,IAAP4Q,EAAA,sBAAyB3Q,GAAiB4Q,EAAcvd,EAAUkB,YAAYE,QACrEuL,GAAiB4Q,EAAc,OAAkBvd,EAAUkB,YAAYE,QAE3Fgc,EAAQ/R,KAAKoS,GAGjB,IAAMC,EAAcjR,EAAYnE,QAAU,EAAG,EAAG,EAChD,OAAO8U,EAAQtX,QAAO,SAACuX,EAAOxb,GAAR,OAAkBA,IAAU6b,K2CrH/BC,CAAsB/f,KAAKC,MAAM4O,aAC1CmR,EAA+D,IAAjDT,EAAOrX,QAAO,SAAAuX,GAAK,OAAEA,EAAMZ,YAAUnU,OAAO,GAE1DvF,EAAQ,CAAE8a,WAAU,2CAAuCD,EAAvC,mBAA4DA,EAA5D,YAC1B,OACI,yBAAK1f,UAAU,gBAAgB6E,MAAOA,GACjCoa,EAAOvb,KAAI,SAAAyb,GAAK,OACb,yBACIvb,IAAKub,EAAM1R,IACXzN,UAAS,UAAKmf,EAAMZ,SAAS,0BAA0B,6BACvD/P,KAAM2Q,EAAM3Q,KACZjN,OAAQ4d,EAAM5d,iB,GAbXnB,aCarBwf,G,4JACF,WACI,IAAQzR,EAAUzO,KAAKC,MAAfwO,MACAtG,EAAYsG,EAAZtG,QACR,OACI,kBAAC,IAAM4K,SAAP,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,CAAMzS,UAAU,kBACZ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAgBwN,QAASW,EAAMF,qBAI3C,kBAAC,EAAD,CAAMjO,UAAU,kBACZ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CACI8H,UAAWD,EAAQC,UACnBwF,YAAazF,EAAQyF,YACrB4Q,SAAUrW,EAAQwW,aAClBjQ,SAAUvG,EAAQuG,SAClBmK,MAAOrM,GAAciC,EAAMmQ,eAGnC,yBAAKte,UAAU,YACX,kBAAC,GAAD,CAAcuO,YAAeJ,EAAMI,iBAI/C,kBAAC,GAAD,W,GA/BenO,aAoChB6D,gBAzCS,SAACoO,EAAO1S,GAC5B,MAAkBuO,GAAoB,CAAChD,KAAoBqB,MAAK,SAAA4B,GAAK,OAAGA,EAAM8P,UAAYte,EAAM8X,MAAMC,OAAOuG,aAC7G,MAAO,CAAE9P,MADT,wBAwCWlK,CAAyB2b,ICjClCC,G,4JACJ,WACE,MAAoCngB,KAAKC,MAAlCkS,EAAP,EAAOA,OAAQ1K,EAAf,EAAeA,QAAS2Y,EAAxB,EAAwBA,SACxB,OACE,6BACMjO,EAAOzH,OAAS,GAAK,kBAAC,EAAD,CAAU7G,YAAazB,EAAUE,QAASwB,SAAUqO,IACzE1K,EAAQiD,OAAS,GAAK,kBAAC,EAAD,CAAU7G,YAAazB,EAAUC,QAASyB,SAAU2D,IAC1E2Y,GAAY,kBAAC,EAAD,MACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAAC3J,KAAK,IAAIE,UAAW/C,KACjC,kBAAC,IAAD,CAAO6C,KAAK,QAAQE,UAAWH,KAC/B,kBAAC,IAAD,CAAOC,KAAK,QAAQE,UAAWsC,KAC/B,kBAAC,IAAD,CAAOxC,KAAK,YAAYE,UAAW0G,KACnC,kBAAC,IAAD,CAAO5G,KAAK,UAAUE,UAAWsI,KACjC,kBAAC,IAAD,CAAOxI,KAAK,0BAA0BE,UAAWsJ,KACjD,kBAAC,IAAD,CAAOxJ,KAAK,sBAAsBE,UAAWe,KAC7C,kBAAC,IAAD,CAAOjB,KAAK,0BAA0BE,UAAWsB,KACjD,kBAAC,IAAD,CAAOxB,KAAK,aAAaE,UAAWsB,W,GAjB9B5T,IAAM5D,WAwBT6D,gBA9BS,iBAAO,CAC7B6b,SCZmCza,EAASsE,GAAMmB,WAAY,sBAAsB,GDapF+G,OCXoCxM,EAASsE,GAAMmB,WAAY,qBAAsB,IDYrF3D,QCVsC9B,EAASsE,GAAMmB,WAAY,uBAAwB,ODqC5E7G,CAAyB4b,I,YErCxCG,IAASC,OACP,kBAAC,IAAD,CAAUtW,MAASA,IACjB,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAaI,UAAaA,IACxB,kBAAC,GAAD,SAINpF,SAASub,eAAe,W","file":"static/js/main.96731e56.chunk.js","sourcesContent":["import { React, Component } from \"../library\";\r\n\r\nexport default class Tile extends Component {\r\n    render() {\r\n        const { header, headerClass, title, children, className, footer, footerClass, onClick } = this.props;\r\n        return (\r\n            <div className={className} onClick={onClick}>\r\n                <div className=\"card bottom-space\">\r\n                    {header && <div className={`card-header ${headerClass}`}>{header}</div>}\r\n                    <div className=\"card-body\">\r\n                        {title && title}\r\n                        {children}\r\n                    </div>\r\n                    {footer && <div className={`card-footer ${footerClass}`}> {footer} </div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import { React, Component } from \"../library\";\r\n\r\nexport default class Field extends Component {\r\n\r\n    getFieldByType = (props) => {\r\n        const { inputType, handleChange, errorlabel, ...otherProps } = props;\r\n        const className = `form-control ${errorlabel? \"is-invalid\": \"\"}`;\r\n        switch(inputType){\r\n            case \"TEXTBOX\": return(\r\n                <input\r\n                    type=\"text\"\r\n                    className={className}\r\n                    {...otherProps}\r\n                />\r\n            );\r\n            case \"PASSWORD\": return(\r\n                <input\r\n                    type=\"password\"\r\n                    className={className}\r\n                    {...otherProps}\r\n                />\r\n            );\r\n            case \"NUMBER\": return(\r\n                <input\r\n                    type=\"text\"\r\n                    pattern=\"\\d*\"\r\n                    className={className}\r\n                    {...otherProps}\r\n                />\r\n            );\r\n            case \"RADIO\": return (\r\n                <input\r\n                    type=\"radio\"\r\n                    className=\"custom-control-input\"\r\n                    {...otherProps}\r\n                />\r\n            );\r\n            default: return \"wew\";\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { id, label, errorlabel, inputType } = this.props;\r\n        return (\r\n            inputType === \"RADIO\"?(\r\n                <div className=\"custom-control custom-radio custom-control-inline\">\r\n                    {this.getFieldByType(this.props)}\r\n                    <label className=\"custom-control-label _text_sm\" htmlFor={id}>{label}</label>\r\n                </div>\r\n            ):(\r\n                <div className=\"form-group _text_sm_dark\">\r\n                    <label htmlFor={id}>{label}</label>\r\n                    {this.getFieldByType(this.props)}\r\n                    {errorlabel && <div className=\"invalid-feedback\">{errorlabel}</div>}\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}","import { React }  from \"../library\";\r\n\r\nconst Loader = () => (\r\n    <div className=\"_page_overlay\">\r\n        <div className=\"_center_child\">\r\n            <div className=\"spinner-border text-warning _loader_lg\" role=\"status\">\r\n                <span className=\"sr-only\" >Loading...</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader;","const MISC_CONST = {\r\n    lOADER_STATE: \"lOADER_STATE\",\r\n    ERROR_MSG: \"SET_ERROR_MESSAGE\",\r\n    SUCCESS_MSG: \"SET_SUCCESS_MESSAGE\"\r\n}\r\nexport default MISC_CONST;","import MISC_CONST from './misc.const';\r\n\r\nexport const setLoader = (status) => ({\r\n    type: MISC_CONST.lOADER_STATE,\r\n    payload: {status}\r\n});\r\n\r\nexport const setErrorMessage = (errorMsgs) => ({\r\n    type: MISC_CONST.ERROR_MSG,\r\n    payload: {message:errorMsgs}\r\n});\r\n\r\nexport const setSuccessMessage = (successMsgs) => ({\r\n    type: MISC_CONST.SUCCESS_MSG,\r\n    payload: {message:successMsgs}\r\n});","const APP_CONST = {\r\n    SUCCESS : \"SUCCESS\",\r\n    FAILURE : \"FAILURE\",\r\n    CHECKED: \"CHECKED\",\r\n    OPEN: \"OPEN\",\r\n    STEP:{\r\n        ONE:'One',\r\n        TWO:'Two',\r\n        THREE:'Three',\r\n        FOUR:'Four',\r\n    },\r\n    QUERY:{\r\n        PRODUCT_ID: \"productId\"\r\n    },\r\n    ORDER_STATUS:{\r\n        1:\"Ordered\",\r\n        2:\"Packed\",\r\n        3:\"Shipped\",\r\n        4:\"Out For Delivery\",\r\n        5:\"Delivered\"\r\n    },\r\n    DATE_FORMAT:{\r\n        MDtY : 'Month_Date_Year',\r\n        DyDtM : 'Day_Date_Month'\r\n    }\r\n};\r\n\r\nexport default APP_CONST;","import { React, connect } from \"../library\";\r\n\r\nimport { setErrorMessage, setSuccessMessage } from \"../redux/misc/misc.action\";\r\nimport APP_CONST from \"../APP_CONST\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeErrorMessage: () => dispatch(setErrorMessage([])),\r\n  removeSuccessMessage: () => dispatch(setSuccessMessage([]))\r\n})\r\n\r\nclass Notifier extends React.Component{ \r\n  \r\n  removeMessage = () => {\r\n    const {removeErrorMessage, removeSuccessMessage, messageType} = this.props;\r\n    if(messageType === APP_CONST.SUCCESS){\r\n      removeSuccessMessage();\r\n    }\r\n    else{\r\n      removeErrorMessage();\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { messages, messageType } = this.props;\r\n    const alertClass = messageType === APP_CONST.SUCCESS?'alert-success':'alert-danger';\r\n    return(\r\n      <div className=\"offset-md-3 col-md-6 offset-sm-1 col-sm-10 animate-error\">\r\n        <div className={`alert ${alertClass} alert-dismissible`} role=\"alert\">\r\n          <ul className=\"mb-0\"> {messages.map((message,index) =><li key={index}><h6>{message}</h6></li>)} </ul>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n              onClick = {this.removeMessage}\r\n            >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Notifier);\r\n","import { React, withRouter } from \"../library\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import { React, Component, Link } from \"../library\";\r\n\r\nclass DialogModal extends Component{\r\n    componentDidMount(){\r\n        document.body.style.overflow = \"hidden\";\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        document.body.style.overflow = null;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"_page_overlay\">\r\n                <div className=\"_center_child\">\r\n                    <div className=\"card p-5\">\r\n                        <div className=\"card-body text-center\">\r\n                            <svg fill=\"rgb(255, 67, 67)\" viewBox=\"0 0 20 20\" width=\"80\" height=\"80\">    \r\n                                <path d=\"M10 20c5.523 0 10-4.477 10-10S15.523 0 10 0 0 4.477 0 10s4.477 10 10 10zm.833-13.125H9.167V5h1.666v1.875zm0 8.125H9.167V8.75h1.666V15z\"/>\r\n                            </svg>\r\n                            <h5 className=\"card-title my-4\"> Your checkout has no items </h5>\r\n                            <Link to=\"./cart\" className=\"btn _primary_bg my-4\"><small> GO TO CART </small></Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DialogModal;","import { get, set, isEmpty } from \"../library\";\r\n\r\nexport const getValue = (object, key, defaultValue) => get(object, key, defaultValue);\r\n\r\nexport const setValue = (object, key, value) => set(object, key, value);\r\n\r\nexport const isNotEmpty = (element) => !isEmpty(element);\r\n","const CUSTOMER_CONST = {\r\n    CUSTOMER_LOGIN: \"CUSTOMER_LOGIN\",\r\n    CUSTOMER_LOGOUT: \"CUSTOMER_LOGOUT\",\r\n    CUSTOMER_ADDRESSES: \"SET_CUSTOMER_ADDRESSES\",\r\n    CUSTOMER_ORDERS: \"SET_CUSTOMER_ORDERS\"\r\n}\r\n\r\nexport default CUSTOMER_CONST;","import CUSTOMER_CONST from './customer.const';\r\nconst INITIAL_STATE = null;\r\n\r\nconst userReducer = (currentState = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case CUSTOMER_CONST.CUSTOMER_LOGIN:{\r\n            return { ...currentState, loginDetails: action.payload }\r\n        }\r\n        case CUSTOMER_CONST.CUSTOMER_LOGOUT:{\r\n            return INITIAL_STATE \r\n        }\r\n        case CUSTOMER_CONST.CUSTOMER_ADDRESSES:{\r\n            return { ...currentState, addresses: action.payload }\r\n        }\r\n        case CUSTOMER_CONST.CUSTOMER_ORDERS:{\r\n            return { ...currentState, orders: action.payload }\r\n        }\r\n        default : return currentState;\r\n    }\r\n}\r\n\r\nexport default userReducer;\r\n\r\n","const PRODUCT_CONST = {\r\n    HOME_PRODUCTS: \"HOME_PRODUCTS\",\r\n    PRODUCT_SELECTED: \"PRODUCT_SELECTED\"\r\n}\r\n\r\nexport default PRODUCT_CONST;","import PRODUCT_CONST from './product.const.js';\r\nconst INITIAL_STATE = {};\r\n\r\nconst productReducer = ( currentState = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CONST.HOME_PRODUCTS:{\r\n            return { ...currentState, homeProducts: action.payload }\r\n        }\r\n        case PRODUCT_CONST.PRODUCT_SELECTED:{\r\n            return { ...currentState, selectedProduct: action.payload }\r\n        }\r\n        default: \r\n            return currentState;\r\n    }\r\n}\r\n\r\nexport default productReducer;\r\n","const INITIAL_STATE = {categories: [\r\n    {\r\n      title: \"fashion\",\r\n      id: 1,\r\n    },\r\n    {\r\n      title: \"electronics\",\r\n      id: 2,\r\n    },\r\n    {\r\n      title: \"appliances\",\r\n      id: 3,\r\n    },\r\n    {\r\n      title: \"home\",\r\n      id: 4,\r\n    },\r\n    {\r\n      title: \"toys\",\r\n      id: 5,\r\n    }\r\n  ]};\r\n\r\nconst directoryReducer = ( currentState = INITIAL_STATE, action) =>{\r\n    switch(action.type){\r\n        default: \r\n            return currentState;\r\n    }\r\n}\r\n\r\nexport default directoryReducer;\r\n","import MISC_CONST from './misc.const';\r\nconst INITIAL_STATE = {};\r\n\r\nconst loaderReducer = ( currentState = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case MISC_CONST.lOADER_STATE:{\r\n            return { ...currentState, loader: action.payload }\r\n        }\r\n        case MISC_CONST.ERROR_MSG:{\r\n            return { ...currentState, error: action.payload }\r\n        }\r\n        case MISC_CONST.SUCCESS_MSG:{\r\n            return { ...currentState, success: action.payload }\r\n        }\r\n        default: \r\n            return currentState;\r\n    }\r\n}\r\n\r\nexport default loaderReducer;\r\n","const CART_CONST = {\r\n    ADD_ITEM: \"ADD_ITEM_TO_CART\",\r\n    REMOVE_ITEM: \"REMOVE_ITEM_FROM_CART\",\r\n    MERGE_CUSTOMER_CART: \"MERGE_CUSTOMER_CART_ITEMS\",\r\n    EMPTY_CART: \"EMPTY_CART\",\r\n    ADD_ITEMS: \"ADD_ITEMS_IN_BULK\"\r\n}\r\n\r\nexport default CART_CONST;","import CART_CONST from './cart.const';\r\nconst INITIAL_STATE = {cartItems:[]};\r\n\r\nconst cartReducer = (currentState = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case CART_CONST.ADD_ITEM:{\r\n            return { ...currentState, cartItems: [...currentState.cartItems, action.payload] }\r\n        }\r\n        case CART_CONST.REMOVE_ITEM:{\r\n            const { cartItems } = currentState;\r\n            return { ...currentState, cartItems: cartItems.filter(product => action.payload !== product.productId ) }\r\n        }\r\n        case CART_CONST.MERGE_CUSTOMER_CART:{\r\n            const { cartItems } = currentState;\r\n            return { ...currentState, cartItems: [...cartItems, ...action.payload] }\r\n        }\r\n        case CART_CONST.EMPTY_CART:{\r\n            return { ...currentState, cartItems: [] }\r\n        }\r\n        case CART_CONST.ADD_ITEMS:{\r\n            return { ...currentState, cartItems: action.payload }\r\n        }\r\n        default:\r\n            return currentState;\r\n    }\r\n}\r\n\r\nexport default cartReducer;\r\n","const CHECKOUT_CONST = {\r\n    CHECKOUT_INITIALIZE: \"INITIALIZE_CHECKOUT_STEP\",\r\n    STEP_STATUS: \"SET_CHECKOUT_STEP_STATUS\",\r\n    DELIVERY_ADDRESS_SELECTED: \"DELIVERY_ADDRESS_SELECTED\",\r\n    DELIVERY_ADDRESS_CONFIRMED: \"DELIVERY_ADDRESS_CONFIRMED\",\r\n    ITEMS_TO_CHECKOUT: \"ADD_ITEMS_TO_CHECKOUT\",\r\n    REMOVE_ITEM: \"REMOVE_ITEM_FROM_CHECKOUT\",\r\n    CHECKOUT_TERMINATE: \"TERMINATE_CHECKOUT_STEP\"\r\n}\r\n\r\nexport default CHECKOUT_CONST;","import CHECKOUT_CONST from './checkout.const';\r\nconst INITIAL_STATE = {};\r\n\r\nconst checkoutReducer = (currentState = INITIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case CHECKOUT_CONST.CHECKOUT_INITIALIZE:{\r\n            return { ...action.payload }\r\n        }\r\n        case CHECKOUT_CONST.STEP_STATUS:{\r\n            const step = currentState[`step${action.payload.step}`];\r\n            currentState[`step${action.payload.step}`] = {...step, status:action.payload.status,};\r\n            return { ...currentState};\r\n        }\r\n        case CHECKOUT_CONST.DELIVERY_ADDRESS_SELECTED:{\r\n            const { stepTwo } = currentState;\r\n            return { ...currentState, stepTwo:{...stepTwo, selectedAddressId:action.payload} }\r\n        }\r\n        case CHECKOUT_CONST.DELIVERY_ADDRESS_CONFIRMED:{\r\n            const { stepTwo } = currentState;\r\n            return { ...currentState, stepTwo:{...stepTwo, confirmedAddressId: action.payload} }\r\n        }\r\n        case CHECKOUT_CONST.ITEMS_TO_CHECKOUT:{\r\n            const { stepThree } = currentState;\r\n            return { ...currentState, stepThree:{...stepThree, checkoutItems: [...action.payload]} }\r\n        }\r\n        case CHECKOUT_CONST.REMOVE_ITEM:{\r\n            const { stepThree } = currentState;\r\n            const { checkoutItems }= stepThree;\r\n            return { ...currentState,  stepThree:{...stepThree, checkoutItems: checkoutItems.filter(product => action.payload !== product.productId )} }\r\n        }\r\n        case CHECKOUT_CONST.CHECKOUT_TERMINATE:{\r\n            return action.payload;\r\n        }\r\n        default:\r\n            return currentState;\r\n    }\r\n}\r\n\r\nexport default checkoutReducer;\r\n","import { combineReducers, persistReducer, storage } from \"../library\";\r\n\r\nimport customerReducer from './customer/customer.reducer';\r\nimport productReducer from './product/product.reducer';\r\nimport directoryReducer from './directory/directory.reducer'; \r\nimport miscReducer from './misc/misc.reducer'; \r\nimport cartReducer from './cart/cart.reducer';\r\nimport checkoutReducer from './checkout/checkout.reducer';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['Product','Customer','Cart']  //find a soln to remove Product from the whitelist\r\n}\r\n\r\nconst rootReducer = combineReducers ({\r\n    Customer: customerReducer,\r\n    Directory: directoryReducer,\r\n    Product: productReducer,\r\n    Misc: miscReducer,\r\n    Cart: cartReducer,\r\n    Checkout: checkoutReducer\r\n});\r\n\r\n\r\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware, persistStore, logger } from \"../library\";\r\nimport rootReducer from './root.reducer';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\nconst persistor = persistStore(store);\r\n\r\nexport {store, persistor};","import { React } from \"../library\";\r\n\r\nconst Banner = ({items}) => (\r\n  <div id=\"carouselExampleIndicators\" className=\"carousel slide _bottom_space\" data-ride=\"carousel\">\r\n    <div className=\"carousel-inner\">\r\n      {\r\n        items.length > 0 && items.map((item,index) => (\r\n          <div className={`carousel-item ${index === 0?'active':''}`} key={index}>\r\n            <img className=\"d-block w-100\" src={item.imageUrl} alt={item.altName} />\r\n          </div>)\r\n        )\r\n      }\r\n    </div>\r\n    <a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n      <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n      <span className=\"sr-only\">Previous</span>\r\n    </a>\r\n    <a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n      <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n      <span className=\"sr-only\">Next</span>\r\n    </a>\r\n  </div>\r\n);\r\n\r\nexport default Banner;\r\n\r\n","import { React } from \"../../library\";\r\n\r\nconst Footer = () => (\r\n    <footer\r\n        className=\"py-4 bg-dark text-white-50 _sticky_footer\">\r\n        <div className=\"container text-center\">\r\n            <small>Copyright &copy; ukart</small>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import { getValue } from '../../library';\r\nimport { store } from '../../redux/store';\r\n\r\nexport const getUserId = () => getValue(store.getState(), 'Customer.loginDetails.id', \"\");\r\n\r\nexport const getCustomerLoginStatus = () => getValue(store.getState(), 'Customer.loginDetails.loginStatus', false);\r\n\r\nexport const getCustomerName = () => getValue(store.getState(), 'Customer.loginDetails.name', \"User\");\r\n\r\nexport const getCustomerLoginToken = () => getValue(store.getState(), 'Customer.loginDetails.loginToken', \"\");\r\n\r\nexport const getCustomerAddresses = () => getValue(store.getState(), 'Customer.addresses', []);\r\n\r\nexport const getCustomerOrders = () => getValue(store.getState(), 'Customer.orders', []);\r\n","import { getValue } from '../../library';\r\nimport { store } from '../../redux/store';\r\n\r\nexport const getCartItems = () => getValue(store.getState(), 'Cart.cartItems', []);\r\n","import CUSTOMER_CONST from './customer.const';\r\n\r\nexport const loginCustomer = user => ({\r\n    type: CUSTOMER_CONST.CUSTOMER_LOGIN,\r\n    payload: {...user}\r\n});\r\n\r\nexport const logoutCustomer = () => ({\r\n    type: CUSTOMER_CONST.CUSTOMER_LOGOUT\r\n});\r\n\r\nexport const setCustomerAddresses = (addresses) => ({\r\n    type: CUSTOMER_CONST.CUSTOMER_ADDRESSES,\r\n    payload: addresses\r\n});\r\n\r\nexport const setCustomerOrders = (orders) => ({\r\n    type: CUSTOMER_CONST.CUSTOMER_ORDERS,\r\n    payload: orders\r\n});\r\n","import CART_CONST from './cart.const';\r\n\r\nexport const addItemToCart = product => ({\r\n    type: CART_CONST.ADD_ITEM,\r\n    payload: product\r\n});\r\n\r\nexport const removeItemFromCart = productId => ({\r\n    type: CART_CONST.REMOVE_ITEM,\r\n    payload: productId\r\n});\r\n\r\nexport const mergeCustomerCart = customerCartItems => ({\r\n    type: CART_CONST.MERGE_CUSTOMER_CART,\r\n    payload: customerCartItems\r\n});\r\n\r\nexport const emptyCart = () => ({\r\n    type: CART_CONST.EMPTY_CART,\r\n    payload: []\r\n});\r\n\r\nexport const cleanCartAndAddItems = items => ({\r\n    type: CART_CONST.ADD_ITEMS,\r\n    payload : items\r\n})","import { getValue } from '../../library';\r\nimport { store } from '../../redux/store';\r\n\r\nexport const getCheckoutStepStatus = (step) => getValue(store.getState(), `Checkout.step${step}.status`, false);\r\n\r\nexport const getSelectedAddressId = () => getValue(store.getState(), 'Checkout.stepTwo.selectedAddressId', \"\");\r\n\r\nexport const getConfirmedAddressId = () => getValue(store.getState(), 'Checkout.stepTwo.confirmedAddressId', \"\");\r\n\r\nexport const getCheckoutItems = () => getValue(store.getState(), 'Checkout.stepThree.checkoutItems', []);","import {getValue} from '../../library';\r\nimport { store } from '../../redux/store'; \r\n\r\nexport const getHomeProducts = () => getValue(store.getState(), 'Product.homeProducts', []);\r\n\r\nexport const getSelectedProduct = () => getValue(store.getState(), 'Product.selectedProduct', {});\r\n","import { getValue, setValue } from \"../library\";\r\n\r\nimport { getCheckoutItems, getConfirmedAddressId } from \"../redux/checkout/checkout.selector\";\r\nimport { getCustomerAddresses } from \"../redux/customer/customer.selector\";\r\nimport { getHomeProducts } from \"../redux/product/product.selector\";\r\n\r\nimport APP_CONST from \"../APP_CONST\";\r\n\r\nexport const calculatePriceAfterDiscount = (actualPrice, discount) =>{\r\n    return actualPrice - (actualPrice * (discount/100));\r\n};\r\n\r\nexport const calculateSavingPrice = (actualPrice, discount) =>{\r\n    return (actualPrice * (discount/100));\r\n};\r\n\r\nexport const numberToPrice = number => number.toFixed(2);\r\n\r\nexport const getProductById = (products, productId) =>{\r\n    return products.find( product => getValue(product, 'productId', \"\") === productId );\r\n};\r\n\r\nexport const getProductsByType = (products, name, type) =>{\r\n    return products.filter( product => getValue(product, type, \"\").toLowerCase() === name.toLowerCase() );\r\n};\r\n\r\nexport const capitalize = ( str ) => str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\n/*\r\n@items can be an object or array\r\n@object should be product type\r\n@array 0th element category and 1st element sub category \r\n*/\r\nexport const getBreadcrumSections = (item) =>{\r\n    const sections = [{ id: \"homepage\", name:\"Home\", link: '/' }];\r\n    if(getValue(item, 'productId', '')) {\r\n        sections.push({id: item.category, name: capitalize(item.category), link : `/${item.category}`});\r\n        sections.push({id: item.subCategory, name: capitalize(item.subCategory), link : `/${item.category}/${item.subCategory}`});\r\n        sections.push({id: item.productId, name: capitalize(item.productName)});\r\n    }\r\n    else{\r\n        if(item.length === 1){\r\n            sections.push({id: item[0], name: capitalize(item[0])});\r\n        }\r\n        else{\r\n            sections.push({id: item[0], name: capitalize(item[0]), link : `/${item[0]}`});\r\n            sections.push({id: item[1], name: capitalize(item[1])});\r\n        }\r\n    }\r\n    return sections;\r\n};\r\n\r\nexport const getAddressById = (addresses, id) => addresses.find( address => address._id === id);\r\n\r\nexport const beforeUnloadListener = (e) => {\r\n    e.preventDefault();\r\n    e.returnValue = \"The page that you're looking for used information that you entered. Returning to that page might cause any action you took to be repeated. Do you want to continue?\";\r\n};\r\n\r\nexport const parseQuery = (search) => new URLSearchParams(search);\r\n\r\nexport const prepareOrderDetails = () =>{\r\n    return{\r\n        checkoutItems: getCheckoutItems().map( item => ({productId: item.productId, quantity : 1})),\r\n        paymentType: \"C.O.D\",\r\n        deliveryAddress: getAddressById(getCustomerAddresses(), getConfirmedAddressId())\r\n    };\r\n};\r\n\r\nexport const mapProductsInOrders = (orders) => { \r\n    // would be better to include these minor product details in order schema\r\n    const products = getHomeProducts();\r\n    return orders.map( order => {\r\n        const product = getProductById(products, getValue(order, \"product.productId\", \"\"));\r\n        setValue(order, \"product.productName\", product.productName);\r\n        setValue(order, \"product.sellerId\", product.sellerId);\r\n        setValue(order, \"product.productImage\", product.productImages[0]);\r\n        return order;\r\n    });\r\n};\r\n\r\nexport const getCurrentStatus = (statusTrack) =>{\r\n    return APP_CONST.ORDER_STATUS[statusTrack[statusTrack.length-1].statusCd];\r\n};\r\n\r\nexport const getCurrentStatusDate = (statusTrack) =>{\r\n    return statusTrack[statusTrack.length-1].date;\r\n};\r\n\r\nexport const getFormattedDate = (unFormattedDate, format) => {\r\n    const newDate = new Date(unFormattedDate);\r\n    const date = newDate.getDate();\r\n    const day = new Intl.DateTimeFormat('en-US', { weekday: 'short'}).format(newDate);\r\n    const month = new Intl.DateTimeFormat('en-US', { month: 'short'}).format(newDate);\r\n    const year = newDate.getFullYear();\r\n   \r\n    switch(format){\r\n       case APP_CONST.DATE_FORMAT.MDtY :  return `${month} ${date}, ${year}`;\r\n       case APP_CONST.DATE_FORMAT.DyDtM :  return `${day}, ${date} ${month}`;\r\n       default :  return `${month} ${date}, ${year}`;\r\n    }\r\n};\r\n\r\nexport const mapOrderStatusDetails = (statusTrack) => {\r\n    const tracker = statusTrack.map(track => ({\r\n            ...track,\r\n            date: getFormattedDate(track.date, APP_CONST.DATE_FORMAT.DyDtM),\r\n            status: APP_CONST.ORDER_STATUS[track.statusCd]\r\n        })\r\n    );\r\n\r\n    for(let cd=tracker[tracker.length-1].statusCd+1; cd<=5; ++cd){\r\n        const expectedDate = new Date(tracker[cd-2].date).getTime();\r\n        const expectedTrack = {\r\n            _id: cd,\r\n            status: APP_CONST.ORDER_STATUS[cd],\r\n            date : cd === 5? `Expected by ${getFormattedDate(expectedDate, APP_CONST.DATE_FORMAT.DyDtM)}`:\r\n                            getFormattedDate(expectedDate+(2*24*60*60*1000), APP_CONST.DATE_FORMAT.DyDtM)\r\n        }\r\n        tracker.push(expectedTrack);\r\n    }\r\n    // Packed '@index 1' and Out for Delivery '@index 3' are mutually exclusive\r\n    const removeIndex = statusTrack.length <= 3? 3: 1; \r\n    return tracker.filter((track, index) => index !== removeIndex);\r\n};\r\n\r\nexport const sortByCreatedAt = ( orders ) => ( \r\n    orders.sort( (a, b) => (new Date(b.createdAt) - new Date(a.createdAt)) )\r\n);","import { getValue } from \"../library\"\r\nimport { calculateSavingPrice } from \"./util\";\r\n\r\nexport const isCartHasThisItem = (cartitem, newItem) => {\r\n    return cartitem.some(item => getValue(item, 'productId', \"\") === getValue(newItem, 'productId', false));\r\n};\r\n\r\nexport const calculateCartActualPrice = (cartItems) =>{\r\n    let price = 0; \r\n    cartItems.forEach( item=> { price += item.productActualPrice });\r\n    return price;\r\n};\r\n\r\nexport const calculateCartDiscountPrice = (cartItems) =>{\r\n    let discountPrice = 0; \r\n    cartItems.forEach( item=> { discountPrice += calculateSavingPrice(item.productActualPrice, item.discount) });\r\n    return discountPrice;\r\n};\r\n\r\nexport const calculateCartTotalPrice = (cartItems) =>{\r\n    let discountPrice = 0; \r\n    cartItems.forEach( item => { discountPrice += calculateSavingPrice(item.productActualPrice, item.discount) });\r\n    return discountPrice;\r\n};\r\n\r\nexport const mapCartProductsToIds = (cartItems) =>{\r\n   return cartItems.map( item => ({productId:item.productId, quantity:1}) );\r\n};\r\n\r\nexport const removeSelectedProducts = (selectedProducts, products) => {\r\n    return products.filter(product => {\r\n        return !selectedProducts.find(selectedProduct => selectedProduct.productId === product.productId)\r\n    });\r\n};","const HOST = \"https://ukart-express-api.herokuapp.com\"//http://localhost:5000\";\r\n\r\nexport const URL = {\r\n    PRODUCTS: `${HOST}/products/`,\r\n    CUSTOMER_ACCOUNT_CREATE: `${HOST}/account/create-customer/`,\r\n    CUSTOMER_LOGIN: `${HOST}/account/login-customer/`,\r\n    CART_ITEMS_SAVE: `${HOST}/account/save-cart-products/`,\r\n    CUSTOMER_ADDRESSES: `${HOST}/account/get-customer-addresses/`,\r\n    CUSTOMER_ADDRESS_ADD: `${HOST}/account/add-address/`,\r\n    CUSTOMER_ADDRESS_UPDATE: `${HOST}/account/update-address/`,\r\n    PLACE_ORDER: `${HOST}/order/place-order/`,\r\n    CUSTOMER_ORDERS: `${HOST}/order/get-order/`\r\n};","import { axios } from \"../library\";\r\nimport { URL } from \"./api.const\";\r\n\r\nimport { getCustomerLoginToken } from \"../redux/customer/customer.selector\";\r\n\r\nexport const getProducts = () => {\r\n    return axios.get(URL.PRODUCTS).then( ({ data })=>{\r\n        return data;\r\n    }).catch( ({response,message}) =>{\r\n        throw response? response.data.errorMessage : message;\r\n    });\r\n}\r\n\r\nexport const getProductById = (productId) => {\r\n    return axios.get(URL.PRODUCTS+productId).then( ({ data }) =>{\r\n        return data;\r\n    }).catch( ( {response,message} ) => {\r\n        throw response? response.data.errorMessage : message;\r\n    });\r\n}\r\n\r\nexport const createCustomerAccount = accountDetails => {\r\n    const {username, email, password} = accountDetails;\r\n    return axios.post(URL.CUSTOMER_ACCOUNT_CREATE, {customerName:username,customerEmail:email,customerPassword:password})\r\n    .then( ({ data }) =>{\r\n        return data;\r\n    }).catch( ( {response,message} ) => {\r\n        throw response? response.data.errorMessage : message;\r\n    });\r\n}\r\n\r\nexport const loginCustomer = loginDetails => {\r\n    const {userId, password} = loginDetails;\r\n    return axios.post(URL.CUSTOMER_LOGIN, {customerEmail:userId, customerMobile:userId, customerPassword:password})\r\n    .then( ({ data }) =>{\r\n        return data;\r\n    }).catch( ( {response,message} ) => {\r\n        throw response? response.data.errorMessage : message;\r\n    });\r\n}\r\n\r\nexport const saveCartItems = (cartProductIds, customerLoginToken ) => {\r\n    const headers = { 'Authorization' : customerLoginToken };\r\n    return axios.put(URL.CART_ITEMS_SAVE, {cartProducts: cartProductIds}, {headers})\r\n    .then( ({ data }) =>{\r\n        return data;\r\n    }).catch( ( {response,message} ) => {\r\n        throw response? response.data.errorMessage : message;\r\n    });\r\n}\r\n\r\nexport const getCustomerAddresses = (customerLoginToken ) => {\r\n    const headers = { 'Authorization' : customerLoginToken };\r\n    return axios.get(URL.CUSTOMER_ADDRESSES, {headers})\r\n    .then( ({ data }) =>{\r\n        return data;\r\n    }).catch( ( {response,message} ) => {\r\n        throw response? response.data.errorMessage : message;\r\n    });\r\n}\r\n\r\nexport const addCustomerAddress = (addressDetails, customerLoginToken) => {\r\n    const headers = { 'Authorization' : customerLoginToken };\r\n    return axios.put(URL.CUSTOMER_ADDRESS_ADD, {...addressDetails}, {headers})\r\n    .then( ({ data }) =>{\r\n        return data;\r\n    }).catch( ( {response,message} ) => {\r\n        throw response? response.data.errorMessage : message;\r\n    });\r\n}\r\n\r\nexport const updateCustomerAddress = (addressDetails, customerLoginToken) => {\r\n    const headers = { 'Authorization' : customerLoginToken };\r\n    return axios.put(URL.CUSTOMER_ADDRESS_UPDATE+addressDetails._id, {...addressDetails}, {headers})\r\n    .then( ({ data }) =>{\r\n        return data;\r\n    }).catch( ( {response,message} ) => {\r\n        throw response? response.data.errorMessage : message;\r\n    });\r\n}\r\n\r\nexport const placeOrder = (orderDetails, customerLoginToken) => {\r\n    const headers = { 'Authorization' : customerLoginToken };\r\n    return axios.post(URL.PLACE_ORDER, {...orderDetails}, {headers})\r\n    .then( ({ data }) =>{\r\n        return data;\r\n    }).catch( ( {response,message} ) => {\r\n        throw response? response.data.errorMessage : message;\r\n    });\r\n}\r\n\r\nexport const getOrders = () => {\r\n    const headers = { 'Authorization' : getCustomerLoginToken() };\r\n    return axios.get(URL.CUSTOMER_ORDERS, {headers})\r\n    .then( ({ data }) =>{\r\n        return data;\r\n    }).catch( ( {response,message} ) => {\r\n        throw response? response.data.errorMessage : message;\r\n    });\r\n}","import { React, Component, connect, withRouter } from \"../../library\";\r\n\r\nimport { getCustomerName } from \"../../redux/customer/customer.selector\";\r\nimport { getCustomerLoginToken } from \"../../redux/customer/customer.selector\";\r\nimport { getCartItems } from \"../../redux/cart/cart.selector\";\r\nimport { logoutCustomer } from \"../../redux/customer/customer.action\";\r\nimport { emptyCart } from \"../../redux/cart/cart.action\";\r\nimport { setLoader, setErrorMessage } from \"../../redux/misc/misc.action\";\r\nimport { mapCartProductsToIds } from \"../../utils/cartUtils\";\r\n\r\nimport * as api from \"../../api/api\";\r\n\r\nconst mapStateToProps = () => ({\r\n    customerName: getCustomerName(),\r\n    cartItems: getCartItems(),\r\n    customerLoginToken: getCustomerLoginToken()\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logoutCustomer: () => dispatch(logoutCustomer()),\r\n    emptyCart: () => dispatch(emptyCart()),\r\n    setLoader: (status) => dispatch(setLoader(status)),\r\n    setErrorMessage: (errors) => dispatch(setErrorMessage(errors))\r\n});\r\n\r\nclass CutomerQuickLinks extends Component {\r\n    logoutCustomer = () => {\r\n        const {cartItems, customerLoginToken, emptyCart, logoutCustomer, setLoader, setErrorMessage } = this.props;\r\n        const cartProductIds = mapCartProductsToIds(cartItems);\r\n        setLoader(true);\r\n        api.saveCartItems(cartProductIds, customerLoginToken).then( response => {\r\n            response && emptyCart();\r\n            logoutCustomer();\r\n            setLoader(false);\r\n        }, reject => {\r\n            setErrorMessage([reject]);\r\n            setLoader(false);\r\n        });\r\n    }\r\n    \r\n    navigateToOrders = () =>{\r\n        this.props.history.push(\"/orders\");\r\n    }\r\n\r\n    render() {\r\n        const {customerName} = this.props;\r\n        return (\r\n            <span className=\"_dropdown py-3 btn\">\r\n                <div className=\"_dropdown_link py-1\"> {customerName} </div>\r\n                <div className=\"_dropdown_menu mt-3\">\r\n                    <div className=\"_dropdown_item _line_at_end\" onClick={this.logoutCustomer}>Logout</div>\r\n                    <div className=\"_dropdown_item\" onClick={this.navigateToOrders}>Orders</div>\r\n                </div>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CutomerQuickLinks));","import { React, Link, connect } from \"../../library\";\r\n\r\nimport CutomerQuickLinks from '../loginSignup/cutomerQuickLinks';\r\nimport { getCustomerLoginStatus } from \"../../redux/customer/customer.selector\";\r\n\r\nconst mapStateToProps = () => ({\r\n    customerLoggedIn: getCustomerLoginStatus()\r\n});\r\n\r\nconst Header = ({hideCart, hideLogin, customerLoggedIn}) => {\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark text-dark sticky-top _primary_bg pt-0 pb-0\">\r\n            <Link to={'/'} className=\"my-2 mx-2\">\r\n                <img src={\"../logo.png\"} alt=\"UKART\" style={{ width: \"8rem\" }} className=\"img-responsive\" />\r\n            </Link>\r\n            <div className =\"mx-2\">\r\n                {!hideLogin && (customerLoggedIn?\r\n                    <CutomerQuickLinks/>:\r\n                    <Link to={'/user/login'} className=\"mr-sm-2\">\r\n                        <button className=\"btn btn-outline-dark\">Login</button>\r\n                    </Link>)\r\n                }\r\n                {!hideCart && <Link to={'/cart'} className =\"my-2 my-sm-0\">\r\n                    <span className=\"btn\">\r\n                        <i className=\"material-icons\">shopping_cart</i>\r\n                        <span className=\"align-straight\">Cart</span>\r\n                    </span>\r\n                </Link>\r\n                }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import { React, Link, connect } from \"../../library\";\r\n\r\nimport { getCategories } from \"../../redux/directory/directory.selector\";\r\n\r\nconst mapStateToProps = () => ({\r\n    categories: getCategories()\r\n});\r\n\r\nconst Directory = ({categories}) => {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg navbar-expand-lg p-1\">\r\n            <ul className=\"navbar-nav text-md-center nav-justified w-100\">\r\n            {\r\n                categories.map((category) => (\r\n                    <li className=\"nav-item\" key={category.id}>\r\n                        <Link \r\n                            className=\"nav-link small text-light\" \r\n                            to={`/${category.title.toLowerCase()}`}>\r\n                                {category.title.toUpperCase()}\r\n                        </Link>\r\n                    </li>)\r\n                )\r\n            }\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps)(Directory);","import {getValue} from '../../library';\r\nimport { store } from '../../redux/store';\r\n\r\nexport const getCategories = () => getValue(store.getState(), 'Directory.categories', []);\r\n","import { React, Component } from \"../../library\";\r\n\r\nexport default class WishlistButton extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { wish: false };\r\n    }\r\n\r\n    toggleHeart = () =>{\r\n        this.setState({ wish: !this.state.wish });\r\n    }\r\n\r\n    render() {\r\n        const emptyHeart = \"m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\";\r\n        const fillHeart = \"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\";\r\n        return (\r\n            <span className=\"float-right\" onClick={this.toggleHeart}>\r\n                <svg width=\"16\" height=\"16\" fill=\"red\">\r\n                    <path d={this.state.wish?fillHeart:emptyHeart}/>\r\n                </svg>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\n","import { React, Component, Link, Tile } from  '../../library';\r\n\r\nimport WishlistButton from './wishlistButton';\r\nimport { calculatePriceAfterDiscount, numberToPrice } from '../../utils/util';\r\n\r\nclass ProductOverview extends Component{\r\n    render(){\r\n        const {brand, productName, productActualPrice, discount, productId, productImages} = this.props.product;\r\n        return <Tile\r\n            className=\"col-md-3\"\r\n            footer={\r\n                <React.Fragment>\r\n                    <h6 className=\"text-muted\">{brand}</h6>\r\n                    <span className=\"_cut_text\">{productName}</span>\r\n                    <div> \r\n                        <strong className=\"mr-2\">₹{numberToPrice(calculatePriceAfterDiscount(productActualPrice, discount))}</strong>\r\n                        <s className=\"mr-2\">{productActualPrice}</s>\r\n                        <small className=\"text-success\"><strong>{discount}% off</strong></small>  \r\n                    </div>\r\n                </React.Fragment>\r\n            }\r\n        >\r\n            <WishlistButton/>\r\n            <Link to={'/product/' + productId}>\r\n                <img\r\n                    src={productImages[0]}\r\n                    className=\"card-img-top\"\r\n                    alt={productName}\r\n                />\r\n            </Link>\r\n        </Tile>\r\n    }\r\n}\r\n\r\nexport default ProductOverview;\r\n","import { React, Component } from \"../../library\";\r\n\r\nclass ProductSliderButtons extends Component {\r\n    render() {\r\n        const {rightEnd, leftEnd, moveRight, moveleft} = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"_absolute_mid_left\">\r\n                    <button className=\"btn btn-secondary\" disabled={leftEnd} onClick={moveleft}>\r\n                        <i className=\"material-icons\">arrow_back_ios</i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"_absolute_mid_right\">\r\n                    <button className=\"btn btn-secondary\" disabled={rightEnd} onClick={moveRight}>\r\n                        <i className=\"material-icons\">arrow_forward_ios</i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductSliderButtons;","import { React, Component, Link, Tile } from  '../../library';\r\n\r\nimport ProductOverview from \"../product/productOverview\";\r\nimport ProductSliderButtons from \"./productSliderButtons\";\r\n\r\nclass ProductSlider extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        const {products} = props;\r\n        const end = products.length<4? products.length: 4;\r\n        this.state = {visibleProducts:products.slice(0, end), start:0 , end};\r\n    }\r\n\r\n    moveleft = () =>{\r\n        const left = { start : this.state.start-1, end : this.state.end-1}\r\n        this.setState({visibleProducts : this.props.products.slice(left.start, left.end), ...left});\r\n    }\r\n\r\n    moveRight = () =>{\r\n        const right = { start : this.state.start+1, end : this.state.end+1}\r\n        this.setState({visibleProducts : this.props.products.slice(right.start, right.end), ...right});\r\n    }\r\n\r\n    render(){\r\n        const {products, title, link} = this.props;\r\n        const {visibleProducts, start, end} = this.state;\r\n        return (\r\n            <Tile className=\"m-2 mt-4\">\r\n                <ProductSliderButtons \r\n                    leftEnd={start === 0} \r\n                    rightEnd={end === products.length}\r\n                    moveleft={this.moveleft}\r\n                    moveRight={this.moveRight}/>\r\n\r\n                <div className=\"d-flex mb-2\">\r\n                    <div className=\"flex-grow-1\"><h5>{title}</h5></div>\r\n                    {link && <Link to={link}> <button className=\"btn btn-dark\">VIEW ALL</button> </Link>}\r\n                </div>\r\n\r\n                <div className = \"row\">\r\n                    { visibleProducts.map( (product) => <ProductOverview product={product} key={product.productId}/>) }\r\n                </div>\r\n            </Tile>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductSlider;\r\n","import{ React, Component, connect } from \"../library\";\r\n\r\nimport Banner from \"../core-components/banner\";\r\nimport Footer from \"../components/misc/footer\";\r\nimport Header from \"../components/misc/header\";\r\nimport Directory from \"../components/misc/directory\";\r\nimport ProductSlider from \"../components/product/productSlider\";\r\n\r\nimport { getHomeProducts } from \"../redux/product/product.selector\";\r\nimport { addHomeProducts } from \"../redux/product/product.action\";\r\n\r\nimport { getProductsByType } from \"../utils/util\";\r\nimport * as api from \"../api/api.js\";\r\n\r\nconst caroselitems = [\r\n    {imageUrl:\"./banners/banner1.jpg\", altName:\"First slide\"},\r\n    {imageUrl:\"./banners/banner2.jpg\", altName:\"Second slide\"},\r\n    {imageUrl:\"./banners/banner3.jpg\", altName:\"Third slide\"},\r\n];\r\n\r\nconst mapStateToProps = () => {\r\n    const products = getHomeProducts();\r\n    return {\r\n        trending: products,\r\n        fashions: getProductsByType(products, \"Fashion\", 'category'),\r\n        electronics: getProductsByType(products, \"Electronics\", 'category')\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addHomeProducts: (products) => dispatch(addHomeProducts(products))\r\n});\r\n\r\nclass HomePage extends Component {\r\n    componentDidMount() {\r\n        api.getProducts().then( response => {\r\n            this.props.addHomeProducts(response);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {trending,fashions,electronics} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n                <Directory/>\r\n                <div className=\"_light_bg\">\r\n                    <Banner items={caroselitems}/>\r\n                    <ProductSlider products = {trending} title=\"Trending Offers\"/>\r\n                    <ProductSlider products = {fashions} title=\"Fashions\" link=\"/fashion\"/>\r\n                    <ProductSlider products = {electronics} title=\"Electronics\" link=\"/electronics\"/>\r\n                    <Footer/>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","import PRODUCT_CONST from './product.const';\r\n\r\nexport const addHomeProducts = products => ({\r\n    type: PRODUCT_CONST.HOME_PRODUCTS,\r\n    payload: products\r\n});\r\n\r\nexport const setCurrentProduct = selectedProduct => ({\r\n    type: PRODUCT_CONST.PRODUCT_SELECTED,\r\n    payload: selectedProduct\r\n});","export const validateEmail = (email) => {\r\n    const emailReg = /^[a-z, A-Z]\\w{2,}@[a-z,A-Z]{2,}.com$/;\r\n    return emailReg.test(email)?\"\":\"Please enter valid Email ID\";\r\n};\r\n\r\nexport const validateMobileNumber = (mobileNo) => {\r\n    const mobileNoReg = /^[6-9]\\d{9}$/; //indian 10 digit number\r\n    return mobileNoReg.test(mobileNo)?\"\":\"Please enter valid Mobile number\";\r\n};\r\n\r\nexport const validateUsername = (username) => {\r\n    const usernameReg = /^[a-z,A-Z]+$/;\r\n    return usernameReg.test(username)?\"\":\"Username should only contains alphabets\";\r\n};\r\n\r\nexport const validateUserId = (userId) =>{\r\n    if(validateMobileNumber(userId) && validateEmail(userId)) {\r\n        return \"Please enter valid Email ID/Mobile number\";\r\n    }\r\n    return \"\";\r\n};\r\n\r\nexport const validatePassword = (password) => {\r\n    if(password.length === 0){\r\n         return \"Please enter Password\";\r\n    }\r\n    else{\r\n        return password.length >=6? \"\": \"Password must be at least 6 characters\";\r\n    }\r\n};\r\n\r\nexport const validateName = (name) => {\r\n    const usernameReg = /^([a-z,A-Z]{3,}\\s?)*$/;\r\n    return usernameReg.test(name)?\"\":\"Name should only contains alphabets\";\r\n};\r\n\r\nexport const validatePincode = (pin) => {\r\n    const pincodeReg = /^[1-9]?\\d{5}$/; // 6 digit indian pincode\r\n    return pincodeReg.test(pin)?\"\":\"Please enter valid Pincode\";\r\n};\r\n\r\nexport const validateText = (text, errorLabel) => {\r\n    const textReg = /^[0-9a-zA-Z]{1,3}[0-9a-zA-Z/,: ]+$/; \r\n    return textReg.test(text)?\"\":errorLabel;\r\n};","import { React, Component, connect, Link, Tile, Field } from \"../../library\";\r\n\r\nimport { getHomeProducts } from \"../../redux/product/product.selector\";\r\nimport { getCartItems } from \"../../redux/cart/cart.selector\";\r\nimport { loginCustomer } from \"../../redux/customer/customer.action\";\r\nimport { mergeCustomerCart } from \"../../redux/cart/cart.action\";\r\nimport { setLoader, setErrorMessage, setSuccessMessage } from \"../../redux/misc/misc.action\";\r\n\r\nimport { validateUserId, validatePassword } from \"../../utils/loginUtils\";\r\nimport { removeSelectedProducts } from \"../../utils/cartUtils\";\r\n\r\nimport * as api from \"../../api/api.js\";\r\n\r\nconst INITIAL_STATE = {\r\n    userId: \"\",\r\n    password: \"\",\r\n    error: {\r\n        userId: \"\",\r\n        password: \"\"\r\n    }\r\n};\r\n\r\nconst mapStateToProps = () => ({\r\n    products: getHomeProducts(), \r\n    cartItems: getCartItems()\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loginCustomer: (user) => dispatch(loginCustomer(user)),\r\n    setLoader: (status) => dispatch(setLoader(status)),\r\n    setErrorMessage: (errors) => dispatch(setErrorMessage(errors)),\r\n    setSuccessMessage: (success) => dispatch(setSuccessMessage(success)),\r\n    mergeCustomerCart: (cartProducts) => dispatch(mergeCustomerCart(cartProducts)),\r\n});\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = INITIAL_STATE;\r\n    }\r\n\r\n    validateForm = () => {\r\n        const error = {};\r\n        error.userId = validateUserId(this.state.userId);\r\n        error.password = validatePassword(this.state.password);\r\n        this.setState({error});\r\n        return !(error.userId||error.password);\r\n    }\r\n\r\n    mergeCustomerCart = (savedCartItems) => {\r\n       const { products, cartItems, mergeCustomerCart } = this.props;\r\n       const cartProducts = [];\r\n       const savedCartItemsAfterFilter = removeSelectedProducts(cartItems, savedCartItems);\r\n       savedCartItemsAfterFilter.forEach(cartItem => {\r\n            let result = products.find(product => product.productId === cartItem.productId);\r\n            result && cartProducts.push(result);\r\n        });\r\n        mergeCustomerCart(cartProducts);\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        const {loginCustomer, setLoader, setErrorMessage, setSuccessMessage, history} = this.props;\r\n        event.preventDefault();\r\n        if(this.validateForm()){\r\n            setLoader(true);\r\n            api.loginCustomer(this.state).then( response =>{\r\n                const {token, customerData, message} = response;\r\n                loginCustomer({\r\n                    id: customerData.customerId, \r\n                    name: customerData.customerName,\r\n                    loginStatus: true,\r\n                    loginToken: token\r\n                });\r\n                this.mergeCustomerCart(customerData.cart);\r\n                this.setState(INITIAL_STATE);\r\n                history.goBack();\r\n                setErrorMessage([]);\r\n                setSuccessMessage([message]);\r\n                setLoader(false);\r\n            }, reject =>{ \r\n                setErrorMessage([reject]);\r\n                setLoader(false);\r\n            })\r\n        }\r\n    };\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n        const error = {...this.state.error};\r\n        error[name] = \"\";\r\n        this.setState({ [name]: value });\r\n        this.setState({ error });\r\n    };\r\n\r\n    render() {\r\n        const {userId, password, error} = this.state;\r\n        return (\r\n            <React.Fragment> \r\n                <Tile \r\n                    id = \"LOGIN\"\r\n                    header = {<h4>Login</h4>}>\r\n                    <Field\r\n                        id=\"user-id\" \r\n                        inputType=\"TEXTBOX\"\r\n                        name=\"userId\"\r\n                        value = {userId}\r\n                        errorlabel = {error.userId}\r\n                        onChange = {this.handleChange}\r\n                        label = \"Email or mobile phone number\"/>\r\n                    <Field\r\n                        id=\"password\" \r\n                        inputType=\"PASSWORD\"\r\n                        name=\"password\"\r\n                        value = {password}\r\n                        errorlabel = {error.password}\r\n                        onChange = {this.handleChange}\r\n                        label=\"Password\"/>\r\n                    <button \r\n                        className=\"btn btn-block _primary_bg\"\r\n                        onClick={this.handleSubmit}>\r\n                        Login\r\n                    </button>\r\n                </Tile>\r\n                <span className=\"_text_sm_light\">New to Ukart?</span>\r\n                <Link to={\"/user/register\"} style={{ textDecoration: 'none' }}>\r\n                    <button\r\n                        className=\"btn btn-block btn-outline-dark\">\r\n                        Create your account\r\n                    </button>\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import { React, Component, connect, Link, Tile, Field } from \"../../library\";\r\n\r\nimport { setLoader, setErrorMessage, setSuccessMessage } from \"../../redux/misc/misc.action\";\r\nimport { validateEmail, validateUsername, validatePassword } from \"../../utils/loginUtils\";\r\nimport * as api from \"../../api/api.js\";\r\n\r\nconst INITIAL_STATE = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    rePassword: \"\",\r\n    error: {\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        rePassword: \"\",\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setLoader: (status) => dispatch(setLoader(status)),\r\n    setErrorMessage: (errors) => dispatch(setErrorMessage(errors)),\r\n    setSuccessMessage: (success) => dispatch(setSuccessMessage(success))\r\n});\r\n\r\nclass Signup extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = INITIAL_STATE;\r\n    }\r\n    \r\n    validateForm = () => {\r\n        const {username, email, password, rePassword} = this.state;\r\n        const error = {};\r\n        error.username = validateUsername(username);\r\n        error.email =  validateEmail(email);\r\n        error.password = validatePassword(password);\r\n        error.rePassword = rePassword === password?\"\":\"Passwords must match\";\r\n        this.setState({error});\r\n        return !(error.userId||error.email||error.password||error.rePassword);\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        const { setLoader, setErrorMessage, setSuccessMessage } = this.props;\r\n        event.preventDefault();\r\n        if(this.validateForm()){\r\n            setLoader(true);\r\n            api.createCustomerAccount(this.state).then( response =>{\r\n                this.setState(INITIAL_STATE);\r\n                this.props.history.push('/user/login');\r\n                setErrorMessage([]);\r\n                setSuccessMessage([response]);\r\n                setLoader(false);\r\n            },reject =>{ \r\n                setErrorMessage([reject]);\r\n                setLoader(false);\r\n            })\r\n        }\r\n    };\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n        const error = {...this.state.error};\r\n        error[name] = \"\";\r\n        this.setState({ [name]: value });\r\n        this.setState({ error });\r\n    };\r\n\r\n    render() {\r\n        const {username, email, password, rePassword, error} = this.state;\r\n        return (\r\n                <Tile \r\n                    id = \"CREATE_ACCOUNT\"\r\n                    header = {<h4>Create account</h4>}>\r\n                    <Field\r\n                        id=\"username\"\r\n                        inputType=\"TEXTBOX\"\r\n                        name=\"username\"\r\n                        value = {username}\r\n                        errorlabel = {error.username}\r\n                        onChange = {this.handleChange}\r\n                        label=\"Your name\"/>\r\n                    <Field\r\n                        id=\"email\"\r\n                        inputType=\"TEXTBOX\"\r\n                        name=\"email\"\r\n                        value = {email}\r\n                        errorlabel = {error.email}\r\n                        onChange = {this.handleChange}\r\n                        label=\"Email\"/>\r\n                    <Field\r\n                        id=\"password\"\r\n                        inputType=\"PASSWORD\"\r\n                        name=\"password\"\r\n                        value = {password}\r\n                        errorlabel = {error.password}\r\n                        onChange = {this.handleChange}\r\n                        label=\"Password\"/>\r\n                    <Field\r\n                        id=\"re-password\"\r\n                        inputType=\"PASSWORD\"\r\n                        name=\"rePassword\"\r\n                        value = {rePassword}\r\n                        errorlabel = {error.rePassword}\r\n                        onChange = {this.handleChange}\r\n                        label=\"Re-enter password\"/>\r\n                    <button\r\n                        className=\"btn btn-block _primary_bg\"\r\n                        onClick={this.handleSubmit}>\r\n                        Create your account\r\n                    </button>\r\n                    <span className=\"_text_sm\">\r\n                        Already have an account?<Link to=\"/user/login\"> Sign-In </Link>\r\n                    </span>\r\n                </Tile>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Signup);","import { React, Link, Route, Switch, useRouteMatch } from \"../library\";\r\n\r\nimport Login from \"../components/loginSignup/login\";\r\nimport Signup from \"../components/loginSignup/signup\";\r\n\r\nconst LoginSignupPage = () => {\r\n    const {path} = useRouteMatch();\r\n    return(\r\n        <div className=\"col-lg-4 col-md-6 col-sm-8 col-xs-8 offset-lg-4 offset-md-3 offset-sm-2 offset-xs-2\">\r\n            <Link to=\"/\">\r\n                <div className=\"text-center _vertical_space\">\r\n                    <img src={\"../logo.png\"} alt=\"UKART\" style={{ width: \"13rem\" }} className=\"img-responsive\" />\r\n                </div>\r\n            </Link>\r\n            <Switch>\r\n                <Route path={`${path}/register`} component={Signup} />\r\n                <Route path={`${path}`} component={Login} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginSignupPage;","import { React, Component, Link } from \"../../library\";\r\n\r\nclass Breadcrum extends Component{\r\n    render(){\r\n        const {sections} = this.props;\r\n        return(\r\n            <div className=\"container ml-0 pt-3 pb-3\">\r\n                <div className = \"row\">\r\n                    {\r\n                        sections.map( section => (\r\n                            <span key={section.id} className=\"_flex_container small\">\r\n                                {section.link ? (\r\n                                    <Link to={section.link} className=\"_flex_item\">{section.name}</Link> ) :\r\n                                    <span className=\"_flex_item\">{section.name}</span>\r\n                                }\r\n                                {section.link && <span className=\"_flex_item\">&#8811;</span>}\r\n                            </span> \r\n                            )\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Breadcrum;","import { React, Component, connect, withRouter } from \"../../library\";\r\n\r\nimport { getCartItems } from \"../../redux/cart/cart.selector\";\r\nimport { addItemToCart } from '../../redux/cart/cart.action';\r\nimport { isCartHasThisItem } from \"../../utils/cartUtils\";\r\n\r\nimport APP_CONST from \"../../APP_CONST\";\r\n\r\nconst mapStateToProps = () => ({\r\n  cartItems: getCartItems()\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addItemToCart: (item) => dispatch(addItemToCart(item))\r\n});\r\n\r\nclass ProductLeftSection extends Component {\r\n  addToCart = () =>{\r\n    const { addItemToCart, product, cartItems, history } = this.props;\r\n    if(!isCartHasThisItem(cartItems, product)){\r\n      addItemToCart(product);\r\n    }\r\n    history.push('/cart');\r\n  } \r\n  \r\n  buyNow = () => {\r\n    const { addItemToCart, product, cartItems, history } = this.props;\r\n    if(!isCartHasThisItem(cartItems, product)){\r\n      addItemToCart(product);\r\n    }\r\n    history.push(`/checkout?${APP_CONST.QUERY.PRODUCT_ID}=${product.productId}`);\r\n  }\r\n  \r\n  render() {\r\n    const { productImages, productName } = this.props.product;\r\n    return (\r\n      <div>\r\n        <img className=\"img-thumbnail\" src={productImages[0]} alt={productName} />\r\n        <br /><br />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-7\">\r\n            <button className=\"btn btn-dark btn-md btn-block\" onClick={this.buyNow}>\r\n              <i className=\"material-icons _align_middle\">play_arrow</i>\r\n              <span className=\"align-straight _align_middle\">Buy Now</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"col-md-5\">\r\n            <button className=\"btn btn-outline-dark btn-md btn-block\" onClick={this.addToCart}>\r\n              <i className=\"material-icons _align_middle\">shopping_cart</i>\r\n              <span className=\"align-straight _align_middle\">Add to Cart</span> \r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProductLeftSection));","import { React, Component } from \"../../library\";\r\n\r\nimport { calculatePriceAfterDiscount, calculateSavingPrice, numberToPrice } from \"../../utils/util\";\r\n\r\nexport default class ProductRightSection extends Component {\r\n    render() {\r\n        const { productName, rating, productActualPrice, discount, description, highlights } = this.props.product;\r\n        return (\r\n          <div>\r\n            <h4>{productName}</h4>\r\n              <h6><span className=\"badge badge-primary\">{rating}</span></h6>\r\n              <table>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>MRP </td>\r\n                    <td>: <strike>&#8377; {productActualPrice}</strike></td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Price </td>\r\n                    <td>: <span className=\"_text_lg_dark\">\r\n                            &#8377; {numberToPrice(calculatePriceAfterDiscount(productActualPrice, discount))}\r\n                          </span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>You Save </td>\r\n                    <td>: <span>\r\n                            &#8377; {numberToPrice(calculateSavingPrice(productActualPrice, discount))} ({discount}%)\r\n                          </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table><br/>\r\n              <h5>Description</h5>\r\n              <p>{description}</p>\r\n              <h5>Highlight</h5>\r\n              <ul>{highlights.map((highlight, key) => <li key={key}>{highlight}</li>)}\r\n              </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { React, Component, connect, isNotEmpty } from \"../../library\";\r\n\r\nimport ProductLeftSection from \"./productLeftSection\";\r\nimport ProductRightSection from \"./productRightSection\";\r\n\r\nimport { getSelectedProduct } from \"../../redux/product/product.selector\";\r\n\r\nconst mapStateToProps = () => ({\r\n    product: getSelectedProduct()\r\n});\r\n\r\nclass ProductDetails extends Component {\r\n    render(){\r\n        const { product } = this.props;\r\n        return (\r\n            isNotEmpty(product) && (\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                        <ProductLeftSection product={product}/>\r\n                    </div>\r\n                    <div className=\"col-md-7\">\r\n                        <ProductRightSection product={product}/>\r\n                    </div>\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ProductDetails);","import { React, Component, connect } from \"../library\";\r\n\r\nimport Footer from \"../components/misc/footer\";\r\nimport Header from \"../components/misc/header\";\r\nimport Directory from \"../components/misc/directory\";\r\nimport Breadcrum from \"../components/misc/breadcrum\";\r\nimport ProductDetails from \"../components/product/productDetails\";\r\n\r\nimport { getHomeProducts } from \"../redux/product/product.selector\";\r\nimport { setCurrentProduct } from \"../redux/product/product.action\";\r\nimport { getProductById, getBreadcrumSections } from \"../utils/util\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    const availableProducts = getHomeProducts();\r\n    const selectedProduct = getProductById(availableProducts, props.match.params.productId);\r\n    const breadcrumSections = getBreadcrumSections(selectedProduct);\r\n    return { \r\n        selectedProduct, \r\n        breadcrumSections \r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCurrentProduct: (selectedProduct) => dispatch(setCurrentProduct(selectedProduct))\r\n});\r\n\r\nclass ProductPage extends Component {\r\n    componentDidMount(){\r\n        const { setCurrentProduct, selectedProduct } = this.props;\r\n        setCurrentProduct(selectedProduct);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n                <Directory/>\r\n                <div className =\"container\">\r\n                    <Breadcrum sections={this.props.breadcrumSections}/>\r\n                    <ProductDetails/>\r\n                </div>\r\n                <Footer/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductPage);","import { React, Component } from \"../../library\";\r\n\r\nimport ProductOverview from \"./productOverview\";\r\n\r\nclass ProductList extends Component{\r\n    render(){\r\n        const {products} = this.props;\r\n        return(\r\n            <div className = \"row\">\r\n                { products.map( (product) => <ProductOverview product={product} key={product.productId}/>) }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductList;\r\n","import { React, Component, connect } from \"../library\";\r\n\r\nimport Footer from \"../components/misc/footer\";\r\nimport Header from \"../components/misc/header\";\r\nimport Directory from \"../components/misc/directory\";\r\nimport Breadcrum from \"../components/misc/breadcrum\";\r\nimport ProductList from \"../components/product/productList\";\r\n\r\nimport { getHomeProducts } from \"../redux/product/product.selector\";\r\nimport { getProductsByType, getBreadcrumSections } from \"../utils/util\";\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    const products = getHomeProducts();\r\n    let productsByType, breadcrumSections;\r\n    if( props.match.params.subCategory ){\r\n        productsByType = getProductsByType(products, props.match.params.subCategory, 'subCategory');\r\n        breadcrumSections = getBreadcrumSections([props.match.params.category, props.match.params.subCategory]);\r\n    }\r\n    else{\r\n        productsByType = getProductsByType(products, props.match.params.category, 'category');\r\n        breadcrumSections = getBreadcrumSections([props.match.params.category]);\r\n    }\r\n    return {\r\n        productsByType,\r\n        breadcrumSections \r\n    };\r\n};\r\n\r\nclass DirectoryPage extends Component {\r\n    render(){\r\n        const {productsByType, breadcrumSections} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n                <Directory/>\r\n                <div className =\"container\">\r\n                    <Breadcrum sections = {breadcrumSections}/>\r\n                    <ProductList products = {productsByType}/>\r\n                </div>\r\n                <Footer/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DirectoryPage);","import { React, Component, Link, connect, Tile } from \"../../library\";\r\nimport { getCustomerLoginStatus } from \"../../redux/customer/customer.selector\";\r\n\r\nconst mapStateToProps = () => ({\r\n    Loggedin: getCustomerLoginStatus()\r\n});\r\n\r\nclass EmptyCart extends Component {\r\n    loggedInCartSection = () =>{\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"text-center\">\r\n                    <p className=\"blockquote mb-0 mt-3\">Your cart is empty!</p>\r\n                    <p><small>Add items to it now</small></p>\r\n                </div>\r\n                <div className=\"offset-md-2 col-md-8\">\r\n                    <Link to=\"/\" className=\"btn btn-block _primary_bg\"> Shop now </Link>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    \r\n    loggedOutCartSection = () =>{\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"text-center\">\r\n                    <p className=\"blockquote mb-0 mt-3\">Missing Cart items?</p>\r\n                    <p><small>Login to see the items you added previously</small></p>\r\n                </div>\r\n                <div className=\"offset-md-2 col-md-8\">\r\n                    <Link to=\"/user/login\" className=\"btn btn-block _primary_bg\"> Login </Link>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { Loggedin } = this.props;\r\n        return (\r\n            <Tile className =\"container mt-4\"> \r\n                <div className =\"row justify-content-md-center\">\r\n                    <div className =\"col-md-4 mt-4 mb-4\">\r\n                        <div className = \"text-center\">\r\n                            <img src={\"../empty-cart.png\"} alt=\"Empty cart\" style={{ width: \"13rem\" }} className=\"img-responsive\" />\r\n                            { Loggedin? this.loggedInCartSection(): this.loggedOutCartSection() }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Tile>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EmptyCart);","import { React, Component, connect, Tile } from '../library';\r\nimport { numberToPrice } from \"../utils/util\";\r\nimport { calculateCartActualPrice, calculateCartDiscountPrice } from \"../utils/cartUtils\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    const actualTotalPrice = numberToPrice(calculateCartActualPrice(props.items));\r\n    const discountPrice = numberToPrice(calculateCartDiscountPrice(props.items));\r\n    return{\r\n        actualTotalPrice ,\r\n        discountPrice,\r\n        totalItems: props.items.length,\r\n        totalPrice: numberToPrice(actualTotalPrice-discountPrice)\r\n    }\r\n}\r\n\r\nclass PriceDetail extends Component {\r\n    render() {\r\n        const {totalItems, actualTotalPrice, discountPrice, totalPrice} = this.props;\r\n        return (\r\n            <div>\r\n                <Tile>\r\n                    <h6 className=\"text-muted\">PRICE DETAILS</h6>\r\n                    <hr/>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <p>Price ({`${totalItems} item${totalItems>1? 's': ''}`})</p> \r\n                        <p>₹{actualTotalPrice}</p>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <p>Discount</p> \r\n                        <p className=\"text-success\">- ₹{discountPrice} </p>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <p>Delivery Charges</p> \r\n                        <p>₹40 </p>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <h5>Total Amount</h5> \r\n                        <h5>₹{totalPrice} </h5>\r\n                    </div>\r\n                    <hr/>\r\n                    <p className=\"text-success\">You will save ₹{discountPrice} on this order</p> \r\n                </Tile>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PriceDetail)","import { React, Component, Link } from \"../library\";\r\n\r\nimport { calculatePriceAfterDiscount } from \"../utils/util\";\r\n\r\nexport default class ItemList extends Component {\r\n    render() {\r\n        const { items, handleRemoveItem } = this.props;\r\n        return (items.map((item, index) => {\r\n            const {brand, productName, productActualPrice, discount, productId, productImages} = item;\r\n                return(<div key={productId}>\r\n                    {index>0 && <hr/>}\r\n                    <div className=\"mt-2 row\">\r\n                        <div className=\"col-md-2 col-sm-2 col-2\">\r\n                            <Link to={`product/${productId}`}><img className=\"img-thumbnail\" src={productImages[0]} alt={productName} /></Link>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-6 col-6\">\r\n                            <Link to={`product/${productId}`}><p className=\"blockquote _cut_text\">{productName}</p></Link>\r\n                            <h6 className=\"text-muted\">{brand}</h6>\r\n                            <div>\r\n                                <strong className=\"mr-2\">₹{calculatePriceAfterDiscount(productActualPrice, discount, 2)}</strong>\r\n                                <s className=\"mr-2\">{productActualPrice}</s>\r\n                                <small className=\"text-success\"><strong>{discount}% off</strong></small>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3 col-sm-3 col-3\">\r\n                            <p><small>Delivery in 2 days, Mon | ₹40 </small></p>\r\n                        </div>\r\n                        <div className=\"col-md-1 col-sm-1 col-1\">\r\n                            <div className=\"_absolute_top_right\">\r\n                                <span className=\"btn text-danger\" onClick={() => handleRemoveItem(productId)}>\r\n                                    <span className=\"material-icons\">delete</span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            })\r\n        )\r\n    }\r\n}\r\n","import { React, Component, connect, Link, Tile } from \"../library\";\r\n\r\nimport Header from \"../components/misc/header\";\r\nimport Footer from \"../components/misc/footer\";\r\nimport EmptyCart from \"../components/cart/emptyCart\";\r\nimport PriceDetail from \"../components/priceDetail\";\r\nimport ItemList from \"../components/itemList\";\r\n\r\nimport { getCartItems } from '../redux/cart/cart.selector';\r\nimport { removeItemFromCart } from \"../redux/cart/cart.action\";\r\n\r\nconst mapStateToProps = () => ({ \r\n    cartItems : getCartItems()\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    removeItemFromCart: (productId) => dispatch(removeItemFromCart(productId))\r\n});\r\n\r\nclass CartPage extends Component {\r\n    render(){\r\n        const { cartItems, removeItemFromCart } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Header hideCart={true}/>\r\n                { (cartItems.length === 0)? <EmptyCart/>:(\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mt-4\">\r\n                            <div className=\"col-md-8\"> \r\n                                <Tile>\r\n                                    <h5>{`My Cart (${cartItems.length})`}</h5><hr/>\r\n                                    <ItemList items={cartItems} handleRemoveItem ={removeItemFromCart}/>\r\n                                </Tile>\r\n                                <Tile>\r\n                                    <div className= \"float-right\">\r\n                                        <Link to=\"./checkout\" \r\n                                            className=\"btn btn-dark btn-lg px-5\" \r\n                                            onClick={this.handlePlaceOrder}> \r\n                                                <small>PLACE ORDER</small>  \r\n                                        </Link>\r\n                                    </div>\r\n                                </Tile>\r\n                            </div>\r\n                            <div className=\"col-md-4\"> \r\n                                <PriceDetail items={cartItems}/> \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) }\r\n                <Footer/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartPage);","import CHECKOUT_CONST from './checkout.const';\r\n\r\nexport const initializeCheckoutSteps = () => ({\r\n    type: CHECKOUT_CONST.CHECKOUT_INITIALIZE,\r\n    payload: {  stepOne:{status:false}, \r\n                stepTwo:{status:false}, \r\n                stepThree:{status:false}, \r\n                stepFour:{status:false}\r\n            }\r\n});\r\n\r\nexport const setCheckoutStepStatus = (step, status) => ({\r\n    type: CHECKOUT_CONST.STEP_STATUS,\r\n    payload: {step, status}\r\n});\r\n\r\nexport const setSelectedAddressId = (addressId) => ({\r\n    type: CHECKOUT_CONST.DELIVERY_ADDRESS_SELECTED,\r\n    payload: addressId\r\n});\r\n\r\nexport const setConfirmedAddressId = (addressId) => ({\r\n    type: CHECKOUT_CONST.DELIVERY_ADDRESS_CONFIRMED,\r\n    payload: addressId\r\n});\r\n\r\nexport const moveItemsToCheckout = (cartItems) => ({\r\n    type: CHECKOUT_CONST.ITEMS_TO_CHECKOUT,\r\n    payload: cartItems\r\n});\r\n\r\nexport const removeItemFromCheckout = productId => ({\r\n    type: CHECKOUT_CONST.REMOVE_ITEM,\r\n    payload: productId\r\n});\r\n\r\nexport const terminateCheckout = () => ({\r\n    type: CHECKOUT_CONST.CHECKOUT_TERMINATE,\r\n    payload: {}\r\n});","import { React, Component, connect, withRouter, Link, Tile} from \"../../library\";\r\n\r\nimport { getCustomerLoginStatus, getCustomerName } from \"../../redux/customer/customer.selector\";\r\nimport { getCustomerLoginToken } from \"../../redux/customer/customer.selector\";\r\nimport { getCartItems } from \"../../redux/cart/cart.selector\";\r\nimport { getCheckoutStepStatus } from \"../../redux/checkout/checkout.selector\";\r\nimport { logoutCustomer } from \"../../redux/customer/customer.action\";\r\nimport { setCheckoutStepStatus } from \"../../redux/checkout/checkout.action\";\r\nimport { emptyCart } from \"../../redux/cart/cart.action\";\r\nimport { setLoader, setErrorMessage } from \"../../redux/misc/misc.action\";\r\n\r\nimport { mapCartProductsToIds } from \"../../utils/cartUtils\";\r\nimport  APP_CONST from \"../../APP_CONST\";\r\nimport * as api from \"../../api/api\";\r\n\r\nconst mapStateToProps = () => ({\r\n    customerName: getCustomerName(),\r\n    customerLoginToken: getCustomerLoginToken(),\r\n    cartItems: getCartItems(),\r\n    isLoggedIn: getCustomerLoginStatus(),\r\n    stepOneStatus: getCheckoutStepStatus(APP_CONST.STEP.ONE)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    logoutCustomer: () => dispatch(logoutCustomer()),\r\n    emptyCart: () => dispatch(emptyCart()),\r\n    setLoader: (status) => dispatch(setLoader(status)),\r\n    setErrorMessage: (errors) => dispatch(setErrorMessage(errors)),\r\n    setCheckoutStatus: (step, status) => dispatch(setCheckoutStepStatus(step, status))\r\n});\r\n\r\nclass LoginCheck extends Component {\r\n    getHeaderContent = (color) => (\r\n        <React.Fragment>\r\n            <span className={`badge badge-${color} px-2 py-1`}>1</span>\r\n            <span className=\"text-muted px-3\"><strong>LOGIN</strong></span>\r\n        </React.Fragment>\r\n    );\r\n\r\n    logoutAndSignin = () =>{\r\n        const {cartItems, customerLoginToken, emptyCart, logoutCustomer, setLoader, setErrorMessage, history} = this.props;\r\n        const cartProductIds = mapCartProductsToIds(cartItems);\r\n        setLoader(true);\r\n        api.saveCartItems(cartProductIds, customerLoginToken).then( response => {\r\n            response && emptyCart();\r\n            logoutCustomer();\r\n            history.push('/');\r\n            setLoader(false);\r\n        }, reject => {\r\n            setErrorMessage([reject]);\r\n            setLoader(false);\r\n        });\r\n    }\r\n\r\n    changeDetail = () =>{\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.ONE, APP_CONST.OPEN);\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.TWO, false);\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.THREE, false);\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.FOUR, false);\r\n    }\r\n\r\n    continueCheckout = () =>{\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.ONE, APP_CONST.CHECKED);\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.TWO, APP_CONST.OPEN);\r\n    }\r\n\r\n    showUncheckedLogin = () => (\r\n        this.props.isLoggedIn? (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5\">\r\n                        <div className=\"small py-1\">\r\n                            <span className=\"text-muted\">Name</span>\r\n                            <strong className=\"ml-2\">{this.props.customerName}</strong>\r\n                        </div>\r\n                        <button className=\"btn btn-link p-0\" onClick={this.logoutAndSignin}><small>Logout & Sign in to another account</small></button>\r\n                        <button className=\"btn btn-dark btn-block btn-lg my-3\" onClick={this.continueCheckout}><small> CONTINUE CHECKOUT </small></button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <small className=\"col-md-12 text-muted\"> Please note that upon clicking \"Logout\" you will lose all items in cart and will be redirected to home page</small>\r\n                </div>\r\n            </div>):(\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <Link to={\"./user/login\"} className=\"btn btn-dark btn-block btn-lg my-3\"><small> LOGIN TO CHECKOUT </small></Link>\r\n                </div>\r\n                <small className=\"col-md-12 text-muted\"> Please note that upon clicking \"Login\" your last saved cart items will be added with current cart items</small>\r\n            </div>\r\n        )\r\n    );\r\n\r\n    showCheckedLogin = () => (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9 col-sm-9 col-9\">\r\n                    {this.getHeaderContent('light')}\r\n                    <span className=\"text-dark\"><strong>&#x2713;</strong></span>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <button className=\"btn btn-outline-dark float-right\" onClick={this.changeDetail}>Change</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-10 pl-5 ml-2\">\r\n                    <small><strong>{this.props.customerName}</strong></small>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n    render() {\r\n        const {stepOneStatus} = this.props;\r\n        return (\r\n            <Tile\r\n                className=\"mb-3\"\r\n                headerClass =\"_primary_bg\"\r\n                header={stepOneStatus === APP_CONST.OPEN && this.getHeaderContent('dark')}>\r\n                { stepOneStatus === APP_CONST.CHECKED? this.showCheckedLogin(): this.showUncheckedLogin() }\r\n            </Tile>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginCheck));","import { React, Component, connect, Tile, Field } from \"../../../library\";\r\n\r\nimport { getCustomerLoginToken } from \"../../../redux/customer/customer.selector\";\r\nimport { setLoader, setErrorMessage } from \"../../../redux/misc/misc.action\";\r\nimport { setCustomerAddresses } from \"../../../redux/customer/customer.action\";\r\nimport { setConfirmedAddressId, setCheckoutStepStatus } from \"../../../redux/checkout/checkout.action\";\r\nimport { validateName, validateMobileNumber, validatePincode, validateText } from \"../../../utils/loginUtils\";\r\n\r\nimport APP_CONST from \"../../../APP_CONST\";\r\nimport * as api from \"../../../api/api\";\r\n\r\nconst mapStateToProps = () => ({\r\n    loginToken: getCustomerLoginToken()\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setLoader: (status) => dispatch(setLoader(status)),\r\n    setErrorMessage: (error) => dispatch(setErrorMessage(error)),\r\n    setCustomerAddresses: (addresses) => dispatch(setCustomerAddresses(addresses)),\r\n    setConfirmedAddressId: (addressId) => dispatch(setConfirmedAddressId(addressId)),\r\n    setCheckoutStepStatus: (step, status) => dispatch(setCheckoutStepStatus(step, status))\r\n});\r\n\r\nconst INITIAL_STATE = {\r\n    receiverName: \"\",\r\n    receiverMobile: \"\",\r\n    area: \"\",\r\n    pincode:\"\",\r\n    city:\"\",\r\n    state:\"\",\r\n    landmark:\"\",\r\n    addressType:\"\",\r\n    error :{\r\n        receiverName:\"\",\r\n        receiverMobile:\"\",\r\n        area:\"\",\r\n        pincode:\"\",\r\n        city:\"\",\r\n        state:\"\",\r\n        landmark:\"\",\r\n        addressType:\"\"\r\n    }\r\n};\r\n\r\nclass AddressForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = INITIAL_STATE;\r\n    }\r\n    \r\n    componentDidMount(){\r\n        const {address} = this.props;\r\n        if(address){\r\n            this.setState({...address})\r\n        }\r\n    }\r\n\r\n    validateForm = () => {\r\n        const error = {};\r\n        error.receiverName = validateName(this.state.receiverName);\r\n        error.receiverMobile = validateMobileNumber(this.state.receiverMobile);\r\n        error.pincode = validatePincode(this.state.pincode);\r\n        error.area = validateText(this.state.area, \"Please enter valid area\");\r\n        error.city = validateText(this.state.city, \"Please enter valid city\");\r\n        error.state = validateText(this.state.state, \"Please enter valid State\");\r\n        this.setState({error});\r\n        return !(error.receiverName||error.receiverMobile||error.pincode||error.area||error.city||error.state);\r\n    }\r\n    \r\n    setAsDeliveryAddress = addressId => {\r\n        // how to set the deliveryaddress for a newly added address which doesn't have _id, causing extra to completes\r\n        if(addressId){ \r\n            this.props.setConfirmedAddressId(addressId);\r\n        }\r\n        this.props.closeform();\r\n        if(addressId){\r\n            this.props.setCheckoutStepStatus(APP_CONST.STEP.TWO, APP_CONST.CHECKED);\r\n            this.props.setCheckoutStepStatus(APP_CONST.STEP.THREE, APP_CONST.OPEN);\r\n        }\r\n    }\r\n\r\n    saveAndDeliver = event => {\r\n        const {loginToken, setLoader, setErrorMessage, setCustomerAddresses, address} = this.props; \r\n        const {error, ...deliveryAddress} = this.state;\r\n        const serviceApi = address? api.updateCustomerAddress: api.addCustomerAddress;\r\n        event.preventDefault();\r\n        if(this.validateForm()){\r\n            setLoader(true);\r\n            serviceApi(deliveryAddress, loginToken).then( response => {\r\n                setCustomerAddresses(response.addresses);\r\n                this.setAsDeliveryAddress(deliveryAddress._id);\r\n                setLoader(false);\r\n            }, reject =>{\r\n                setErrorMessage([reject]);\r\n                setLoader(false);\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n        const error = {...this.state.error};\r\n        error[name] = \"\";\r\n        this.setState({ [name]: value });\r\n        this.setState({ error });\r\n    };\r\n\r\n    render() {\r\n        const {closeform, address} = this.props;\r\n        const {receiverName, receiverMobile, area, pincode, city, state, landmark, addressType, error} = this.state;\r\n        const title = address?\"EDIT ADDRESS\":\"ADD A NEW ADDRESS\";\r\n        return (\r\n            <Tile title= {<h6 className=\"text-muted\">{title}</h6>}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <Field\r\n                            id=\"receiver-name\" \r\n                            inputType=\"TEXTBOX\"\r\n                            name=\"receiverName\"\r\n                            value = {receiverName}\r\n                            errorlabel = {error.receiverName}\r\n                            onChange = {this.handleChange}\r\n                            label = \"Name\"/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <Field\r\n                            id=\"receiver-mobile\" \r\n                            inputType=\"NUMBER\"\r\n                            maxLength=\"10\"\r\n                            name=\"receiverMobile\"\r\n                            value = {receiverMobile}\r\n                            errorlabel = {error.receiverMobile}\r\n                            onChange = {this.handleChange}\r\n                            label = \"10-digit mobile number\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <Field\r\n                        id=\"area\"\r\n                        inputType=\"TEXTBOX\"\r\n                        name=\"area\"\r\n                        value={area}\r\n                        errorlabel = {error.area}\r\n                        onChange={this.handleChange}\r\n                        label=\"Address (Area and Street)\" />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <Field\r\n                            id=\"pincode\" \r\n                            inputType=\"NUMBER\"\r\n                            maxLength=\"6\"\r\n                            name=\"pincode\"\r\n                            value = {pincode}\r\n                            errorlabel = {error.pincode}\r\n                            onChange = {this.handleChange}\r\n                            label = \"Pincode\"/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <Field\r\n                            id=\"city\" \r\n                            inputType=\"TEXTBOX\"\r\n                            name=\"city\"\r\n                            value = {city}\r\n                            errorlabel = {error.city}\r\n                            onChange = {this.handleChange}\r\n                            label = \"City/District/Town\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <Field\r\n                            id=\"state\" \r\n                            inputType=\"TEXTBOX\"\r\n                            name=\"state\"\r\n                            value = {state}\r\n                            errorlabel = {error.state}\r\n                            onChange = {this.handleChange}\r\n                            label = \"State\"/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <Field\r\n                            id=\"landmark\" \r\n                            inputType=\"TEXTBOX\"\r\n                            name=\"landmark\"\r\n                            value = {landmark}\r\n                            onChange = {this.handleChange}\r\n                            label = \"Landmark (Optional)\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div><label className=\"_text_sm_dark\">Address Type</label></div>\r\n                    <Field\r\n                        id=\"address-type-h\"\r\n                        inputType=\"RADIO\"\r\n                        name=\"addressType\"\r\n                        value=\"H\"\r\n                        checked={addressType === 'H'}\r\n                        onChange={this.handleChange}\r\n                        label=\"Home (All day delivery)\" />\r\n                    <Field\r\n                        id=\"address-type-w\"\r\n                        inputType=\"RADIO\"\r\n                        name=\"addressType\"\r\n                        value=\"W\"\r\n                        checked={addressType === 'W'}\r\n                        onChange={this.handleChange}\r\n                        label=\"Work (Delivery between 10AM - 5PM)\" />\r\n                </div>\r\n                <div className=\"row py-3\">\r\n                    <div className=\"col-md-5\">\r\n                        <button \r\n                            className=\"btn btn-dark btn-block btn-lg\" \r\n                            onClick={this.saveAndDeliver}>\r\n                                <small>SAVE AND DELIVER HERE</small>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <button \r\n                            className=\"btn btn-light btn-lg\" \r\n                            onClick={closeform}>\r\n                                <small>CANCEL</small>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </Tile>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddressForm);","import { React, Component, connect, Tile } from '../../../library';\r\nimport { setSelectedAddressId, setConfirmedAddressId, setCheckoutStepStatus } from \"../../../redux/checkout/checkout.action\";\r\nimport APP_CONST from '../../../APP_CONST';\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setSelectedAddressId: (id) => dispatch(setSelectedAddressId(id)),\r\n    setConfirmedAddressId: (id) => dispatch(setConfirmedAddressId(id)),\r\n    setCheckoutStatus: (step, status) => dispatch(setCheckoutStepStatus(step, status))\r\n});\r\n\r\nclass AddressDetails extends Component {\r\n    getAddressType = (type) =>{\r\n        return type && <span className=\" badge badge-secondary mx-2\">{ type === 'H'? \"HOME\": \"WORK\"}</span>\r\n    }\r\n    \r\n    editAddress = (id) =>{\r\n        this.props.setEditAddressId(id);\r\n    }\r\n\r\n    handleSelectedAddress = (id) => {\r\n        this.props.setSelectedAddressId(id);\r\n    }\r\n\r\n    handleDeliveryAddress = (id) => {\r\n        this.props.setConfirmedAddressId(id);\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.TWO, APP_CONST.CHECKED);\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.THREE, APP_CONST.OPEN);\r\n    }\r\n    \r\n    render() {\r\n        const { address, selectedAddressId } = this.props;\r\n        const isSelectedAddress = selectedAddressId === address._id;\r\n        const selectClass = isSelectedAddress? \"card border-dark\": \"\";\r\n        return (\r\n            <Tile className={`${selectClass} _pointer _hoverable`} onClick={() => this.handleSelectedAddress(address._id)}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-10\">\r\n                        <div className=\"small\">\r\n                            <span className=\"mr-2\"><strong>{address.receiverName}</strong></span>\r\n                            {this.getAddressType(address.addressType)}\r\n                            <span className=\"mx-2\"><strong>{address.receiverMobile}</strong></span>\r\n                        </div>\r\n                        <div className=\"small my-3\">\r\n                            <span>{`${address.area}, `}</span>\r\n                            <span>{`${address.city}, `}</span>\r\n                            <span>{`${address.state} - `}</span>\r\n                            <span><strong>{address.pincode}</strong></span>\r\n                        </div>\r\n                    </div>\r\n                    {isSelectedAddress && <div className=\"col\">\r\n                        <button\r\n                            className=\"btn btn-light text-primary float-right _text_sm_dark\"\r\n                            onClick={() => this.editAddress(address._id)}>EDIT</button>\r\n                    </div>}\r\n                </div>\r\n                {isSelectedAddress && <div className=\"row\">\r\n                    <div className=\"col-lg-4 col-md-6 col-sm-6 col-xs-12\">\r\n                        <button \r\n                            className=\"btn btn-dark btn-block btn-lg my-3\" \r\n                            onClick={() => this.handleDeliveryAddress(address._id)}>\r\n                                <small> DELIVER HERE </small>\r\n                        </button>    \r\n                    </div>\r\n                </div>}\r\n            </Tile>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddressDetails);","import { React, Component, connect } from \"../../../library\";\r\n\r\nimport AddressForm from './addressForm';\r\nimport AddressDetails from './addressDetails';\r\n\r\nimport { getSelectedAddressId } from \"../../../redux/checkout/checkout.selector\";\r\n\r\nconst mapStateToProps = () => ({\r\n    selectedAddressId: getSelectedAddressId()\r\n});\r\n\r\nclass AddressList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = { editAddressId: \"\" }\r\n    }\r\n\r\n    setEditAddressId = (id) => {\r\n        this.setState({editAddressId:id});\r\n    }\r\n    \r\n    closeform =() =>{\r\n        this.setState({editAddressId:\"\"});\r\n    }\r\n\r\n    render() {\r\n        const {addresses, selectedAddressId} = this.props;\r\n        const {editAddressId} = this.state;\r\n        return (\r\n            addresses.map(address => (\r\n                editAddressId === address._id?(\r\n                    <AddressForm \r\n                        key={address._id} \r\n                        address={address}\r\n                        closeform={this.closeform}/>):(\r\n                    <AddressDetails \r\n                        key={address._id}\r\n                        address={address}\r\n                        selectedAddressId={selectedAddressId}\r\n                        setEditAddressId={this.setEditAddressId}/>\r\n                )\r\n            ))\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddressList);","import { React, Component, connect, Tile } from \"../../../library\";\r\n\r\nimport AddressForm from \"./addressForm\";\r\nimport AddressList from \"./addressList\";\r\n\r\nimport { getCustomerLoginToken, getCustomerAddresses } from \"../../../redux/customer/customer.selector\";\r\nimport { getCheckoutStepStatus, getConfirmedAddressId, getSelectedAddressId } from \"../../../redux/checkout/checkout.selector\";\r\nimport { setCustomerAddresses } from \"../../../redux/customer/customer.action\";\r\nimport { setCheckoutStepStatus, setSelectedAddressId } from \"../../../redux/checkout/checkout.action\";\r\nimport { setLoader, setErrorMessage } from \"../../../redux/misc/misc.action\";\r\n\r\nimport { getAddressById } from \"../../../utils/util\";\r\nimport APP_CONST from '../../../APP_CONST';\r\nimport * as api from \"../../../api/api\";\r\n\r\nconst mapStateToProps = () => {\r\n    const addresses = getCustomerAddresses();\r\n    const addressId = getConfirmedAddressId();\r\n    return {\r\n        logintoken: getCustomerLoginToken(),\r\n        addresses,\r\n        stepTwoStatus: getCheckoutStepStatus(APP_CONST.STEP.TWO),\r\n        confirmedAddress: getAddressById(addresses, addressId),\r\n        selectedAddress: getSelectedAddressId()}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCustomerAddresses: (addresses) => dispatch(setCustomerAddresses(addresses)),\r\n    setLoader: (status) => dispatch(setLoader(status)),\r\n    setErrorMessage: (errors) => dispatch(setErrorMessage(errors)),\r\n    setCheckoutStatus: (step, status) => dispatch(setCheckoutStepStatus(step, status)),\r\n    setSelectedAddressId: (id) => dispatch(setSelectedAddressId(id))\r\n});\r\n\r\nclass DeliveryAddressCheck extends Component { \r\n    constructor(props){\r\n        super(props);\r\n        this.state = { addAddress : false }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const {logintoken, setCustomerAddresses, setLoader, setErrorMessage, stepTwoStatus} = this.props;\r\n        if(prevProps.stepTwoStatus === false && stepTwoStatus === APP_CONST.OPEN ){\r\n            setLoader(true);\r\n            api.getCustomerAddresses(logintoken).then( response => {\r\n                setCustomerAddresses(response.addresses);\r\n                this.setDefaultSelectedAddress(response.addresses);\r\n                setLoader(false);\r\n            }, reject => {\r\n                setErrorMessage([reject]);\r\n                setLoader(false);\r\n            })\r\n        }\r\n    }\r\n\r\n    setDefaultSelectedAddress = (addresses) =>{\r\n        const {selectedAddress, setSelectedAddressId} = this.props;\r\n        if(!selectedAddress && addresses.length > 0)\r\n            setSelectedAddressId(addresses[0]._id);\r\n    }\r\n    \r\n    getHeaderContent = (color) => (\r\n        <React.Fragment>\r\n            <span className={`badge badge-${color} px-2 py-1`}>2</span>\r\n            <span className=\"text-muted px-3\"><strong>DELIVERY ADDRESS</strong></span>\r\n        </React.Fragment>\r\n    );\r\n\r\n    changeDetail = () =>{\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.TWO, APP_CONST.OPEN);\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.THREE, false);\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.FOUR, false);\r\n    }\r\n\r\n    toggleAddressform = () => {\r\n        this.setState({addAddress:!this.state.addAddress})\r\n    }\r\n\r\n    showUncheckedDeliveryAddress = () => {\r\n        const { addresses, stepTwoStatus } = this.props;\r\n        const { addAddress } = this.state;\r\n        return (\r\n           stepTwoStatus?(\r\n            <div className=\"container\">\r\n                {addresses.length>0 && <AddressList addresses ={addresses}/>}\r\n                {addAddress ?\r\n                    <AddressForm closeform = {this.toggleAddressform}/>:\r\n                    <Tile \r\n                        title={<div \r\n                                className=\"text-primary _pointer\" \r\n                                onClick={this.toggleAddressform}> \r\n                                    + Add a new address\r\n                                </div>}\r\n                    /> \r\n                }\r\n            </div>):\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9 col-sm-9 col-9\">\r\n                    {this.getHeaderContent('light')}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    showCheckedDeliveryAddress = () => {\r\n        const {confirmedAddress} = this.props;\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-9 col-sm-9 col-9\">\r\n                        {this.getHeaderContent('light')}\r\n                        <span className=\"text-dark\"><strong>&#x2713;</strong></span>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <button className=\"btn btn-outline-dark float-right\" onClick={this.changeDetail}>Change</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-10 pl-5 ml-2\">\r\n                        <small>\r\n                            <strong>{`${confirmedAddress.receiverName} `}</strong> \r\n                            <span>{`${confirmedAddress.area}, `}</span>\r\n                            <span>{`${confirmedAddress.city}, `}</span>\r\n                            <span>{`${confirmedAddress.state} - `}</span>\r\n                            <span><strong>{confirmedAddress.pincode}</strong></span>\r\n                        </small>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {stepTwoStatus} = this.props;\r\n        return (\r\n            <Tile\r\n                className=\"mb-3\"\r\n                headerClass =\"_primary_bg\"\r\n                header={stepTwoStatus === APP_CONST.OPEN && this.getHeaderContent('dark')}>\r\n                {stepTwoStatus === APP_CONST.CHECKED? this.showCheckedDeliveryAddress(): this.showUncheckedDeliveryAddress()}\r\n            </Tile>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeliveryAddressCheck);","import { React, Component, connect, Tile, DialogModal } from \"../../../library\";\r\n\r\nimport ItemList from '../../itemList';\r\n\r\nimport { getCheckoutStepStatus, getCheckoutItems } from \"../../../redux/checkout/checkout.selector\";\r\nimport { setCheckoutStepStatus, removeItemFromCheckout } from \"../../../redux/checkout/checkout.action\";\r\n\r\nimport APP_CONST from \"../../../APP_CONST\";\r\n\r\nconst mapStateToProps = () => ({\r\n    stepThreeStatus: getCheckoutStepStatus(APP_CONST.STEP.THREE),\r\n    checkoutItems: getCheckoutItems()\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    removeItemFromCheckout: (productId) => dispatch(removeItemFromCheckout(productId)),\r\n    setCheckoutStatus: (step, status) => dispatch(setCheckoutStepStatus(step, status))\r\n});\r\n\r\nclass OrderSummaryCheck extends Component {\r\n    changeDetail = () =>{\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.THREE, APP_CONST.OPEN);\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.FOUR, false);\r\n    }\r\n\r\n    getHeaderContent = (color) => (\r\n        <React.Fragment>\r\n            <span className={`badge badge-${color} px-2 py-1`}>3</span>\r\n            <span className=\"text-muted px-3\"><strong>ORDER SUMMARY</strong></span>\r\n        </React.Fragment>\r\n    );\r\n\r\n    confirmCheckoutItem = () =>{\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.THREE, APP_CONST.CHECKED);\r\n        this.props.setCheckoutStatus(APP_CONST.STEP.FOUR, APP_CONST.OPEN);\r\n    }\r\n    \r\n    moveItemfromCheckout = (productId) => {\r\n        this.props.removeItemFromCheckout(productId);\r\n    }\r\n\r\n    showUncheckedOrderSummary = () =>{\r\n        const { stepThreeStatus, checkoutItems } = this.props;\r\n        return( \r\n            stepThreeStatus?(\r\n                checkoutItems.length?<React.Fragment>\r\n                    <ItemList items={checkoutItems} handleRemoveItem= {this.moveItemfromCheckout}/>\r\n                    <Tile>\r\n                        <div className=\"float-right\">\r\n                            <button \r\n                                className=\"btn btn-dark btn-lg px-5\" \r\n                                onClick={this.confirmCheckoutItem}>\r\n                                    <small> CONTINUE </small>\r\n                            </button>    \r\n                        </div>\r\n                    </Tile>\r\n                </React.Fragment>:\r\n                <small>Your checkout has no items.</small>\r\n            ):\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9 col-sm-9 col-9\">\r\n                    {this.getHeaderContent('light')}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    showCheckedOrderSummary = () =>{\r\n        const {checkoutItems} = this.props;\r\n        const checkedItem = `${checkoutItems.length} item${checkoutItems.length>1? 's': \"\"}`\r\n        return( \r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-9 col-sm-9 col-9\">\r\n                        {this.getHeaderContent('light')}\r\n                        <span className=\"text-dark\"><strong>&#x2713;</strong></span>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <button className=\"btn btn-outline-dark float-right\" onClick={this.changeDetail}>Change</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-10 pl-5 ml-2\">\r\n                        <small>\r\n                            <strong>{ checkedItem }</strong> \r\n                        </small>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {stepThreeStatus, checkoutItems} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Tile\r\n                    className=\"mb-3\"\r\n                    headerClass =\"_primary_bg\"\r\n                    header={stepThreeStatus === APP_CONST.OPEN && this.getHeaderContent('dark')}>\r\n                    {stepThreeStatus === APP_CONST.CHECKED? this.showCheckedOrderSummary(): this.showUncheckedOrderSummary()}\r\n                </Tile>\r\n                { !checkoutItems.length && <DialogModal/> }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderSummaryCheck);","import { React, Component, connect, Tile, withRouter } from \"../../../library\";\r\n\r\nimport { getCheckoutStepStatus } from \"../../../redux/checkout/checkout.selector\";\r\nimport { getCustomerLoginToken } from \"../../../redux/customer/customer.selector\";\r\nimport { getCartItems } from \"../../../redux/cart/cart.selector\";\r\nimport { setCheckoutStepStatus } from \"../../../redux/checkout/checkout.action\";\r\nimport { cleanCartAndAddItems } from \"../../../redux/cart/cart.action\";\r\nimport { setLoader, setErrorMessage, setSuccessMessage } from \"../../../redux/misc/misc.action\";\r\nimport { prepareOrderDetails } from \"../../../utils/util\";\r\nimport { removeSelectedProducts } from \"../../../utils/cartUtils\";\r\n\r\nimport APP_CONST from \"../../../APP_CONST\";\r\nimport * as api from \"../../../api/api\";\r\n\r\nconst mapStateToProps = () => ({\r\n    stepFourStatus: getCheckoutStepStatus(APP_CONST.STEP.FOUR),\r\n    loginToken: getCustomerLoginToken(),\r\n    cartItems: getCartItems()\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCheckoutStatus: (step, status) => dispatch(setCheckoutStepStatus(step, status)),\r\n    setLoader: (status) => dispatch(setLoader(status)),\r\n    setErrorMessage: (error) => dispatch(setErrorMessage(error)),\r\n    setSuccessMessage: (success) => dispatch(setSuccessMessage(success)),\r\n    cleanCartAndAddItems: (items) => dispatch(cleanCartAndAddItems(items))\r\n});\r\n\r\nclass PaymentOptionCheck extends Component {\r\n    getHeaderContent = (color) => (\r\n        <React.Fragment>\r\n            <span className={`badge badge-${color} px-2 py-1`}>4</span>\r\n            <span className=\"text-muted px-3\"><strong>PAYMENT OPTIONS</strong></span>\r\n        </React.Fragment>\r\n    );\r\n    \r\n    confirmOrder = () =>{\r\n        const { loginToken, setLoader, setErrorMessage, setSuccessMessage, \r\n                setCheckoutStatus, cartItems, history, cleanCartAndAddItems } = this.props; \r\n        const orderDetails = prepareOrderDetails();\r\n        setCheckoutStatus(APP_CONST.STEP.FOUR, APP_CONST.CHECKED);\r\n        setLoader(true);\r\n        api.placeOrder(orderDetails, loginToken).then( response => {\r\n            setSuccessMessage([response.message]);\r\n            cleanCartAndAddItems(removeSelectedProducts(response.orderedProducts, cartItems));\r\n            setLoader(false);\r\n            history.push(\"/orders\"); //redirect to order tracking page\r\n        }, reject => {\r\n            setErrorMessage([reject]);\r\n            setLoader(false);\r\n        })\r\n    }\r\n\r\n    showUncheckedPaymentOption = () =>{\r\n        const { stepFourStatus } = this.props;\r\n        return( \r\n            stepFourStatus?(<Tile>\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"col\">Cash on delivery</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <button \r\n                            className=\"btn btn-dark btn-lg px-5\"\r\n                            onClick={this.confirmOrder}>\r\n                                <small> CONFIRM ORDER </small>\r\n                        </button> \r\n                    </div>\r\n                </div>\r\n            </Tile>):\r\n            <div className=\"row\">\r\n                <div className=\"col-md-9 col-sm-9 col-9\">\r\n                    {this.getHeaderContent('light')}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    showCheckedPaymentOption = () => (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-9 col-sm-9 col-9\">\r\n                {this.getHeaderContent('light')}\r\n                <span className=\"text-dark\"><strong>&#x2713;</strong></span>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    render() {\r\n        const {stepFourStatus} = this.props;\r\n        return (\r\n            <Tile\r\n                className=\"mb-3\"\r\n                headerClass =\"_primary_bg\"\r\n                header={stepFourStatus === APP_CONST.OPEN && this.getHeaderContent('dark')}>\r\n                {stepFourStatus === APP_CONST.CHECKED? this.showCheckedPaymentOption(): this.showUncheckedPaymentOption()}\r\n            </Tile>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PaymentOptionCheck));","import { React, Component, connect } from \"../library\";\r\n\r\nimport Header  from \"../components/misc/header\";\r\nimport LoginCheck from \"../components/checkout/loginCheck\";\r\nimport DeliveryAddressCheck from \"../components/checkout/deliveryAddress/deliveryAddressCheck\";\r\nimport OrderSummaryCheck from \"../components/checkout/orderSummary/orderSummaryCheck\";\r\nimport PaymentOptionCheck from \"../components/checkout/paymentOption/paymentOptionCheck\";\r\nimport PriceDetail from \"../components/priceDetail\";\r\n\r\nimport { getCustomerLoginStatus } from \"../redux/customer/customer.selector\";\r\nimport { getCheckoutItems, getCheckoutStepStatus } from \"../redux/checkout/checkout.selector\";\r\nimport { getCartItems } from '../redux/cart/cart.selector';\r\nimport { getHomeProducts } from '../redux/product/product.selector';\r\nimport { setCheckoutStepStatus, moveItemsToCheckout, initializeCheckoutSteps, terminateCheckout } from \"../redux/checkout/checkout.action\";\r\nimport { mergeCustomerCart } from \"../redux/cart/cart.action\";\r\n\r\nimport { beforeUnloadListener, getProductById, parseQuery } from \"../utils/util\";\r\nimport APP_CONST from \"../APP_CONST\";\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    const query = parseQuery(props.location.search);\r\n    return{\r\n        cartItems: getCartItems(),\r\n        loginCheck: getCustomerLoginStatus(),\r\n        checkoutItems: getCheckoutItems(),\r\n        paymentCheck: getCheckoutStepStatus(APP_CONST.STEP.FOUR),\r\n        products: getHomeProducts(),\r\n        queriedProductId: query.get(APP_CONST.QUERY.PRODUCT_ID)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    initializeCheckout: () => dispatch(initializeCheckoutSteps()),\r\n    moveItemsToCheckout: (cartItems) => dispatch(moveItemsToCheckout(cartItems)),\r\n    setCheckoutStepStatus: (step, status) => dispatch(setCheckoutStepStatus(step,status)),\r\n    mergeCustomerCart: (checkoutItems) => dispatch(mergeCustomerCart(checkoutItems)),\r\n    terminateCheckout: () => dispatch(terminateCheckout())\r\n});\r\n\r\nclass CheckoutPage extends Component {\r\n    componentDidMount(){\r\n        window.addEventListener('beforeunload', beforeUnloadListener);\r\n        const { loginCheck, setCheckoutStepStatus, initializeCheckout, moveItemsToCheckout, cartItems, products, queriedProductId } = this.props;\r\n        const item = queriedProductId? getProductById(products, queriedProductId): null;\r\n        initializeCheckout();\r\n        moveItemsToCheckout(item? [item]: cartItems);\r\n        setCheckoutStepStatus(APP_CONST.STEP.ONE, loginCheck? APP_CONST.CHECKED: APP_CONST.OPEN);\r\n        setCheckoutStepStatus(APP_CONST.STEP.TWO, loginCheck? APP_CONST.OPEN: false);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n        this.props.terminateCheckout();\r\n    }\r\n\r\n    render() {\r\n        const {checkoutItems} = this.props;\r\n        const checkoutSecionClass = checkoutItems.length? \"col-md-8\": \"offset-2 col-md-8\";\r\n        return (\r\n            <React.Fragment>\r\n                <Header hideCart={true} hideLogin={true}/>\r\n                <div className = 'container-fluid'>\r\n                    <div className='row mt-4'>\r\n                        <div className = {checkoutSecionClass}>\r\n                            <LoginCheck/>\r\n                            <DeliveryAddressCheck/>\r\n                            <OrderSummaryCheck/>\r\n                            <PaymentOptionCheck/>\r\n                        </div>\r\n                        {checkoutItems.length > 0 && <div className=\"col-md-4\">\r\n                            <PriceDetail items={checkoutItems}/>\r\n                        </div>}\r\n                    </div> \r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutPage);","import { React, Component, Tile, withRouter } from \"../../library\";\r\nimport { getFormattedDate } from \"../../utils/util\";\r\nimport APP_CONST from \"../../APP_CONST\";\r\n\r\nclass OrderOverview extends Component{\r\n    navigateToOrderDetail = () =>{\r\n        this.props.history.push(`/order-details/${this.props.orderId}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Tile className =\"_pointer _hoverable mt-2\" onClick={this.navigateToOrderDetail}>\r\n                <div className =\"row\">\r\n                    <div className=\"col-md-2 col-4\">\r\n                        <img className=\"img-thumbnail\" src={this.props.thumnail} alt={this.props.productName} />\r\n                    </div>\r\n                    <div className=\"col-md-4 col-5\">\r\n                        <p className=\"_cut_text\">{this.props.productName}</p>\r\n                        <p className=\"small text-muted\">Seller: {this.props.sellerId}</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 col-3\">\r\n                        <p>₹{this.props.price}</p>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-12\">\r\n                        <small>\r\n                            <span className=\"badge badge-success mr-2\"> </span> \r\n                            <strong>{this.props.status} on {getFormattedDate(this.props.orderedDate, APP_CONST.DATE_FORMAT.MDtY)} </strong>\r\n                        </small>\r\n                    </div>\r\n                </div>\r\n            </Tile>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(OrderOverview);","import { React, Component, connect } from \"../../library\";\r\n\r\nimport OrderOverview from \"../../components/orders/orderOverview\";\r\n\r\nimport { getCustomerOrders } from \"../../redux/customer/customer.selector\";\r\nimport { mapProductsInOrders, numberToPrice, getCurrentStatus, getCurrentStatusDate, sortByCreatedAt } from \"../../utils/util\";\r\n\r\nconst mapStatetoProps = () => {\r\n    return {\r\n        orders : sortByCreatedAt(mapProductsInOrders(getCustomerOrders()))\r\n    } \r\n}\r\n\r\nclass OrdersList extends Component{\r\n    render(){\r\n        return this.props.orders.map(order => {\r\n            const {product} = order;\r\n            return(\r\n                <OrderOverview\r\n                    key = {order.orderId}\r\n                    orderId= {order.orderId}\r\n                    productId = {product.productId}\r\n                    productName = {product.productName}\r\n                    thumnail = {product.productImage}\r\n                    sellerId = {product.sellerId}\r\n                    price = {numberToPrice(order.orderPrice)}\r\n                    status = {getCurrentStatus(order.statusTrack)}\r\n                    orderedDate = {getCurrentStatusDate(order.statusTrack)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(OrdersList);","import { React, Component, connect } from \"../library\";\r\n\r\nimport Header from \"../components/misc/header\";\r\nimport Footer from \"../components/misc/footer\";\r\nimport Directory from \"../components/misc/directory\";\r\nimport OrdersList from \"../components/orders/ordersList\";\r\n\r\nimport { setCustomerOrders } from \"../redux/customer/customer.action\";\r\nimport { setLoader, setErrorMessage } from \"../redux/misc/misc.action\";\r\n\r\nimport * as api from \"../api/api\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCustomerOrders: (orders) => dispatch(setCustomerOrders(orders)),\r\n    setLoader: (status) => dispatch(setLoader(status)),\r\n    setErrorMessage: (errors) => dispatch(setErrorMessage(errors))\r\n});\r\n\r\nclass OrdersPage extends Component {\r\n    componentDidMount(){\r\n        const { setCustomerOrders, setLoader, setErrorMessage } = this.props;\r\n        setLoader(true);\r\n        api.getOrders().then( response => {\r\n            setCustomerOrders(response);\r\n            setLoader(false);\r\n        }, reject => {\r\n            setErrorMessage([reject]);\r\n            setLoader(false);\r\n        })\r\n    }\r\n    render() {  \r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n                <Directory/>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"offset-md-1 col-md-10\">\r\n                            <OrdersList />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(OrdersPage);","import { React, Component } from \"../../library\";\r\n\r\nclass OrderedProduct extends Component{\r\n    render(){\r\n        return(\r\n            <div className =\"row\">\r\n                <div className=\"col-4\">\r\n                    <img className=\"img-thumbnail\" src={this.props.thumnail} alt={this.props.productName} />\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <div className=\"_cut_text\">{this.props.productName}</div>\r\n                    <p className=\"small text-muted\">Seller: {this.props.sellerId}</p>\r\n                    <h6>₹{this.props.price}</h6>\r\n                </div>\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default OrderedProduct;","import { React, Component } from \"../../library\";\r\n\r\nclass OrderedAddress extends Component{\r\n    render(){\r\n        return(\r\n            <div className =\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h6>Delivery Address</h6>\r\n                    <small>\r\n                        <div className=\"font-weight-bold my-2\">{this.props.address.receiverName}</div>\r\n                        <div>{this.props.address.area}, {this.props.address.landmark}</div>\r\n                        <div>{this.props.address.city} - {this.props.address.pincode}, {this.props.address.state}</div>\r\n                    </small>\r\n                    <small>\r\n                        <div className=\"font-weight-bold mt-2\">Phone number</div>\r\n                        <div>{this.props.address.receiverMobile}</div>\r\n                    </small>\r\n                </div>\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default OrderedAddress;","import { React, Component } from \"../../library\";\r\n\r\nimport { mapOrderStatusDetails } from \"../../utils/util\";\r\n\r\nclass OrderTracker extends Component {\r\n    render() {\r\n        const tracks = mapOrderStatusDetails(this.props.statusTrack);\r\n        const completion = (tracks.filter(track=>track.statusCd).length-1) * 33;\r\n         //may i need a better approach\r\n        const style = { background : `linear-gradient(90deg, #26a541 0 ${completion}%, #ccc ${completion}% 100%)` };\r\n        return (\r\n            <div className=\"_tracker_line\" style={style}>\r\n                {tracks.map(track => (\r\n                    <div\r\n                        key={track._id}\r\n                        className={`${track.statusCd?\"_tracker_point_complete\":\"_tracker_point_incomplete\"}`}\r\n                        date={track.date}\r\n                        status={track.status}>\r\n                    </div>) )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderTracker;","import { React, Component, connect, Tile } from \"../library\";\r\n\r\nimport Header from \"../components/misc/header\";\r\nimport Footer from \"../components/misc/footer\";\r\nimport Directory from \"../components/misc/directory\";\r\nimport OrderedProduct from \"../components/orders/orderedProduct\";\r\nimport OrderedAddress from \"../components/orders/orderedAddress\";\r\nimport OrderTracker from \"../components/orders/orderTracker\";\r\n\r\nimport { getCustomerOrders } from \"../redux/customer/customer.selector\";\r\nimport { mapProductsInOrders, numberToPrice } from \"../utils/util\";\r\n\r\nconst mapStateToProps = (state, props) =>{\r\n    const [ order ] = mapProductsInOrders([getCustomerOrders().find(order=> order.orderId === props.match.params.orderId)]);\r\n    return { order };\r\n};\r\n\r\nclass OrderDetailsPage extends Component{\r\n    render(){\r\n        const { order } = this.props;\r\n        const { product } = order;\r\n        return(\r\n            <React.Fragment>\r\n                <Header/>\r\n                <Directory/>\r\n                <Tile className=\"container my-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <OrderedAddress address={order.deliveryAddress}/>\r\n                        </div>\r\n                    </div>\r\n                </Tile>\r\n                <Tile className=\"container my-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            <OrderedProduct\r\n                                productId={product.productId}\r\n                                productName={product.productName}\r\n                                thumnail={product.productImage}\r\n                                sellerId={product.sellerId}\r\n                                price={numberToPrice(order.orderPrice)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <OrderTracker statusTrack = {order.statusTrack}/>\r\n                        </div>\r\n                    </div>\r\n                </Tile>\r\n                <Footer/>\r\n            </React.Fragment>)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrderDetailsPage);","import { React, Route, Switch, connect, Loader, Notifier } from \"./library\";\r\n\r\nimport HomePage from \"./pages/homePage\";\r\nimport LoginSignupPage from \"./pages/loginSignupPage\";\r\nimport ProductPage from \"./pages/productPage\";\r\nimport DirectoryPage from \"./pages/directoryPage\";\r\nimport CartPage from \"./pages/cartPage\";\r\nimport CheckoutPage from \"./pages/checkoutPage\";\r\nimport OrdersPage from \"./pages/ordersPage\";\r\nimport OrderDetailsPage from \"./pages/orderDetailsPage\";\r\n\r\nimport { getLoaderStatus, getErrorMessages, getSuccessMessages } from \"./redux/misc/misc.selector\";\r\nimport APP_CONST from \"./APP_CONST\";\r\n\r\nconst mapStateToProps = () => ({\r\n  loaderOn: getLoaderStatus(),\r\n  errors: getErrorMessages(),\r\n  success: getSuccessMessages(),\r\n});\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const {errors, success, loaderOn} = this.props;\r\n    return (\r\n      <div>\r\n          { errors.length > 0 && <Notifier messageType={APP_CONST.FAILURE} messages={errors}/>}\r\n          { success.length > 0 && <Notifier messageType={APP_CONST.SUCCESS} messages={success}/>}\r\n          { loaderOn && <Loader/> }\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path=\"/user\" component={LoginSignupPage} />\r\n            <Route path=\"/cart\" component={CartPage} />\r\n            <Route path=\"/checkout\" component={CheckoutPage} />\r\n            <Route path=\"/orders\" component={OrdersPage} />\r\n            <Route path=\"/order-details/:orderId\" component={OrderDetailsPage} />\r\n            <Route path=\"/product/:productId\" component={ProductPage} />\r\n            <Route path=\"/:category/:subCategory\" component={DirectoryPage} />\r\n            <Route path=\"/:category\" component={DirectoryPage} />\r\n          </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { getValue } from \"../../library\";\r\nimport { store } from '../../redux/store';\r\n\r\nexport const getLoaderStatus = () => getValue(store.getState(), \"Misc.loader.status\", false);\r\n\r\nexport const getErrorMessages = () => getValue(store.getState(), \"Misc.error.message\", []);\r\n\r\nexport const getSuccessMessages = () => getValue(store.getState(), \"Misc.success.message\", []);","import { ReactDOM, React, BrowserRouter, Provider, PersistGate, ScrollToTop } from \"./library\";\r\nimport {store, persistor} from \"./redux/store\";\r\nimport App from \"./App\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/theme.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <BrowserRouter>\r\n      <ScrollToTop/>\r\n      <PersistGate persistor = {persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}